{
	"compiler": {
		"version": "0.8.20+commit.a1b79de6"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "FailedDeployment",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "balance",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "needed",
						"type": "uint256"
					}
				],
				"name": "InsufficientBalance",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "batchId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "address[]",
						"name": "tokens",
						"type": "address[]"
					},
					{
						"indexed": false,
						"internalType": "address[][]",
						"name": "vestingContracts",
						"type": "address[][]"
					}
				],
				"name": "BatchDeploymentCompleted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "batchId",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "creator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokenCount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "totalVestingSchedules",
						"type": "uint256"
					}
				],
				"name": "BatchDeploymentCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "FactoryInitialized",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "implementation",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "contractType",
						"type": "string"
					}
				],
				"name": "ImplementationUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "symbol",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "totalSupply",
						"type": "uint256"
					}
				],
				"name": "TokenDeployed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "vestingContract",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "beneficiary",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "cliff",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "duration",
						"type": "uint256"
					}
				],
				"name": "VestingDeployed",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "batchCounter",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "symbol",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "totalSupply",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "owner",
								"type": "address"
							}
						],
						"internalType": "struct TokenVestingFactory.TokenConfig[]",
						"name": "tokenConfigs",
						"type": "tuple[]"
					},
					{
						"components": [
							{
								"internalType": "address",
								"name": "beneficiary",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "cliff",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "duration",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "revocable",
								"type": "bool"
							}
						],
						"internalType": "struct TokenVestingFactory.VestingConfig[][]",
						"name": "vestingConfigsArray",
						"type": "tuple[][]"
					}
				],
				"name": "batchDeployTokens",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "batchId",
						"type": "bytes32"
					},
					{
						"internalType": "address[]",
						"name": "tokens",
						"type": "address[]"
					},
					{
						"internalType": "address[][]",
						"name": "vestingContractsArray",
						"type": "address[][]"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "batchDeployments",
				"outputs": [
					{
						"internalType": "address",
						"name": "creator",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenCount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalVestingSchedules",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "completed",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "createdAt",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "symbol",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "totalSupply",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "owner",
								"type": "address"
							}
						],
						"internalType": "struct TokenVestingFactory.TokenConfig",
						"name": "tokenConfig",
						"type": "tuple"
					},
					{
						"components": [
							{
								"internalType": "address",
								"name": "beneficiary",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "cliff",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "duration",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "revocable",
								"type": "bool"
							}
						],
						"internalType": "struct TokenVestingFactory.VestingConfig[]",
						"name": "vestingConfigs",
						"type": "tuple[]"
					}
				],
				"name": "deployTokenWithVesting",
				"outputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "address[]",
						"name": "vestingContracts",
						"type": "address[]"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "deployedTokens",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "batchId",
						"type": "bytes32"
					}
				],
				"name": "getBatchDeployment",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "creator",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "tokenCount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "totalVestingSchedules",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "completed",
								"type": "bool"
							},
							{
								"internalType": "address[]",
								"name": "tokens",
								"type": "address[]"
							},
							{
								"internalType": "address[][]",
								"name": "vestingContracts",
								"type": "address[][]"
							},
							{
								"internalType": "uint256",
								"name": "createdAt",
								"type": "uint256"
							}
						],
						"internalType": "struct TokenVestingFactory.BatchDeployment",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getImplementations",
				"outputs": [
					{
						"internalType": "address",
						"name": "tokenImpl",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "vestingImpl",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					}
				],
				"name": "getTokenVestingContracts",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					}
				],
				"name": "isDeployedToken",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "tokenImplementation",
				"outputs": [
					{
						"internalType": "contract VestedToken",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "tokenVestingContracts",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newTokenImpl",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "newVestingImpl",
						"type": "address"
					}
				],
				"name": "updateImplementations",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "vestingImplementation",
				"outputs": [
					{
						"internalType": "contract TokenVesting",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Factory contract for deploying ERC20 tokens with vesting schedules Uses minimal proxy pattern for gas-efficient deployment",
			"errors": {
				"FailedDeployment()": [
					{
						"details": "The deployment failed."
					}
				],
				"InsufficientBalance(uint256,uint256)": [
					{
						"details": "The ETH balance of the account is not enough to perform the operation."
					}
				],
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"batchDeployTokens((string,string,uint256,address)[],(address,uint256,uint256,uint256,bool)[][])": {
					"details": "Batch deploy multiple tokens with vesting schedules",
					"params": {
						"tokenConfigs": "Array of token configurations",
						"vestingConfigsArray": "Array of vesting configurations for each token"
					},
					"returns": {
						"batchId": "Unique batch deployment identifier",
						"tokens": "Array of deployed token addresses",
						"vestingContractsArray": "Array of vesting contract addresses for each token"
					}
				},
				"constructor": {
					"details": "Constructor - deploys implementation contracts"
				},
				"deployTokenWithVesting((string,string,uint256,address),(address,uint256,uint256,uint256,bool)[])": {
					"details": "Deploy a new ERC20 token with vesting schedules using minimal proxy",
					"params": {
						"tokenConfig": "Token configuration parameters",
						"vestingConfigs": "Array of vesting configurations"
					},
					"returns": {
						"token": "Address of the deployed token",
						"vestingContracts": "Array of deployed vesting contract addresses"
					}
				},
				"getBatchDeployment(bytes32)": {
					"details": "Get batch deployment information",
					"params": {
						"batchId": "Batch deployment identifier"
					},
					"returns": {
						"_0": "Batch deployment details"
					}
				},
				"getImplementations()": {
					"details": "Get implementation contract addresses",
					"returns": {
						"tokenImpl": "Token implementation address",
						"vestingImpl": "Vesting implementation address"
					}
				},
				"getTokenVestingContracts(address)": {
					"details": "Get all vesting contracts for a specific token",
					"params": {
						"token": "Address of the token"
					},
					"returns": {
						"_0": "Array of vesting contract addresses"
					}
				},
				"isDeployedToken(address)": {
					"details": "Check if a token was deployed by this factory",
					"params": {
						"token": "Address of the token to check"
					},
					"returns": {
						"_0": "True if deployed by this factory"
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"updateImplementations(address,address)": {
					"details": "Update implementation contracts (owner only)",
					"params": {
						"newTokenImpl": "New token implementation address",
						"newVestingImpl": "New vesting implementation address"
					}
				}
			},
			"title": "TokenVestingFactory",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"TokenVestingFactory.sol": "TokenVestingFactory"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/interfaces/IERC1363.sol": {
			"keccak256": "0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d",
			"license": "MIT",
			"urls": [
				"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100",
				"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d"
			]
		},
		"@openzeppelin/contracts/interfaces/IERC165.sol": {
			"keccak256": "0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc",
			"license": "MIT",
			"urls": [
				"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037",
				"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ"
			]
		},
		"@openzeppelin/contracts/interfaces/IERC20.sol": {
			"keccak256": "0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44",
			"license": "MIT",
			"urls": [
				"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d",
				"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF"
			]
		},
		"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
			"keccak256": "0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e",
			"license": "MIT",
			"urls": [
				"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23",
				"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR"
			]
		},
		"@openzeppelin/contracts/proxy/Clones.sol": {
			"keccak256": "0x7e918671c04972845975935ea13c9ce0be1228031ba0e929d0f1f68fd1f17214",
			"license": "MIT",
			"urls": [
				"bzz-raw://3027ebaeef3e678ad9bae26f0556469878e992bf7dec94bede328a92be529419",
				"dweb:/ipfs/Qmdu4RfMYv9Q7iHWuYfyUL6fZKc73nM4YWizNP8w1xay56"
			]
		},
		"@openzeppelin/contracts/security/Pausable.sol": {
			"keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
			"license": "MIT",
			"urls": [
				"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
				"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
			]
		},
		"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
			"license": "MIT",
			"urls": [
				"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
				"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
			]
		},
		"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
			"keccak256": "0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994",
			"license": "MIT",
			"urls": [
				"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c",
				"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2",
			"license": "MIT",
			"urls": [
				"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303",
				"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV"
			]
		},
		"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
			"keccak256": "0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f",
			"license": "MIT",
			"urls": [
				"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e",
				"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR"
			]
		},
		"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
			"keccak256": "0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5",
			"license": "MIT",
			"urls": [
				"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508",
				"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"@openzeppelin/contracts/utils/Create2.sol": {
			"keccak256": "0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06",
			"license": "MIT",
			"urls": [
				"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e",
				"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC"
			]
		},
		"@openzeppelin/contracts/utils/Errors.sol": {
			"keccak256": "0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123",
			"license": "MIT",
			"urls": [
				"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf",
				"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c",
			"license": "MIT",
			"urls": [
				"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617",
				"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u"
			]
		},
		"TokenVesting.sol": {
			"keccak256": "0xb13677af72fe1ba63143a978b9992171b981c236ba5a9f386cb8f60beb23800b",
			"license": "MIT",
			"urls": [
				"bzz-raw://c75d127f03a2757018891d0b8c687fa6aca307e03fe4c87c2db3873224d71d7e",
				"dweb:/ipfs/Qmcp5auqwVwteHQvcSaskFxNqSZRQZFQPRaFTa1P3DZYBR"
			]
		},
		"TokenVestingFactory.sol": {
			"keccak256": "0x3fbfc7510185fdd1d5afa10fd1edfd6768813f2297913e78cb461812272bd48d",
			"license": "MIT",
			"urls": [
				"bzz-raw://94f8eac3ef9958cdfc23b5777caa978138eb1aa5b1f1ede62ce1e4b1e2afc951",
				"dweb:/ipfs/QmVG5bB755vHzSp4gX6866HYM3EitDjbb4CCCCi7mDMNqe"
			]
		},
		"VestedToken.sol": {
			"keccak256": "0x059e4e66c43997e4b5018f8575ecff1619b01ba3564b9bd76d58ac881d07fdd3",
			"license": "MIT",
			"urls": [
				"bzz-raw://9d04514fc9c334f11d59f6074a5022534717f3b3f4ae3f49f8c900cb5e74c510",
				"dweb:/ipfs/QmdRasB512mGWBFZVEY4hxDHS1UbqtqERhWzs95bkgN2Mt"
			]
		}
	},
	"version": 1
}