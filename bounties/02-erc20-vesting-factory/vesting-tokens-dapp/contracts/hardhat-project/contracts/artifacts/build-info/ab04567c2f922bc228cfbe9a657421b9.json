{
	"id": "ab04567c2f922bc228cfbe9a657421b9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"TokenVesting.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ncontract TokenVesting is Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    // Vesting parameters\n    IERC20 public token;\n    address public beneficiary;\n    uint256 public cliff;\n    uint256 public start;\n    uint256 public duration;\n    uint256 public totalAmount;\n    uint256 public released;\n    bool public revocable;\n    bool public revoked;\n\n    // Initialization flag for minimal proxy\n    bool private _initialized;\n\n    // Events\n    event TokensReleased(address indexed beneficiary, uint256 amount);\n    event VestingRevoked(address indexed beneficiary, uint256 unreleased);\n    event VestingInitialized(\n        address indexed token,\n        address indexed beneficiary,\n        uint256 totalAmount,\n        uint256 cliff,\n        uint256 duration,\n        bool revocable\n    );\n\n    /**\n     * @dev Constructor for minimal proxy pattern - should not be called directly\n     */\n    constructor() Ownable(msg.sender) {\n        // This constructor is only for the implementation contract\n        // Actual initialization happens in initialize() function\n    }\n\n    /**\n     * @dev Initialize function for minimal proxy pattern\n     * @param _token Token contract address\n     * @param _beneficiary Beneficiary address\n     * @param _totalAmount Total vesting amount\n     * @param _cliff Cliff duration in seconds\n     * @param _duration Total vesting duration in seconds\n     * @param _revocable Whether vesting is revocable\n     * @param _owner Owner address\n     */\n    function initialize(\n        address _token,\n        address _beneficiary,\n        uint256 _totalAmount,\n        uint256 _cliff,\n        uint256 _duration,\n        bool _revocable,\n        address _owner\n    ) external {\n        require(!_initialized, \"Already initialized\");\n        require(_token != address(0), \"Invalid token address\");\n        require(_beneficiary != address(0), \"Invalid beneficiary address\");\n        require(_totalAmount > 0, \"Total amount must be greater than 0\");\n        require(_duration > 0, \"Duration must be greater than 0\");\n        require(_cliff <= _duration, \"Cliff cannot exceed duration\");\n        require(_owner != address(0), \"Invalid owner address\");\n\n        token = IERC20(_token);\n        beneficiary = _beneficiary;\n        totalAmount = _totalAmount;\n        cliff = _cliff;\n        duration = _duration;\n        revocable = _revocable;\n        start = block.timestamp;\n        released = 0;\n        revoked = false;\n        _initialized = true;\n\n        _transferOwnership(_owner);\n\n        emit VestingInitialized(\n            _token,\n            _beneficiary,\n            _totalAmount,\n            _cliff,\n            _duration,\n            _revocable\n        );\n    }\n\n    /**\n     * @dev Check if vesting contract is initialized\n     */\n    function isInitialized() external view returns (bool) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Release vested tokens to beneficiary\n     */\n    function release() external nonReentrant {\n        require(!revoked, \"Vesting has been revoked\");\n        require(msg.sender == beneficiary || msg.sender == owner(), \"Unauthorized\");\n\n        uint256 unreleased = releasableAmount();\n        require(unreleased > 0, \"No tokens to release\");\n\n        released += unreleased;\n        token.safeTransfer(beneficiary, unreleased);\n\n        emit TokensReleased(beneficiary, unreleased);\n    }\n\n    /**\n     * @dev Revoke vesting (owner only, if revocable)\n     */\n    function revoke() external onlyOwner {\n        require(revocable, \"Vesting is not revocable\");\n        require(!revoked, \"Vesting already revoked\");\n\n        revoked = true;\n        \n        // Calculate unvested amount (total amount minus vested amount)\n        uint256 vested = vestedAmount();\n        uint256 unvested = totalAmount - vested;\n        \n        if (unvested > 0) {\n            token.safeTransfer(owner(), unvested);\n        }\n\n        emit VestingRevoked(beneficiary, unvested);\n    }\n\n    /**\n     * @dev Calculate the amount of tokens that can be released\n     * @return Amount of tokens that can be released\n     */\n    function releasableAmount() public view returns (uint256) {\n        return vestedAmount() - released;\n    }\n\n    /**\n     * @dev Calculate the total amount of tokens that have vested\n     * @return Total vested amount\n     */\n    function vestedAmount() public view returns (uint256) {\n        if (revoked) {\n            return 0;\n        }\n\n        uint256 currentTime = block.timestamp;\n        \n        // Before cliff ends, no tokens are vested\n        if (currentTime < start + cliff) {\n            return 0;\n        }\n        \n        // After duration, all tokens are vested\n        if (currentTime >= start + duration) {\n            return totalAmount;\n        }\n        \n        // During linear vesting period (after cliff but before end)\n        uint256 timeElapsed = currentTime - start - cliff;\n        uint256 vestingDuration = duration - cliff;\n        \n        // Calculate linear portion: (timeElapsed / vestingDuration) * totalAmount\n        uint256 linearAmount = (totalAmount * timeElapsed) / vestingDuration;\n        \n        return linearAmount;\n    }\n\n    /**\n     * @dev Get vesting information\n     * @return _token Token address\n     * @return _beneficiary Beneficiary address\n     * @return _totalAmount Total vesting amount\n     * @return _released Released amount\n     * @return _cliff Cliff duration\n     * @return _start Start time\n     * @return _duration Total duration\n     * @return _revocable Whether revocable\n     * @return _revoked Whether revoked\n     */\n    function getVestingInfo() external view returns (\n        address _token,\n        address _beneficiary,\n        uint256 _totalAmount,\n        uint256 _released,\n        uint256 _cliff,\n        uint256 _start,\n        uint256 _duration,\n        bool _revocable,\n        bool _revoked\n    ) {\n        return (\n            address(token),\n            beneficiary,\n            totalAmount,\n            released,\n            cliff,\n            start,\n            duration,\n            revocable,\n            revoked\n        );\n    }\n\n    /**\n     * @dev Get current vesting status\n     * @return _vestedAmount Total vested amount\n     * @return _releasableAmount Releasable amount\n     * @return _remainingAmount Remaining amount\n     * @return _timeElapsed Time elapsed since start\n     * @return _timeRemaining Time remaining until full vesting\n     */\n    function getVestingStatus() external view returns (\n        uint256 _vestedAmount,\n        uint256 _releasableAmount,\n        uint256 _remainingAmount,\n        uint256 _timeElapsed,\n        uint256 _timeRemaining\n    ) {\n        uint256 currentTime = block.timestamp;\n        uint256 timeElapsed = currentTime > start ? currentTime - start : 0;\n        uint256 timeRemaining = currentTime < start + duration ? start + duration - currentTime : 0;\n        \n        return (\n            vestedAmount(),\n            releasableAmount(),\n            totalAmount - released,\n            timeElapsed,\n            timeRemaining\n        );\n    }\n\n    /**\n     * @dev Check if vesting has started\n     * @return True if vesting has started\n     */\n    function hasStarted() external view returns (bool) {\n        return block.timestamp >= start;\n    }\n\n    /**\n     * @dev Check if cliff period has ended\n     * @return True if cliff period has ended\n     */\n    function cliffEnded() external view returns (bool) {\n        return block.timestamp >= start + cliff;\n    }\n\n    /**\n     * @dev Check if vesting has ended\n     * @return True if vesting has ended\n     */\n    function hasEnded() external view returns (bool) {\n        return block.timestamp >= start + duration;\n    }\n\n    /**\n     * @dev Emergency function to recover tokens sent to this contract by mistake\n     * @param _token Token address to recover\n     * @param _amount Amount to recover\n     */\n    function emergencyRecover(address _token, uint256 _amount) external onlyOwner {\n        require(_token != address(token), \"Cannot recover vesting token\");\n        IERC20(_token).safeTransfer(owner(), _amount);\n    }\n} "
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122010988353efbce536d30200ae43528d544b3410b51f44b72e98aa73e93f6dc97664736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122010988353efbce536d30200ae43528d544b3410b51f44b72e98aa73e93f6dc97664736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT SWAP9 DUP4 MSTORE8 0xEF 0xBC 0xE5 CALLDATASIZE 0xD3 MUL STOP 0xAE NUMBER MSTORE DUP14 SLOAD 0x4B CALLVALUE LT 0xB5 0x1F PREVRANDAO 0xB7 0x2E SWAP9 0xAA PUSH20 0xE93F6DC97664736F6C6343000814003300000000 ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122010988353efbce536d30200ae43528d544b3410b51f44b72e98aa73e93f6dc97664736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT SWAP9 DUP4 MSTORE8 0xEF 0xBC 0xE5 CALLDATASIZE 0xD3 MUL STOP 0xAE NUMBER MSTORE DUP14 SLOAD 0x4B CALLVALUE LT 0xB5 0x1F PREVRANDAO 0xB7 0x2E SWAP9 0xAA PUSH20 0xE93F6DC97664736F6C6343000814003300000000 ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122010988353efbce536d30200ae43528d544b3410b51f44b72e98aa73e93f6dc97664736f6c63430008140033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"TokenVesting.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TokenVesting.sol": {
				"TokenVesting": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensReleased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "cliff",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "revocable",
									"type": "bool"
								}
							],
							"name": "VestingInitialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "unreleased",
									"type": "uint256"
								}
							],
							"name": "VestingRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "beneficiary",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cliff",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cliffEnded",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "duration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "emergencyRecover",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getVestingInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_beneficiary",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_totalAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_released",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_cliff",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_duration",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_revocable",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "_revoked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getVestingStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_vestedAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_releasableAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_remainingAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_timeElapsed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_timeRemaining",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hasEnded",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hasStarted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_beneficiary",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_totalAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_cliff",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_duration",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_revocable",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isInitialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "releasableAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "release",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "released",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "revocable",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "revoke",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "revoked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "start",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vestedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"cliffEnded()": {
								"details": "Check if cliff period has ended",
								"returns": {
									"_0": "True if cliff period has ended"
								}
							},
							"constructor": {
								"details": "Constructor for minimal proxy pattern - should not be called directly"
							},
							"emergencyRecover(address,uint256)": {
								"details": "Emergency function to recover tokens sent to this contract by mistake",
								"params": {
									"_amount": "Amount to recover",
									"_token": "Token address to recover"
								}
							},
							"getVestingInfo()": {
								"details": "Get vesting information",
								"returns": {
									"_beneficiary": "Beneficiary address",
									"_cliff": "Cliff duration",
									"_duration": "Total duration",
									"_released": "Released amount",
									"_revocable": "Whether revocable",
									"_revoked": "Whether revoked",
									"_start": "Start time",
									"_token": "Token address",
									"_totalAmount": "Total vesting amount"
								}
							},
							"getVestingStatus()": {
								"details": "Get current vesting status",
								"returns": {
									"_releasableAmount": "Releasable amount",
									"_remainingAmount": "Remaining amount",
									"_timeElapsed": "Time elapsed since start",
									"_timeRemaining": "Time remaining until full vesting",
									"_vestedAmount": "Total vested amount"
								}
							},
							"hasEnded()": {
								"details": "Check if vesting has ended",
								"returns": {
									"_0": "True if vesting has ended"
								}
							},
							"hasStarted()": {
								"details": "Check if vesting has started",
								"returns": {
									"_0": "True if vesting has started"
								}
							},
							"initialize(address,address,uint256,uint256,uint256,bool,address)": {
								"details": "Initialize function for minimal proxy pattern",
								"params": {
									"_beneficiary": "Beneficiary address",
									"_cliff": "Cliff duration in seconds",
									"_duration": "Total vesting duration in seconds",
									"_owner": "Owner address",
									"_revocable": "Whether vesting is revocable",
									"_token": "Token contract address",
									"_totalAmount": "Total vesting amount"
								}
							},
							"isInitialized()": {
								"details": "Check if vesting contract is initialized"
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"releasableAmount()": {
								"details": "Calculate the amount of tokens that can be released",
								"returns": {
									"_0": "Amount of tokens that can be released"
								}
							},
							"release()": {
								"details": "Release vested tokens to beneficiary"
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"revoke()": {
								"details": "Revoke vesting (owner only, if revocable)"
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"vestedAmount()": {
								"details": "Calculate the total amount of tokens that have vested",
								"returns": {
									"_0": "Total vested amount"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TokenVesting.sol\":298:8428  contract TokenVesting is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"TokenVesting.sol\":1207:1382  constructor() Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"TokenVesting.sol\":1229:1239  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_6\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"TokenVesting.sol\":298:8428  contract TokenVesting is Ownable, ReentrancyGuard {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_15:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_16:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_21\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_17:\n    /* \"#utility.yul\":328:352   */\n  tag_23\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_16\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_8:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_25\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_17\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"TokenVesting.sol\":298:8428  contract TokenVesting is Ownable, ReentrancyGuard {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"TokenVesting.sol\":298:8428  contract TokenVesting is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x86d1a69f\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xbe9a6555\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xbe9a6555\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdc25a300\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xecb70fb7\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xee4a745c\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x86d1a69f\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x872a7810\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x96132521\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x9639011e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb6549f75\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x44691f7e\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x44691f7e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x44b1231f\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5b940081\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x63d256ce\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x841bee0d\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x0fb5a6b4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x13d033c0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1a39d8ef\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x253254d6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x38af3eed\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x392e53cd\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"TokenVesting.sol\":522:545  uint256 public duration */\n    tag_3:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenVesting.sol\":470:490  uint256 public cliff */\n    tag_4:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenVesting.sol\":551:577  uint256 public totalAmount */\n    tag_5:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenVesting.sol\":7704:7811  function cliffEnded() external view returns (bool) {... */\n    tag_6:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenVesting.sol\":438:464  address public beneficiary */\n    tag_7:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenVesting.sol\":3086:3176  function isInitialized() external view returns (bool) {... */\n    tag_8:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenVesting.sol\":7493:7592  function hasStarted() external view returns (bool) {... */\n    tag_9:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenVesting.sol\":4629:5472  function vestedAmount() public view returns (uint256) {... */\n    tag_10:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenVesting.sol\":4399:4506  function releasableAmount() public view returns (uint256) {... */\n    tag_11:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenVesting.sol\":639:658  bool public revoked */\n    tag_12:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      stop\n        /* \"TokenVesting.sol\":1795:3011  function initialize(... */\n    tag_14:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      stop\n        /* \"TokenVesting.sol\":3247:3683  function release() external nonReentrant {... */\n    tag_15:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      stop\n        /* \"TokenVesting.sol\":612:633  bool public revocable */\n    tag_16:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_17:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenVesting.sol\":583:606  uint256 public released */\n    tag_18:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenVesting.sol\":8211:8426  function emergencyRecover(address _token, uint256 _amount) external onlyOwner {... */\n    tag_19:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      stop\n        /* \"TokenVesting.sol\":3759:4260  function revoke() external onlyOwner {... */\n    tag_20:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      stop\n        /* \"TokenVesting.sol\":496:516  uint256 public start */\n    tag_21:\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenVesting.sol\":5898:6425  function getVestingInfo() external view returns (... */\n    tag_22:\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_91\n      swap10\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenVesting.sol\":7913:8021  function hasEnded() external view returns (bool) {... */\n    tag_23:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenVesting.sol\":6752:7387  function getVestingStatus() external view returns (... */\n    tag_24:\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_98\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_25:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      tag_103\n      jump\t// in\n    tag_100:\n      stop\n        /* \"TokenVesting.sol\":413:432  IERC20 public token */\n    tag_26:\n      tag_104\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_106\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenVesting.sol\":522:545  uint256 public duration */\n    tag_31:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"TokenVesting.sol\":470:490  uint256 public cliff */\n    tag_35:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"TokenVesting.sol\":551:577  uint256 public totalAmount */\n    tag_38:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"TokenVesting.sol\":7704:7811  function cliffEnded() external view returns (bool) {... */\n    tag_41:\n        /* \"TokenVesting.sol\":7749:7753  bool */\n      0x00\n        /* \"TokenVesting.sol\":7799:7804  cliff */\n      sload(0x04)\n        /* \"TokenVesting.sol\":7791:7796  start */\n      sload(0x05)\n        /* \"TokenVesting.sol\":7791:7804  start + cliff */\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"TokenVesting.sol\":7772:7787  block.timestamp */\n      timestamp\n        /* \"TokenVesting.sol\":7772:7804  block.timestamp >= start + cliff */\n      lt\n      iszero\n        /* \"TokenVesting.sol\":7765:7804  return block.timestamp >= start + cliff */\n      swap1\n      pop\n        /* \"TokenVesting.sol\":7704:7811  function cliffEnded() external view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"TokenVesting.sol\":438:464  address public beneficiary */\n    tag_45:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"TokenVesting.sol\":3086:3176  function isInitialized() external view returns (bool) {... */\n    tag_49:\n        /* \"TokenVesting.sol\":3134:3138  bool */\n      0x00\n        /* \"TokenVesting.sol\":3157:3169  _initialized */\n      0x09\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"TokenVesting.sol\":3150:3169  return _initialized */\n      swap1\n      pop\n        /* \"TokenVesting.sol\":3086:3176  function isInitialized() external view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"TokenVesting.sol\":7493:7592  function hasStarted() external view returns (bool) {... */\n    tag_52:\n        /* \"TokenVesting.sol\":7538:7542  bool */\n      0x00\n        /* \"TokenVesting.sol\":7580:7585  start */\n      sload(0x05)\n        /* \"TokenVesting.sol\":7561:7576  block.timestamp */\n      timestamp\n        /* \"TokenVesting.sol\":7561:7585  block.timestamp >= start */\n      lt\n      iszero\n        /* \"TokenVesting.sol\":7554:7585  return block.timestamp >= start */\n      swap1\n      pop\n        /* \"TokenVesting.sol\":7493:7592  function hasStarted() external view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"TokenVesting.sol\":4629:5472  function vestedAmount() public view returns (uint256) {... */\n    tag_55:\n        /* \"TokenVesting.sol\":4674:4681  uint256 */\n      0x00\n        /* \"TokenVesting.sol\":4697:4704  revoked */\n      0x09\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"TokenVesting.sol\":4693:4739  if (revoked) {... */\n      iszero\n      tag_114\n      jumpi\n        /* \"TokenVesting.sol\":4727:4728  0 */\n      0x00\n        /* \"TokenVesting.sol\":4720:4728  return 0 */\n      swap1\n      pop\n      jump(tag_113)\n        /* \"TokenVesting.sol\":4693:4739  if (revoked) {... */\n    tag_114:\n        /* \"TokenVesting.sol\":4749:4768  uint256 currentTime */\n      0x00\n        /* \"TokenVesting.sol\":4771:4786  block.timestamp */\n      timestamp\n        /* \"TokenVesting.sol\":4749:4786  uint256 currentTime = block.timestamp */\n      swap1\n      pop\n        /* \"TokenVesting.sol\":4882:4887  cliff */\n      sload(0x04)\n        /* \"TokenVesting.sol\":4874:4879  start */\n      sload(0x05)\n        /* \"TokenVesting.sol\":4874:4887  start + cliff */\n      tag_115\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_115:\n        /* \"TokenVesting.sol\":4860:4871  currentTime */\n      dup2\n        /* \"TokenVesting.sol\":4860:4887  currentTime < start + cliff */\n      lt\n        /* \"TokenVesting.sol\":4856:4922  if (currentTime < start + cliff) {... */\n      iszero\n      tag_116\n      jumpi\n        /* \"TokenVesting.sol\":4910:4911  0 */\n      0x00\n        /* \"TokenVesting.sol\":4903:4911  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_113)\n        /* \"TokenVesting.sol\":4856:4922  if (currentTime < start + cliff) {... */\n    tag_116:\n        /* \"TokenVesting.sol\":5016:5024  duration */\n      sload(0x06)\n        /* \"TokenVesting.sol\":5008:5013  start */\n      sload(0x05)\n        /* \"TokenVesting.sol\":5008:5024  start + duration */\n      tag_117\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_117:\n        /* \"TokenVesting.sol\":4993:5004  currentTime */\n      dup2\n        /* \"TokenVesting.sol\":4993:5024  currentTime >= start + duration */\n      lt\n        /* \"TokenVesting.sol\":4989:5069  if (currentTime >= start + duration) {... */\n      tag_118\n      jumpi\n        /* \"TokenVesting.sol\":5047:5058  totalAmount */\n      sload(0x07)\n        /* \"TokenVesting.sol\":5040:5058  return totalAmount */\n      swap2\n      pop\n      pop\n      jump(tag_113)\n        /* \"TokenVesting.sol\":4989:5069  if (currentTime >= start + duration) {... */\n    tag_118:\n        /* \"TokenVesting.sol\":5156:5175  uint256 timeElapsed */\n      0x00\n        /* \"TokenVesting.sol\":5200:5205  cliff */\n      sload(0x04)\n        /* \"TokenVesting.sol\":5192:5197  start */\n      sload(0x05)\n        /* \"TokenVesting.sol\":5178:5189  currentTime */\n      dup4\n        /* \"TokenVesting.sol\":5178:5197  currentTime - start */\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"TokenVesting.sol\":5178:5205  currentTime - start - cliff */\n      tag_121\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_121:\n        /* \"TokenVesting.sol\":5156:5205  uint256 timeElapsed = currentTime - start - cliff */\n      swap1\n      pop\n        /* \"TokenVesting.sol\":5215:5238  uint256 vestingDuration */\n      0x00\n        /* \"TokenVesting.sol\":5252:5257  cliff */\n      sload(0x04)\n        /* \"TokenVesting.sol\":5241:5249  duration */\n      sload(0x06)\n        /* \"TokenVesting.sol\":5241:5257  duration - cliff */\n      tag_122\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_122:\n        /* \"TokenVesting.sol\":5215:5257  uint256 vestingDuration = duration - cliff */\n      swap1\n      pop\n        /* \"TokenVesting.sol\":5359:5379  uint256 linearAmount */\n      0x00\n        /* \"TokenVesting.sol\":5412:5427  vestingDuration */\n      dup2\n        /* \"TokenVesting.sol\":5397:5408  timeElapsed */\n      dup4\n        /* \"TokenVesting.sol\":5383:5394  totalAmount */\n      sload(0x07)\n        /* \"TokenVesting.sol\":5383:5408  totalAmount * timeElapsed */\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n        /* \"TokenVesting.sol\":5382:5427  (totalAmount * timeElapsed) / vestingDuration */\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"TokenVesting.sol\":5359:5427  uint256 linearAmount = (totalAmount * timeElapsed) / vestingDuration */\n      swap1\n      pop\n        /* \"TokenVesting.sol\":5453:5465  linearAmount */\n      dup1\n        /* \"TokenVesting.sol\":5446:5465  return linearAmount */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"TokenVesting.sol\":4629:5472  function vestedAmount() public view returns (uint256) {... */\n    tag_113:\n      swap1\n      jump\t// out\n        /* \"TokenVesting.sol\":4399:4506  function releasableAmount() public view returns (uint256) {... */\n    tag_58:\n        /* \"TokenVesting.sol\":4448:4455  uint256 */\n      0x00\n        /* \"TokenVesting.sol\":4491:4499  released */\n      sload(0x08)\n        /* \"TokenVesting.sol\":4474:4488  vestedAmount() */\n      tag_128\n        /* \"TokenVesting.sol\":4474:4486  vestedAmount */\n      tag_55\n        /* \"TokenVesting.sol\":4474:4488  vestedAmount() */\n      jump\t// in\n    tag_128:\n        /* \"TokenVesting.sol\":4474:4499  vestedAmount() - released */\n      tag_129\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_129:\n        /* \"TokenVesting.sol\":4467:4499  return vestedAmount() - released */\n      swap1\n      pop\n        /* \"TokenVesting.sol\":4399:4506  function releasableAmount() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"TokenVesting.sol\":639:658  bool public revoked */\n    tag_61:\n      0x09\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"TokenVesting.sol\":1795:3011  function initialize(... */\n    tag_68:\n        /* \"TokenVesting.sol\":2033:2045  _initialized */\n      0x09\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"TokenVesting.sol\":2032:2045  !_initialized */\n      iszero\n        /* \"TokenVesting.sol\":2024:2069  require(!_initialized, \"Already initialized\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"TokenVesting.sol\":2105:2106  0 */\n      0x00\n        /* \"TokenVesting.sol\":2087:2107  _token != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TokenVesting.sol\":2087:2093  _token */\n      dup8\n        /* \"TokenVesting.sol\":2087:2107  _token != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"TokenVesting.sol\":2079:2133  require(_token != address(0), \"Invalid token address\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n        /* \"TokenVesting.sol\":2175:2176  0 */\n      0x00\n        /* \"TokenVesting.sol\":2151:2177  _beneficiary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TokenVesting.sol\":2151:2163  _beneficiary */\n      dup7\n        /* \"TokenVesting.sol\":2151:2177  _beneficiary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"TokenVesting.sol\":2143:2209  require(_beneficiary != address(0), \"Invalid beneficiary address\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_143:\n        /* \"TokenVesting.sol\":2242:2243  0 */\n      0x00\n        /* \"TokenVesting.sol\":2227:2239  _totalAmount */\n      dup6\n        /* \"TokenVesting.sol\":2227:2243  _totalAmount > 0 */\n      gt\n        /* \"TokenVesting.sol\":2219:2283  require(_totalAmount > 0, \"Total amount must be greater than 0\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"TokenVesting.sol\":2313:2314  0 */\n      0x00\n        /* \"TokenVesting.sol\":2301:2310  _duration */\n      dup4\n        /* \"TokenVesting.sol\":2301:2314  _duration > 0 */\n      gt\n        /* \"TokenVesting.sol\":2293:2350  require(_duration > 0, \"Duration must be greater than 0\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"TokenVesting.sol\":2378:2387  _duration */\n      dup3\n        /* \"TokenVesting.sol\":2368:2374  _cliff */\n      dup5\n        /* \"TokenVesting.sol\":2368:2387  _cliff <= _duration */\n      gt\n      iszero\n        /* \"TokenVesting.sol\":2360:2420  require(_cliff <= _duration, \"Cliff cannot exceed duration\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"TokenVesting.sol\":2456:2457  0 */\n      0x00\n        /* \"TokenVesting.sol\":2438:2458  _owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TokenVesting.sol\":2438:2444  _owner */\n      dup2\n        /* \"TokenVesting.sol\":2438:2458  _owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"TokenVesting.sol\":2430:2484  require(_owner != address(0), \"Invalid owner address\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n        /* \"TokenVesting.sol\":2510:2516  _token */\n      dup7\n        /* \"TokenVesting.sol\":2495:2500  token */\n      0x02\n      0x00\n        /* \"TokenVesting.sol\":2495:2517  token = IERC20(_token) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"TokenVesting.sol\":2541:2553  _beneficiary */\n      dup6\n        /* \"TokenVesting.sol\":2527:2538  beneficiary */\n      0x03\n      0x00\n        /* \"TokenVesting.sol\":2527:2553  beneficiary = _beneficiary */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"TokenVesting.sol\":2577:2589  _totalAmount */\n      dup5\n        /* \"TokenVesting.sol\":2563:2574  totalAmount */\n      0x07\n        /* \"TokenVesting.sol\":2563:2589  totalAmount = _totalAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"TokenVesting.sol\":2607:2613  _cliff */\n      dup4\n        /* \"TokenVesting.sol\":2599:2604  cliff */\n      0x04\n        /* \"TokenVesting.sol\":2599:2613  cliff = _cliff */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"TokenVesting.sol\":2634:2643  _duration */\n      dup3\n        /* \"TokenVesting.sol\":2623:2631  duration */\n      0x06\n        /* \"TokenVesting.sol\":2623:2643  duration = _duration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"TokenVesting.sol\":2665:2675  _revocable */\n      dup2\n        /* \"TokenVesting.sol\":2653:2662  revocable */\n      0x09\n      0x00\n        /* \"TokenVesting.sol\":2653:2675  revocable = _revocable */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"TokenVesting.sol\":2693:2708  block.timestamp */\n      timestamp\n        /* \"TokenVesting.sol\":2685:2690  start */\n      0x05\n        /* \"TokenVesting.sol\":2685:2708  start = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"TokenVesting.sol\":2729:2730  0 */\n      0x00\n        /* \"TokenVesting.sol\":2718:2726  released */\n      0x08\n        /* \"TokenVesting.sol\":2718:2730  released = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"TokenVesting.sol\":2750:2755  false */\n      0x00\n        /* \"TokenVesting.sol\":2740:2747  revoked */\n      0x09\n      0x01\n        /* \"TokenVesting.sol\":2740:2755  revoked = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"TokenVesting.sol\":2780:2784  true */\n      0x01\n        /* \"TokenVesting.sol\":2765:2777  _initialized */\n      0x09\n      0x02\n        /* \"TokenVesting.sol\":2765:2784  _initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"TokenVesting.sol\":2795:2821  _transferOwnership(_owner) */\n      tag_158\n        /* \"TokenVesting.sol\":2814:2820  _owner */\n      dup2\n        /* \"TokenVesting.sol\":2795:2813  _transferOwnership */\n      tag_135\n        /* \"TokenVesting.sol\":2795:2821  _transferOwnership(_owner) */\n      jump\t// in\n    tag_158:\n        /* \"TokenVesting.sol\":2889:2901  _beneficiary */\n      dup6\n        /* \"TokenVesting.sol\":2837:3004  VestingInitialized(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TokenVesting.sol\":2869:2875  _token */\n      dup8\n        /* \"TokenVesting.sol\":2837:3004  VestingInitialized(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x14fc8ad8c19c2f708dda1e872c93f682d7a3cae234bdc2712270269f8e1d00c2\n        /* \"TokenVesting.sol\":2915:2927  _totalAmount */\n      dup8\n        /* \"TokenVesting.sol\":2941:2947  _cliff */\n      dup8\n        /* \"TokenVesting.sol\":2961:2970  _duration */\n      dup8\n        /* \"TokenVesting.sol\":2984:2994  _revocable */\n      dup8\n        /* \"TokenVesting.sol\":2837:3004  VestingInitialized(... */\n      mload(0x40)\n      tag_159\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"TokenVesting.sol\":1795:3011  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TokenVesting.sol\":3247:3683  function release() external nonReentrant {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_162\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_163\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_162:\n        /* \"TokenVesting.sol\":3307:3314  revoked */\n      0x09\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"TokenVesting.sol\":3306:3314  !revoked */\n      iszero\n        /* \"TokenVesting.sol\":3298:3343  require(!revoked, \"Vesting has been revoked\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"TokenVesting.sol\":3375:3386  beneficiary */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TokenVesting.sol\":3361:3386  msg.sender == beneficiary */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TokenVesting.sol\":3361:3371  msg.sender */\n      caller\n        /* \"TokenVesting.sol\":3361:3386  msg.sender == beneficiary */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"TokenVesting.sol\":3361:3411  msg.sender == beneficiary || msg.sender == owner() */\n      dup1\n      tag_168\n      jumpi\n      pop\n        /* \"TokenVesting.sol\":3404:3411  owner() */\n      tag_169\n        /* \"TokenVesting.sol\":3404:3409  owner */\n      tag_75\n        /* \"TokenVesting.sol\":3404:3411  owner() */\n      jump\t// in\n    tag_169:\n        /* \"TokenVesting.sol\":3390:3411  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TokenVesting.sol\":3390:3400  msg.sender */\n      caller\n        /* \"TokenVesting.sol\":3390:3411  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"TokenVesting.sol\":3361:3411  msg.sender == beneficiary || msg.sender == owner() */\n    tag_168:\n        /* \"TokenVesting.sol\":3353:3428  require(msg.sender == beneficiary || msg.sender == owner(), \"Unauthorized\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"TokenVesting.sol\":3439:3457  uint256 unreleased */\n      0x00\n        /* \"TokenVesting.sol\":3460:3478  releasableAmount() */\n      tag_173\n        /* \"TokenVesting.sol\":3460:3476  releasableAmount */\n      tag_58\n        /* \"TokenVesting.sol\":3460:3478  releasableAmount() */\n      jump\t// in\n    tag_173:\n        /* \"TokenVesting.sol\":3439:3478  uint256 unreleased = releasableAmount() */\n      swap1\n      pop\n        /* \"TokenVesting.sol\":3509:3510  0 */\n      0x00\n        /* \"TokenVesting.sol\":3496:3506  unreleased */\n      dup2\n        /* \"TokenVesting.sol\":3496:3510  unreleased > 0 */\n      gt\n        /* \"TokenVesting.sol\":3488:3535  require(unreleased > 0, \"No tokens to release\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"TokenVesting.sol\":3558:3568  unreleased */\n      dup1\n        /* \"TokenVesting.sol\":3546:3554  released */\n      0x08\n      0x00\n        /* \"TokenVesting.sol\":3546:3568  released += unreleased */\n      dup3\n      dup3\n      sload\n      tag_177\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_177:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"TokenVesting.sol\":3578:3621  token.safeTransfer(beneficiary, unreleased) */\n      tag_178\n        /* \"TokenVesting.sol\":3597:3608  beneficiary */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TokenVesting.sol\":3610:3620  unreleased */\n      dup3\n        /* \"TokenVesting.sol\":3578:3583  token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TokenVesting.sol\":3578:3596  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_179\n      swap1\n        /* \"TokenVesting.sol\":3578:3621  token.safeTransfer(beneficiary, unreleased) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_178:\n        /* \"TokenVesting.sol\":3652:3663  beneficiary */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TokenVesting.sol\":3637:3676  TokensReleased(beneficiary, unreleased) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc7798891864187665ac6dd119286e44ec13f014527aeeb2b8eb3fd413df93179\n        /* \"TokenVesting.sol\":3665:3675  unreleased */\n      dup3\n        /* \"TokenVesting.sol\":3637:3676  TokensReleased(beneficiary, unreleased) */\n      mload(0x40)\n      tag_180\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"TokenVesting.sol\":3288:3683  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_181\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_182\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_181:\n        /* \"TokenVesting.sol\":3247:3683  function release() external nonReentrant {... */\n      jump\t// out\n        /* \"TokenVesting.sol\":612:633  bool public revocable */\n    tag_72:\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"TokenVesting.sol\":583:606  uint256 public released */\n    tag_78:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"TokenVesting.sol\":8211:8426  function emergencyRecover(address _token, uint256 _amount) external onlyOwner {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_185:\n        /* \"TokenVesting.sol\":8325:8330  token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TokenVesting.sol\":8307:8331  _token != address(token) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TokenVesting.sol\":8307:8313  _token */\n      dup3\n        /* \"TokenVesting.sol\":8307:8331  _token != address(token) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"TokenVesting.sol\":8299:8364  require(_token != address(token), \"Cannot recover vesting token\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"TokenVesting.sol\":8374:8419  IERC20(_token).safeTransfer(owner(), _amount) */\n      tag_190\n        /* \"TokenVesting.sol\":8402:8409  owner() */\n      tag_191\n        /* \"TokenVesting.sol\":8402:8407  owner */\n      tag_75\n        /* \"TokenVesting.sol\":8402:8409  owner() */\n      jump\t// in\n    tag_191:\n        /* \"TokenVesting.sol\":8411:8418  _amount */\n      dup3\n        /* \"TokenVesting.sol\":8381:8387  _token */\n      dup5\n        /* \"TokenVesting.sol\":8374:8401  IERC20(_token).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_179\n      swap1\n        /* \"TokenVesting.sol\":8374:8419  IERC20(_token).safeTransfer(owner(), _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_190:\n        /* \"TokenVesting.sol\":8211:8426  function emergencyRecover(address _token, uint256 _amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"TokenVesting.sol\":3759:4260  function revoke() external onlyOwner {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_193\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_193:\n        /* \"TokenVesting.sol\":3814:3823  revocable */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"TokenVesting.sol\":3806:3852  require(revocable, \"Vesting is not revocable\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"TokenVesting.sol\":3871:3878  revoked */\n      0x09\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"TokenVesting.sol\":3870:3878  !revoked */\n      iszero\n        /* \"TokenVesting.sol\":3862:3906  require(!revoked, \"Vesting already revoked\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_198:\n        /* \"TokenVesting.sol\":3927:3931  true */\n      0x01\n        /* \"TokenVesting.sol\":3917:3924  revoked */\n      0x09\n      0x01\n        /* \"TokenVesting.sol\":3917:3931  revoked = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"TokenVesting.sol\":4022:4036  uint256 vested */\n      0x00\n        /* \"TokenVesting.sol\":4039:4053  vestedAmount() */\n      tag_201\n        /* \"TokenVesting.sol\":4039:4051  vestedAmount */\n      tag_55\n        /* \"TokenVesting.sol\":4039:4053  vestedAmount() */\n      jump\t// in\n    tag_201:\n        /* \"TokenVesting.sol\":4022:4053  uint256 vested = vestedAmount() */\n      swap1\n      pop\n        /* \"TokenVesting.sol\":4063:4079  uint256 unvested */\n      0x00\n        /* \"TokenVesting.sol\":4096:4102  vested */\n      dup2\n        /* \"TokenVesting.sol\":4082:4093  totalAmount */\n      sload(0x07)\n        /* \"TokenVesting.sol\":4082:4102  totalAmount - vested */\n      tag_202\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_202:\n        /* \"TokenVesting.sol\":4063:4102  uint256 unvested = totalAmount - vested */\n      swap1\n      pop\n        /* \"TokenVesting.sol\":4136:4137  0 */\n      0x00\n        /* \"TokenVesting.sol\":4125:4133  unvested */\n      dup2\n        /* \"TokenVesting.sol\":4125:4137  unvested > 0 */\n      gt\n        /* \"TokenVesting.sol\":4121:4201  if (unvested > 0) {... */\n      iszero\n      tag_203\n      jumpi\n        /* \"TokenVesting.sol\":4153:4190  token.safeTransfer(owner(), unvested) */\n      tag_204\n        /* \"TokenVesting.sol\":4172:4179  owner() */\n      tag_205\n        /* \"TokenVesting.sol\":4172:4177  owner */\n      tag_75\n        /* \"TokenVesting.sol\":4172:4179  owner() */\n      jump\t// in\n    tag_205:\n        /* \"TokenVesting.sol\":4181:4189  unvested */\n      dup3\n        /* \"TokenVesting.sol\":4153:4158  token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TokenVesting.sol\":4153:4171  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_179\n      swap1\n        /* \"TokenVesting.sol\":4153:4190  token.safeTransfer(owner(), unvested) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_204:\n        /* \"TokenVesting.sol\":4121:4201  if (unvested > 0) {... */\n    tag_203:\n        /* \"TokenVesting.sol\":4231:4242  beneficiary */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TokenVesting.sol\":4216:4253  VestingRevoked(beneficiary, unvested) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x57c76f5e278bfbd4eeb5207d287aa5a1a9e1113c65f7eefa540e379a2774d13b\n        /* \"TokenVesting.sol\":4244:4252  unvested */\n      dup3\n        /* \"TokenVesting.sol\":4216:4253  VestingRevoked(beneficiary, unvested) */\n      mload(0x40)\n      tag_206\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"TokenVesting.sol\":3796:4260  {... */\n      pop\n      pop\n        /* \"TokenVesting.sol\":3759:4260  function revoke() external onlyOwner {... */\n      jump\t// out\n        /* \"TokenVesting.sol\":496:516  uint256 public start */\n    tag_87:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"TokenVesting.sol\":5898:6425  function getVestingInfo() external view returns (... */\n    tag_90:\n        /* \"TokenVesting.sol\":5956:5970  address _token */\n      0x00\n        /* \"TokenVesting.sol\":5980:6000  address _beneficiary */\n      dup1\n        /* \"TokenVesting.sol\":6010:6030  uint256 _totalAmount */\n      0x00\n        /* \"TokenVesting.sol\":6040:6057  uint256 _released */\n      dup1\n        /* \"TokenVesting.sol\":6067:6081  uint256 _cliff */\n      0x00\n        /* \"TokenVesting.sol\":6091:6105  uint256 _start */\n      dup1\n        /* \"TokenVesting.sol\":6115:6132  uint256 _duration */\n      0x00\n        /* \"TokenVesting.sol\":6142:6157  bool _revocable */\n      dup1\n        /* \"TokenVesting.sol\":6167:6180  bool _revoked */\n      0x00\n        /* \"TokenVesting.sol\":6226:6231  token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TokenVesting.sol\":6246:6257  beneficiary */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TokenVesting.sol\":6271:6282  totalAmount */\n      sload(0x07)\n        /* \"TokenVesting.sol\":6296:6304  released */\n      sload(0x08)\n        /* \"TokenVesting.sol\":6318:6323  cliff */\n      sload(0x04)\n        /* \"TokenVesting.sol\":6337:6342  start */\n      sload(0x05)\n        /* \"TokenVesting.sol\":6356:6364  duration */\n      sload(0x06)\n        /* \"TokenVesting.sol\":6378:6387  revocable */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"TokenVesting.sol\":6401:6408  revoked */\n      0x09\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"TokenVesting.sol\":6197:6418  return (... */\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n        /* \"TokenVesting.sol\":5898:6425  function getVestingInfo() external view returns (... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      swap7\n      swap8\n      swap9\n      jump\t// out\n        /* \"TokenVesting.sol\":7913:8021  function hasEnded() external view returns (bool) {... */\n    tag_94:\n        /* \"TokenVesting.sol\":7956:7960  bool */\n      0x00\n        /* \"TokenVesting.sol\":8006:8014  duration */\n      sload(0x06)\n        /* \"TokenVesting.sol\":7998:8003  start */\n      sload(0x05)\n        /* \"TokenVesting.sol\":7998:8014  start + duration */\n      tag_209\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_209:\n        /* \"TokenVesting.sol\":7979:7994  block.timestamp */\n      timestamp\n        /* \"TokenVesting.sol\":7979:8014  block.timestamp >= start + duration */\n      lt\n      iszero\n        /* \"TokenVesting.sol\":7972:8014  return block.timestamp >= start + duration */\n      swap1\n      pop\n        /* \"TokenVesting.sol\":7913:8021  function hasEnded() external view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"TokenVesting.sol\":6752:7387  function getVestingStatus() external view returns (... */\n    tag_97:\n        /* \"TokenVesting.sol\":6812:6833  uint256 _vestedAmount */\n      0x00\n        /* \"TokenVesting.sol\":6843:6868  uint256 _releasableAmount */\n      dup1\n        /* \"TokenVesting.sol\":6878:6902  uint256 _remainingAmount */\n      0x00\n        /* \"TokenVesting.sol\":6912:6932  uint256 _timeElapsed */\n      dup1\n        /* \"TokenVesting.sol\":6942:6964  uint256 _timeRemaining */\n      0x00\n        /* \"TokenVesting.sol\":6981:7000  uint256 currentTime */\n      dup1\n        /* \"TokenVesting.sol\":7003:7018  block.timestamp */\n      timestamp\n        /* \"TokenVesting.sol\":6981:7018  uint256 currentTime = block.timestamp */\n      swap1\n      pop\n        /* \"TokenVesting.sol\":7028:7047  uint256 timeElapsed */\n      0x00\n        /* \"TokenVesting.sol\":7064:7069  start */\n      sload(0x05)\n        /* \"TokenVesting.sol\":7050:7061  currentTime */\n      dup3\n        /* \"TokenVesting.sol\":7050:7069  currentTime > start */\n      gt\n        /* \"TokenVesting.sol\":7050:7095  currentTime > start ? currentTime - start : 0 */\n      tag_211\n      jumpi\n        /* \"TokenVesting.sol\":7094:7095  0 */\n      0x00\n        /* \"TokenVesting.sol\":7050:7095  currentTime > start ? currentTime - start : 0 */\n      jump(tag_212)\n    tag_211:\n        /* \"TokenVesting.sol\":7086:7091  start */\n      sload(0x05)\n        /* \"TokenVesting.sol\":7072:7083  currentTime */\n      dup3\n        /* \"TokenVesting.sol\":7072:7091  currentTime - start */\n      tag_213\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_213:\n        /* \"TokenVesting.sol\":7050:7095  currentTime > start ? currentTime - start : 0 */\n    tag_212:\n        /* \"TokenVesting.sol\":7028:7095  uint256 timeElapsed = currentTime > start ? currentTime - start : 0 */\n      swap1\n      pop\n        /* \"TokenVesting.sol\":7105:7126  uint256 timeRemaining */\n      0x00\n        /* \"TokenVesting.sol\":7151:7159  duration */\n      sload(0x06)\n        /* \"TokenVesting.sol\":7143:7148  start */\n      sload(0x05)\n        /* \"TokenVesting.sol\":7143:7159  start + duration */\n      tag_214\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_214:\n        /* \"TokenVesting.sol\":7129:7140  currentTime */\n      dup4\n        /* \"TokenVesting.sol\":7129:7159  currentTime < start + duration */\n      lt\n        /* \"TokenVesting.sol\":7129:7196  currentTime < start + duration ? start + duration - currentTime : 0 */\n      tag_215\n      jumpi\n        /* \"TokenVesting.sol\":7195:7196  0 */\n      0x00\n        /* \"TokenVesting.sol\":7129:7196  currentTime < start + duration ? start + duration - currentTime : 0 */\n      jump(tag_216)\n    tag_215:\n        /* \"TokenVesting.sol\":7181:7192  currentTime */\n      dup3\n        /* \"TokenVesting.sol\":7170:7178  duration */\n      sload(0x06)\n        /* \"TokenVesting.sol\":7162:7167  start */\n      sload(0x05)\n        /* \"TokenVesting.sol\":7162:7178  start + duration */\n      tag_217\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_217:\n        /* \"TokenVesting.sol\":7162:7192  start + duration - currentTime */\n      tag_218\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_218:\n        /* \"TokenVesting.sol\":7129:7196  currentTime < start + duration ? start + duration - currentTime : 0 */\n    tag_216:\n        /* \"TokenVesting.sol\":7105:7196  uint256 timeRemaining = currentTime < start + duration ? start + duration - currentTime : 0 */\n      swap1\n      pop\n        /* \"TokenVesting.sol\":7236:7250  vestedAmount() */\n      tag_219\n        /* \"TokenVesting.sol\":7236:7248  vestedAmount */\n      tag_55\n        /* \"TokenVesting.sol\":7236:7250  vestedAmount() */\n      jump\t// in\n    tag_219:\n        /* \"TokenVesting.sol\":7264:7282  releasableAmount() */\n      tag_220\n        /* \"TokenVesting.sol\":7264:7280  releasableAmount */\n      tag_58\n        /* \"TokenVesting.sol\":7264:7282  releasableAmount() */\n      jump\t// in\n    tag_220:\n        /* \"TokenVesting.sol\":7310:7318  released */\n      sload(0x08)\n        /* \"TokenVesting.sol\":7296:7307  totalAmount */\n      sload(0x07)\n        /* \"TokenVesting.sol\":7296:7318  totalAmount - released */\n      tag_221\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_221:\n        /* \"TokenVesting.sol\":7332:7343  timeElapsed */\n      dup5\n        /* \"TokenVesting.sol\":7357:7370  timeRemaining */\n      dup5\n        /* \"TokenVesting.sol\":7215:7380  return (... */\n      swap8\n      pop\n      swap8\n      pop\n      swap8\n      pop\n      swap8\n      pop\n      swap8\n      pop\n      pop\n      pop\n      pop\n        /* \"TokenVesting.sol\":6752:7387  function getVestingStatus() external view returns (... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_223\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_225\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_227\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"TokenVesting.sol\":413:432  IERC20 public token */\n    tag_105:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_229\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_230\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_231\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_232\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_233\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_230\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_232:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap1\n      tag_239\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_237:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_241\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_242\n      swap3\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_244\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_230:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_250)\n    tag_249:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_251\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_252\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_253:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_254:\n        /* \"#utility.yul\":177:201   */\n      tag_308\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_253\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_33:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_310\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_254\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:532   */\n    tag_255:\n        /* \"#utility.yul\":476:483   */\n      0x00\n        /* \"#utility.yul\":519:524   */\n      dup2\n        /* \"#utility.yul\":512:525   */\n      iszero\n        /* \"#utility.yul\":505:526   */\n      iszero\n        /* \"#utility.yul\":494:526   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:532   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":538:647   */\n    tag_256:\n        /* \"#utility.yul\":619:640   */\n      tag_313\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":619:640   */\n      tag_255\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":614:617   */\n      dup3\n        /* \"#utility.yul\":607:641   */\n      mstore\n        /* \"#utility.yul\":538:647   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":653:863   */\n    tag_43:\n        /* \"#utility.yul\":740:744   */\n      0x00\n        /* \"#utility.yul\":778:780   */\n      0x20\n        /* \"#utility.yul\":767:776   */\n      dup3\n        /* \"#utility.yul\":763:781   */\n      add\n        /* \"#utility.yul\":755:781   */\n      swap1\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_315\n        /* \"#utility.yul\":853:854   */\n      0x00\n        /* \"#utility.yul\":842:851   */\n      dup4\n        /* \"#utility.yul\":838:855   */\n      add\n        /* \"#utility.yul\":829:835   */\n      dup5\n        /* \"#utility.yul\":791:856   */\n      tag_256\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":653:863   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":869:995   */\n    tag_257:\n        /* \"#utility.yul\":906:913   */\n      0x00\n        /* \"#utility.yul\":946:988   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":939:944   */\n      dup3\n        /* \"#utility.yul\":935:989   */\n      and\n        /* \"#utility.yul\":924:989   */\n      swap1\n      pop\n        /* \"#utility.yul\":869:995   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1001:1097   */\n    tag_258:\n        /* \"#utility.yul\":1038:1045   */\n      0x00\n        /* \"#utility.yul\":1067:1091   */\n      tag_318\n        /* \"#utility.yul\":1085:1090   */\n      dup3\n        /* \"#utility.yul\":1067:1091   */\n      tag_257\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":1056:1091   */\n      swap1\n      pop\n        /* \"#utility.yul\":1001:1097   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1103:1221   */\n    tag_259:\n        /* \"#utility.yul\":1190:1214   */\n      tag_320\n        /* \"#utility.yul\":1208:1213   */\n      dup2\n        /* \"#utility.yul\":1190:1214   */\n      tag_258\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":1185:1188   */\n      dup3\n        /* \"#utility.yul\":1178:1215   */\n      mstore\n        /* \"#utility.yul\":1103:1221   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1227:1449   */\n    tag_47:\n        /* \"#utility.yul\":1320:1324   */\n      0x00\n        /* \"#utility.yul\":1358:1360   */\n      0x20\n        /* \"#utility.yul\":1347:1356   */\n      dup3\n        /* \"#utility.yul\":1343:1361   */\n      add\n        /* \"#utility.yul\":1335:1361   */\n      swap1\n      pop\n        /* \"#utility.yul\":1371:1442   */\n      tag_322\n        /* \"#utility.yul\":1439:1440   */\n      0x00\n        /* \"#utility.yul\":1428:1437   */\n      dup4\n        /* \"#utility.yul\":1424:1441   */\n      add\n        /* \"#utility.yul\":1415:1421   */\n      dup5\n        /* \"#utility.yul\":1371:1442   */\n      tag_259\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":1227:1449   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1536:1653   */\n    tag_261:\n        /* \"#utility.yul\":1645:1646   */\n      0x00\n        /* \"#utility.yul\":1642:1643   */\n      dup1\n        /* \"#utility.yul\":1635:1647   */\n      revert\n        /* \"#utility.yul\":1782:1904   */\n    tag_263:\n        /* \"#utility.yul\":1855:1879   */\n      tag_327\n        /* \"#utility.yul\":1873:1878   */\n      dup2\n        /* \"#utility.yul\":1855:1879   */\n      tag_258\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":1848:1853   */\n      dup2\n        /* \"#utility.yul\":1845:1880   */\n      eq\n        /* \"#utility.yul\":1835:1898   */\n      tag_328\n      jumpi\n        /* \"#utility.yul\":1894:1895   */\n      0x00\n        /* \"#utility.yul\":1891:1892   */\n      dup1\n        /* \"#utility.yul\":1884:1896   */\n      revert\n        /* \"#utility.yul\":1835:1898   */\n    tag_328:\n        /* \"#utility.yul\":1782:1904   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2049   */\n    tag_264:\n        /* \"#utility.yul\":1956:1961   */\n      0x00\n        /* \"#utility.yul\":1994:2000   */\n      dup2\n        /* \"#utility.yul\":1981:2001   */\n      calldataload\n        /* \"#utility.yul\":1972:2001   */\n      swap1\n      pop\n        /* \"#utility.yul\":2010:2043   */\n      tag_330\n        /* \"#utility.yul\":2037:2042   */\n      dup2\n        /* \"#utility.yul\":2010:2043   */\n      tag_263\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":1910:2049   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2055:2177   */\n    tag_265:\n        /* \"#utility.yul\":2128:2152   */\n      tag_332\n        /* \"#utility.yul\":2146:2151   */\n      dup2\n        /* \"#utility.yul\":2128:2152   */\n      tag_253\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":2121:2126   */\n      dup2\n        /* \"#utility.yul\":2118:2153   */\n      eq\n        /* \"#utility.yul\":2108:2171   */\n      tag_333\n      jumpi\n        /* \"#utility.yul\":2167:2168   */\n      0x00\n        /* \"#utility.yul\":2164:2165   */\n      dup1\n        /* \"#utility.yul\":2157:2169   */\n      revert\n        /* \"#utility.yul\":2108:2171   */\n    tag_333:\n        /* \"#utility.yul\":2055:2177   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2322   */\n    tag_266:\n        /* \"#utility.yul\":2229:2234   */\n      0x00\n        /* \"#utility.yul\":2267:2273   */\n      dup2\n        /* \"#utility.yul\":2254:2274   */\n      calldataload\n        /* \"#utility.yul\":2245:2274   */\n      swap1\n      pop\n        /* \"#utility.yul\":2283:2316   */\n      tag_335\n        /* \"#utility.yul\":2310:2315   */\n      dup2\n        /* \"#utility.yul\":2283:2316   */\n      tag_265\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":2183:2322   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2328:2444   */\n    tag_267:\n        /* \"#utility.yul\":2398:2419   */\n      tag_337\n        /* \"#utility.yul\":2413:2418   */\n      dup2\n        /* \"#utility.yul\":2398:2419   */\n      tag_255\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":2391:2396   */\n      dup2\n        /* \"#utility.yul\":2388:2420   */\n      eq\n        /* \"#utility.yul\":2378:2438   */\n      tag_338\n      jumpi\n        /* \"#utility.yul\":2434:2435   */\n      0x00\n        /* \"#utility.yul\":2431:2432   */\n      dup1\n        /* \"#utility.yul\":2424:2436   */\n      revert\n        /* \"#utility.yul\":2378:2438   */\n    tag_338:\n        /* \"#utility.yul\":2328:2444   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2450:2583   */\n    tag_268:\n        /* \"#utility.yul\":2493:2498   */\n      0x00\n        /* \"#utility.yul\":2531:2537   */\n      dup2\n        /* \"#utility.yul\":2518:2538   */\n      calldataload\n        /* \"#utility.yul\":2509:2538   */\n      swap1\n      pop\n        /* \"#utility.yul\":2547:2577   */\n      tag_340\n        /* \"#utility.yul\":2571:2576   */\n      dup2\n        /* \"#utility.yul\":2547:2577   */\n      tag_267\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":2450:2583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2589:3786   */\n    tag_67:\n        /* \"#utility.yul\":2699:2705   */\n      0x00\n        /* \"#utility.yul\":2707:2713   */\n      dup1\n        /* \"#utility.yul\":2715:2721   */\n      0x00\n        /* \"#utility.yul\":2723:2729   */\n      dup1\n        /* \"#utility.yul\":2731:2737   */\n      0x00\n        /* \"#utility.yul\":2739:2745   */\n      dup1\n        /* \"#utility.yul\":2747:2753   */\n      0x00\n        /* \"#utility.yul\":2796:2799   */\n      0xe0\n        /* \"#utility.yul\":2784:2793   */\n      dup9\n        /* \"#utility.yul\":2775:2782   */\n      dup11\n        /* \"#utility.yul\":2771:2794   */\n      sub\n        /* \"#utility.yul\":2767:2800   */\n      slt\n        /* \"#utility.yul\":2764:2884   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":2803:2882   */\n      tag_343\n      tag_261\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":2764:2884   */\n    tag_342:\n        /* \"#utility.yul\":2923:2924   */\n      0x00\n        /* \"#utility.yul\":2948:3001   */\n      tag_344\n        /* \"#utility.yul\":2993:3000   */\n      dup11\n        /* \"#utility.yul\":2984:2990   */\n      dup3\n        /* \"#utility.yul\":2973:2982   */\n      dup12\n        /* \"#utility.yul\":2969:2991   */\n      add\n        /* \"#utility.yul\":2948:3001   */\n      tag_264\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":2938:3001   */\n      swap8\n      pop\n        /* \"#utility.yul\":2894:3011   */\n      pop\n        /* \"#utility.yul\":3050:3052   */\n      0x20\n        /* \"#utility.yul\":3076:3129   */\n      tag_345\n        /* \"#utility.yul\":3121:3128   */\n      dup11\n        /* \"#utility.yul\":3112:3118   */\n      dup3\n        /* \"#utility.yul\":3101:3110   */\n      dup12\n        /* \"#utility.yul\":3097:3119   */\n      add\n        /* \"#utility.yul\":3076:3129   */\n      tag_264\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":3066:3129   */\n      swap7\n      pop\n        /* \"#utility.yul\":3021:3139   */\n      pop\n        /* \"#utility.yul\":3178:3180   */\n      0x40\n        /* \"#utility.yul\":3204:3257   */\n      tag_346\n        /* \"#utility.yul\":3249:3256   */\n      dup11\n        /* \"#utility.yul\":3240:3246   */\n      dup3\n        /* \"#utility.yul\":3229:3238   */\n      dup12\n        /* \"#utility.yul\":3225:3247   */\n      add\n        /* \"#utility.yul\":3204:3257   */\n      tag_266\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":3194:3257   */\n      swap6\n      pop\n        /* \"#utility.yul\":3149:3267   */\n      pop\n        /* \"#utility.yul\":3306:3308   */\n      0x60\n        /* \"#utility.yul\":3332:3385   */\n      tag_347\n        /* \"#utility.yul\":3377:3384   */\n      dup11\n        /* \"#utility.yul\":3368:3374   */\n      dup3\n        /* \"#utility.yul\":3357:3366   */\n      dup12\n        /* \"#utility.yul\":3353:3375   */\n      add\n        /* \"#utility.yul\":3332:3385   */\n      tag_266\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":3322:3385   */\n      swap5\n      pop\n        /* \"#utility.yul\":3277:3395   */\n      pop\n        /* \"#utility.yul\":3434:3437   */\n      0x80\n        /* \"#utility.yul\":3461:3514   */\n      tag_348\n        /* \"#utility.yul\":3506:3513   */\n      dup11\n        /* \"#utility.yul\":3497:3503   */\n      dup3\n        /* \"#utility.yul\":3486:3495   */\n      dup12\n        /* \"#utility.yul\":3482:3504   */\n      add\n        /* \"#utility.yul\":3461:3514   */\n      tag_266\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":3451:3514   */\n      swap4\n      pop\n        /* \"#utility.yul\":3405:3524   */\n      pop\n        /* \"#utility.yul\":3563:3566   */\n      0xa0\n        /* \"#utility.yul\":3590:3640   */\n      tag_349\n        /* \"#utility.yul\":3632:3639   */\n      dup11\n        /* \"#utility.yul\":3623:3629   */\n      dup3\n        /* \"#utility.yul\":3612:3621   */\n      dup12\n        /* \"#utility.yul\":3608:3630   */\n      add\n        /* \"#utility.yul\":3590:3640   */\n      tag_268\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":3580:3640   */\n      swap3\n      pop\n        /* \"#utility.yul\":3534:3650   */\n      pop\n        /* \"#utility.yul\":3689:3692   */\n      0xc0\n        /* \"#utility.yul\":3716:3769   */\n      tag_350\n        /* \"#utility.yul\":3761:3768   */\n      dup11\n        /* \"#utility.yul\":3752:3758   */\n      dup3\n        /* \"#utility.yul\":3741:3750   */\n      dup12\n        /* \"#utility.yul\":3737:3759   */\n      add\n        /* \"#utility.yul\":3716:3769   */\n      tag_264\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":3706:3769   */\n      swap2\n      pop\n        /* \"#utility.yul\":3660:3779   */\n      pop\n        /* \"#utility.yul\":2589:3786   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3792:4266   */\n    tag_82:\n        /* \"#utility.yul\":3860:3866   */\n      0x00\n        /* \"#utility.yul\":3868:3874   */\n      dup1\n        /* \"#utility.yul\":3917:3919   */\n      0x40\n        /* \"#utility.yul\":3905:3914   */\n      dup4\n        /* \"#utility.yul\":3896:3903   */\n      dup6\n        /* \"#utility.yul\":3892:3915   */\n      sub\n        /* \"#utility.yul\":3888:3920   */\n      slt\n        /* \"#utility.yul\":3885:4004   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":3923:4002   */\n      tag_353\n      tag_261\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":3885:4004   */\n    tag_352:\n        /* \"#utility.yul\":4043:4044   */\n      0x00\n        /* \"#utility.yul\":4068:4121   */\n      tag_354\n        /* \"#utility.yul\":4113:4120   */\n      dup6\n        /* \"#utility.yul\":4104:4110   */\n      dup3\n        /* \"#utility.yul\":4093:4102   */\n      dup7\n        /* \"#utility.yul\":4089:4111   */\n      add\n        /* \"#utility.yul\":4068:4121   */\n      tag_264\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":4058:4121   */\n      swap3\n      pop\n        /* \"#utility.yul\":4014:4131   */\n      pop\n        /* \"#utility.yul\":4170:4172   */\n      0x20\n        /* \"#utility.yul\":4196:4249   */\n      tag_355\n        /* \"#utility.yul\":4241:4248   */\n      dup6\n        /* \"#utility.yul\":4232:4238   */\n      dup3\n        /* \"#utility.yul\":4221:4230   */\n      dup7\n        /* \"#utility.yul\":4217:4239   */\n      add\n        /* \"#utility.yul\":4196:4249   */\n      tag_266\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":4186:4249   */\n      swap2\n      pop\n        /* \"#utility.yul\":4141:4259   */\n      pop\n        /* \"#utility.yul\":3792:4266   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4272:5356   */\n    tag_92:\n        /* \"#utility.yul\":4577:4581   */\n      0x00\n        /* \"#utility.yul\":4615:4618   */\n      0x0120\n        /* \"#utility.yul\":4604:4613   */\n      dup3\n        /* \"#utility.yul\":4600:4619   */\n      add\n        /* \"#utility.yul\":4592:4619   */\n      swap1\n      pop\n        /* \"#utility.yul\":4629:4700   */\n      tag_357\n        /* \"#utility.yul\":4697:4698   */\n      0x00\n        /* \"#utility.yul\":4686:4695   */\n      dup4\n        /* \"#utility.yul\":4682:4699   */\n      add\n        /* \"#utility.yul\":4673:4679   */\n      dup13\n        /* \"#utility.yul\":4629:4700   */\n      tag_259\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":4710:4782   */\n      tag_358\n        /* \"#utility.yul\":4778:4780   */\n      0x20\n        /* \"#utility.yul\":4767:4776   */\n      dup4\n        /* \"#utility.yul\":4763:4781   */\n      add\n        /* \"#utility.yul\":4754:4760   */\n      dup12\n        /* \"#utility.yul\":4710:4782   */\n      tag_259\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":4792:4864   */\n      tag_359\n        /* \"#utility.yul\":4860:4862   */\n      0x40\n        /* \"#utility.yul\":4849:4858   */\n      dup4\n        /* \"#utility.yul\":4845:4863   */\n      add\n        /* \"#utility.yul\":4836:4842   */\n      dup11\n        /* \"#utility.yul\":4792:4864   */\n      tag_254\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":4874:4946   */\n      tag_360\n        /* \"#utility.yul\":4942:4944   */\n      0x60\n        /* \"#utility.yul\":4931:4940   */\n      dup4\n        /* \"#utility.yul\":4927:4945   */\n      add\n        /* \"#utility.yul\":4918:4924   */\n      dup10\n        /* \"#utility.yul\":4874:4946   */\n      tag_254\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":4956:5029   */\n      tag_361\n        /* \"#utility.yul\":5024:5027   */\n      0x80\n        /* \"#utility.yul\":5013:5022   */\n      dup4\n        /* \"#utility.yul\":5009:5028   */\n      add\n        /* \"#utility.yul\":5000:5006   */\n      dup9\n        /* \"#utility.yul\":4956:5029   */\n      tag_254\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":5039:5112   */\n      tag_362\n        /* \"#utility.yul\":5107:5110   */\n      0xa0\n        /* \"#utility.yul\":5096:5105   */\n      dup4\n        /* \"#utility.yul\":5092:5111   */\n      add\n        /* \"#utility.yul\":5083:5089   */\n      dup8\n        /* \"#utility.yul\":5039:5112   */\n      tag_254\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":5122:5195   */\n      tag_363\n        /* \"#utility.yul\":5190:5193   */\n      0xc0\n        /* \"#utility.yul\":5179:5188   */\n      dup4\n        /* \"#utility.yul\":5175:5194   */\n      add\n        /* \"#utility.yul\":5166:5172   */\n      dup7\n        /* \"#utility.yul\":5122:5195   */\n      tag_254\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":5205:5272   */\n      tag_364\n        /* \"#utility.yul\":5267:5270   */\n      0xe0\n        /* \"#utility.yul\":5256:5265   */\n      dup4\n        /* \"#utility.yul\":5252:5271   */\n      add\n        /* \"#utility.yul\":5243:5249   */\n      dup6\n        /* \"#utility.yul\":5205:5272   */\n      tag_256\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":5282:5349   */\n      tag_365\n        /* \"#utility.yul\":5344:5347   */\n      0x0100\n        /* \"#utility.yul\":5333:5342   */\n      dup4\n        /* \"#utility.yul\":5329:5348   */\n      add\n        /* \"#utility.yul\":5320:5326   */\n      dup5\n        /* \"#utility.yul\":5282:5349   */\n      tag_256\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":4272:5356   */\n      swap11\n      swap10\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5362:6026   */\n    tag_99:\n        /* \"#utility.yul\":5567:5571   */\n      0x00\n        /* \"#utility.yul\":5605:5608   */\n      0xa0\n        /* \"#utility.yul\":5594:5603   */\n      dup3\n        /* \"#utility.yul\":5590:5609   */\n      add\n        /* \"#utility.yul\":5582:5609   */\n      swap1\n      pop\n        /* \"#utility.yul\":5619:5690   */\n      tag_367\n        /* \"#utility.yul\":5687:5688   */\n      0x00\n        /* \"#utility.yul\":5676:5685   */\n      dup4\n        /* \"#utility.yul\":5672:5689   */\n      add\n        /* \"#utility.yul\":5663:5669   */\n      dup9\n        /* \"#utility.yul\":5619:5690   */\n      tag_254\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":5700:5772   */\n      tag_368\n        /* \"#utility.yul\":5768:5770   */\n      0x20\n        /* \"#utility.yul\":5757:5766   */\n      dup4\n        /* \"#utility.yul\":5753:5771   */\n      add\n        /* \"#utility.yul\":5744:5750   */\n      dup8\n        /* \"#utility.yul\":5700:5772   */\n      tag_254\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":5782:5854   */\n      tag_369\n        /* \"#utility.yul\":5850:5852   */\n      0x40\n        /* \"#utility.yul\":5839:5848   */\n      dup4\n        /* \"#utility.yul\":5835:5853   */\n      add\n        /* \"#utility.yul\":5826:5832   */\n      dup7\n        /* \"#utility.yul\":5782:5854   */\n      tag_254\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":5864:5936   */\n      tag_370\n        /* \"#utility.yul\":5932:5934   */\n      0x60\n        /* \"#utility.yul\":5921:5930   */\n      dup4\n        /* \"#utility.yul\":5917:5935   */\n      add\n        /* \"#utility.yul\":5908:5914   */\n      dup6\n        /* \"#utility.yul\":5864:5936   */\n      tag_254\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":5946:6019   */\n      tag_371\n        /* \"#utility.yul\":6014:6017   */\n      0x80\n        /* \"#utility.yul\":6003:6012   */\n      dup4\n        /* \"#utility.yul\":5999:6018   */\n      add\n        /* \"#utility.yul\":5990:5996   */\n      dup5\n        /* \"#utility.yul\":5946:6019   */\n      tag_254\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":5362:6026   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6032:6361   */\n    tag_102:\n        /* \"#utility.yul\":6091:6097   */\n      0x00\n        /* \"#utility.yul\":6140:6142   */\n      0x20\n        /* \"#utility.yul\":6128:6137   */\n      dup3\n        /* \"#utility.yul\":6119:6126   */\n      dup5\n        /* \"#utility.yul\":6115:6138   */\n      sub\n        /* \"#utility.yul\":6111:6143   */\n      slt\n        /* \"#utility.yul\":6108:6227   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":6146:6225   */\n      tag_374\n      tag_261\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":6108:6227   */\n    tag_373:\n        /* \"#utility.yul\":6266:6267   */\n      0x00\n        /* \"#utility.yul\":6291:6344   */\n      tag_375\n        /* \"#utility.yul\":6336:6343   */\n      dup5\n        /* \"#utility.yul\":6327:6333   */\n      dup3\n        /* \"#utility.yul\":6316:6325   */\n      dup6\n        /* \"#utility.yul\":6312:6334   */\n      add\n        /* \"#utility.yul\":6291:6344   */\n      tag_264\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":6281:6344   */\n      swap2\n      pop\n        /* \"#utility.yul\":6237:6354   */\n      pop\n        /* \"#utility.yul\":6032:6361   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6367:6427   */\n    tag_269:\n        /* \"#utility.yul\":6395:6398   */\n      0x00\n        /* \"#utility.yul\":6416:6421   */\n      dup2\n        /* \"#utility.yul\":6409:6421   */\n      swap1\n      pop\n        /* \"#utility.yul\":6367:6427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6433:6575   */\n    tag_270:\n        /* \"#utility.yul\":6483:6492   */\n      0x00\n        /* \"#utility.yul\":6516:6569   */\n      tag_378\n        /* \"#utility.yul\":6534:6568   */\n      tag_379\n        /* \"#utility.yul\":6543:6567   */\n      tag_380\n        /* \"#utility.yul\":6561:6566   */\n      dup5\n        /* \"#utility.yul\":6543:6567   */\n      tag_257\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":6534:6568   */\n      tag_269\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":6516:6569   */\n      tag_257\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":6503:6569   */\n      swap1\n      pop\n        /* \"#utility.yul\":6433:6575   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6581:6707   */\n    tag_271:\n        /* \"#utility.yul\":6631:6640   */\n      0x00\n        /* \"#utility.yul\":6664:6701   */\n      tag_382\n        /* \"#utility.yul\":6695:6700   */\n      dup3\n        /* \"#utility.yul\":6664:6701   */\n      tag_270\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":6651:6701   */\n      swap1\n      pop\n        /* \"#utility.yul\":6581:6707   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6713:6853   */\n    tag_272:\n        /* \"#utility.yul\":6777:6786   */\n      0x00\n        /* \"#utility.yul\":6810:6847   */\n      tag_384\n        /* \"#utility.yul\":6841:6846   */\n      dup3\n        /* \"#utility.yul\":6810:6847   */\n      tag_271\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":6797:6847   */\n      swap1\n      pop\n        /* \"#utility.yul\":6713:6853   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6859:7018   */\n    tag_273:\n        /* \"#utility.yul\":6960:7011   */\n      tag_386\n        /* \"#utility.yul\":7005:7010   */\n      dup2\n        /* \"#utility.yul\":6960:7011   */\n      tag_272\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":6955:6958   */\n      dup3\n        /* \"#utility.yul\":6948:7012   */\n      mstore\n        /* \"#utility.yul\":6859:7018   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7024:7274   */\n    tag_107:\n        /* \"#utility.yul\":7131:7135   */\n      0x00\n        /* \"#utility.yul\":7169:7171   */\n      0x20\n        /* \"#utility.yul\":7158:7167   */\n      dup3\n        /* \"#utility.yul\":7154:7172   */\n      add\n        /* \"#utility.yul\":7146:7172   */\n      swap1\n      pop\n        /* \"#utility.yul\":7182:7267   */\n      tag_388\n        /* \"#utility.yul\":7264:7265   */\n      0x00\n        /* \"#utility.yul\":7253:7262   */\n      dup4\n        /* \"#utility.yul\":7249:7266   */\n      add\n        /* \"#utility.yul\":7240:7246   */\n      dup5\n        /* \"#utility.yul\":7182:7267   */\n      tag_273\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":7024:7274   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7280:7460   */\n    tag_274:\n        /* \"#utility.yul\":7328:7405   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7325:7326   */\n      0x00\n        /* \"#utility.yul\":7318:7406   */\n      mstore\n        /* \"#utility.yul\":7425:7429   */\n      0x11\n        /* \"#utility.yul\":7422:7423   */\n      0x04\n        /* \"#utility.yul\":7415:7430   */\n      mstore\n        /* \"#utility.yul\":7449:7453   */\n      0x24\n        /* \"#utility.yul\":7446:7447   */\n      0x00\n        /* \"#utility.yul\":7439:7454   */\n      revert\n        /* \"#utility.yul\":7466:7657   */\n    tag_110:\n        /* \"#utility.yul\":7506:7509   */\n      0x00\n        /* \"#utility.yul\":7525:7545   */\n      tag_391\n        /* \"#utility.yul\":7543:7544   */\n      dup3\n        /* \"#utility.yul\":7525:7545   */\n      tag_253\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":7520:7545   */\n      swap2\n      pop\n        /* \"#utility.yul\":7559:7579   */\n      tag_392\n        /* \"#utility.yul\":7577:7578   */\n      dup4\n        /* \"#utility.yul\":7559:7579   */\n      tag_253\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":7554:7579   */\n      swap3\n      pop\n        /* \"#utility.yul\":7602:7603   */\n      dup3\n        /* \"#utility.yul\":7599:7600   */\n      dup3\n        /* \"#utility.yul\":7595:7604   */\n      add\n        /* \"#utility.yul\":7588:7604   */\n      swap1\n      pop\n        /* \"#utility.yul\":7623:7626   */\n      dup1\n        /* \"#utility.yul\":7620:7621   */\n      dup3\n        /* \"#utility.yul\":7617:7627   */\n      gt\n        /* \"#utility.yul\":7614:7650   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":7630:7648   */\n      tag_394\n      tag_274\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":7614:7650   */\n    tag_393:\n        /* \"#utility.yul\":7466:7657   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7663:7857   */\n    tag_120:\n        /* \"#utility.yul\":7703:7707   */\n      0x00\n        /* \"#utility.yul\":7723:7743   */\n      tag_396\n        /* \"#utility.yul\":7741:7742   */\n      dup3\n        /* \"#utility.yul\":7723:7743   */\n      tag_253\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":7718:7743   */\n      swap2\n      pop\n        /* \"#utility.yul\":7757:7777   */\n      tag_397\n        /* \"#utility.yul\":7775:7776   */\n      dup4\n        /* \"#utility.yul\":7757:7777   */\n      tag_253\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":7752:7777   */\n      swap3\n      pop\n        /* \"#utility.yul\":7801:7802   */\n      dup3\n        /* \"#utility.yul\":7798:7799   */\n      dup3\n        /* \"#utility.yul\":7794:7803   */\n      sub\n        /* \"#utility.yul\":7786:7803   */\n      swap1\n      pop\n        /* \"#utility.yul\":7825:7826   */\n      dup2\n        /* \"#utility.yul\":7819:7823   */\n      dup2\n        /* \"#utility.yul\":7816:7827   */\n      gt\n        /* \"#utility.yul\":7813:7850   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":7830:7848   */\n      tag_399\n      tag_274\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":7813:7850   */\n    tag_398:\n        /* \"#utility.yul\":7663:7857   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7863:8273   */\n    tag_124:\n        /* \"#utility.yul\":7903:7910   */\n      0x00\n        /* \"#utility.yul\":7926:7946   */\n      tag_401\n        /* \"#utility.yul\":7944:7945   */\n      dup3\n        /* \"#utility.yul\":7926:7946   */\n      tag_253\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":7921:7946   */\n      swap2\n      pop\n        /* \"#utility.yul\":7960:7980   */\n      tag_402\n        /* \"#utility.yul\":7978:7979   */\n      dup4\n        /* \"#utility.yul\":7960:7980   */\n      tag_253\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":7955:7980   */\n      swap3\n      pop\n        /* \"#utility.yul\":8015:8016   */\n      dup3\n        /* \"#utility.yul\":8012:8013   */\n      dup3\n        /* \"#utility.yul\":8008:8017   */\n      mul\n        /* \"#utility.yul\":8037:8067   */\n      tag_403\n        /* \"#utility.yul\":8055:8066   */\n      dup2\n        /* \"#utility.yul\":8037:8067   */\n      tag_253\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":8026:8067   */\n      swap2\n      pop\n        /* \"#utility.yul\":8216:8217   */\n      dup3\n        /* \"#utility.yul\":8207:8214   */\n      dup3\n        /* \"#utility.yul\":8203:8218   */\n      div\n        /* \"#utility.yul\":8200:8201   */\n      dup5\n        /* \"#utility.yul\":8197:8219   */\n      eq\n        /* \"#utility.yul\":8177:8178   */\n      dup4\n        /* \"#utility.yul\":8170:8179   */\n      iszero\n        /* \"#utility.yul\":8150:8233   */\n      or\n        /* \"#utility.yul\":8127:8266   */\n      tag_404\n      jumpi\n        /* \"#utility.yul\":8246:8264   */\n      tag_405\n      tag_274\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":8127:8266   */\n    tag_404:\n        /* \"#utility.yul\":7911:8273   */\n      pop\n        /* \"#utility.yul\":7863:8273   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8279:8459   */\n    tag_275:\n        /* \"#utility.yul\":8327:8404   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8324:8325   */\n      0x00\n        /* \"#utility.yul\":8317:8405   */\n      mstore\n        /* \"#utility.yul\":8424:8428   */\n      0x12\n        /* \"#utility.yul\":8421:8422   */\n      0x04\n        /* \"#utility.yul\":8414:8429   */\n      mstore\n        /* \"#utility.yul\":8448:8452   */\n      0x24\n        /* \"#utility.yul\":8445:8446   */\n      0x00\n        /* \"#utility.yul\":8438:8453   */\n      revert\n        /* \"#utility.yul\":8465:8650   */\n    tag_126:\n        /* \"#utility.yul\":8505:8506   */\n      0x00\n        /* \"#utility.yul\":8522:8542   */\n      tag_408\n        /* \"#utility.yul\":8540:8541   */\n      dup3\n        /* \"#utility.yul\":8522:8542   */\n      tag_253\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":8517:8542   */\n      swap2\n      pop\n        /* \"#utility.yul\":8556:8576   */\n      tag_409\n        /* \"#utility.yul\":8574:8575   */\n      dup4\n        /* \"#utility.yul\":8556:8576   */\n      tag_253\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":8551:8576   */\n      swap3\n      pop\n        /* \"#utility.yul\":8595:8596   */\n      dup3\n        /* \"#utility.yul\":8585:8620   */\n      tag_410\n      jumpi\n        /* \"#utility.yul\":8600:8618   */\n      tag_411\n      tag_275\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":8585:8620   */\n    tag_410:\n        /* \"#utility.yul\":8642:8643   */\n      dup3\n        /* \"#utility.yul\":8639:8640   */\n      dup3\n        /* \"#utility.yul\":8635:8644   */\n      div\n        /* \"#utility.yul\":8630:8644   */\n      swap1\n      pop\n        /* \"#utility.yul\":8465:8650   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8656:8825   */\n    tag_276:\n        /* \"#utility.yul\":8740:8751   */\n      0x00\n        /* \"#utility.yul\":8774:8780   */\n      dup3\n        /* \"#utility.yul\":8769:8772   */\n      dup3\n        /* \"#utility.yul\":8762:8781   */\n      mstore\n        /* \"#utility.yul\":8814:8818   */\n      0x20\n        /* \"#utility.yul\":8809:8812   */\n      dup3\n        /* \"#utility.yul\":8805:8819   */\n      add\n        /* \"#utility.yul\":8790:8819   */\n      swap1\n      pop\n        /* \"#utility.yul\":8656:8825   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8831:9000   */\n    tag_277:\n        /* \"#utility.yul\":8971:8992   */\n      0x416c726561647920696e697469616c697a656400000000000000000000000000\n        /* \"#utility.yul\":8967:8968   */\n      0x00\n        /* \"#utility.yul\":8959:8965   */\n      dup3\n        /* \"#utility.yul\":8955:8969   */\n      add\n        /* \"#utility.yul\":8948:8993   */\n      mstore\n        /* \"#utility.yul\":8831:9000   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9006:9372   */\n    tag_278:\n        /* \"#utility.yul\":9148:9151   */\n      0x00\n        /* \"#utility.yul\":9169:9236   */\n      tag_415\n        /* \"#utility.yul\":9233:9235   */\n      0x13\n        /* \"#utility.yul\":9228:9231   */\n      dup4\n        /* \"#utility.yul\":9169:9236   */\n      tag_276\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":9162:9236   */\n      swap2\n      pop\n        /* \"#utility.yul\":9245:9338   */\n      tag_416\n        /* \"#utility.yul\":9334:9337   */\n      dup3\n        /* \"#utility.yul\":9245:9338   */\n      tag_277\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":9363:9365   */\n      0x20\n        /* \"#utility.yul\":9358:9361   */\n      dup3\n        /* \"#utility.yul\":9354:9366   */\n      add\n        /* \"#utility.yul\":9347:9366   */\n      swap1\n      pop\n        /* \"#utility.yul\":9006:9372   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9378:9797   */\n    tag_139:\n        /* \"#utility.yul\":9544:9548   */\n      0x00\n        /* \"#utility.yul\":9582:9584   */\n      0x20\n        /* \"#utility.yul\":9571:9580   */\n      dup3\n        /* \"#utility.yul\":9567:9585   */\n      add\n        /* \"#utility.yul\":9559:9585   */\n      swap1\n      pop\n        /* \"#utility.yul\":9631:9640   */\n      dup2\n        /* \"#utility.yul\":9625:9629   */\n      dup2\n        /* \"#utility.yul\":9621:9641   */\n      sub\n        /* \"#utility.yul\":9617:9618   */\n      0x00\n        /* \"#utility.yul\":9606:9615   */\n      dup4\n        /* \"#utility.yul\":9602:9619   */\n      add\n        /* \"#utility.yul\":9595:9642   */\n      mstore\n        /* \"#utility.yul\":9659:9790   */\n      tag_418\n        /* \"#utility.yul\":9785:9789   */\n      dup2\n        /* \"#utility.yul\":9659:9790   */\n      tag_278\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":9651:9790   */\n      swap1\n      pop\n        /* \"#utility.yul\":9378:9797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9803:9974   */\n    tag_279:\n        /* \"#utility.yul\":9943:9966   */\n      0x496e76616c696420746f6b656e20616464726573730000000000000000000000\n        /* \"#utility.yul\":9939:9940   */\n      0x00\n        /* \"#utility.yul\":9931:9937   */\n      dup3\n        /* \"#utility.yul\":9927:9941   */\n      add\n        /* \"#utility.yul\":9920:9967   */\n      mstore\n        /* \"#utility.yul\":9803:9974   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9980:10346   */\n    tag_280:\n        /* \"#utility.yul\":10122:10125   */\n      0x00\n        /* \"#utility.yul\":10143:10210   */\n      tag_421\n        /* \"#utility.yul\":10207:10209   */\n      0x15\n        /* \"#utility.yul\":10202:10205   */\n      dup4\n        /* \"#utility.yul\":10143:10210   */\n      tag_276\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":10136:10210   */\n      swap2\n      pop\n        /* \"#utility.yul\":10219:10312   */\n      tag_422\n        /* \"#utility.yul\":10308:10311   */\n      dup3\n        /* \"#utility.yul\":10219:10312   */\n      tag_279\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":10337:10339   */\n      0x20\n        /* \"#utility.yul\":10332:10335   */\n      dup3\n        /* \"#utility.yul\":10328:10340   */\n      add\n        /* \"#utility.yul\":10321:10340   */\n      swap1\n      pop\n        /* \"#utility.yul\":9980:10346   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10352:10771   */\n    tag_142:\n        /* \"#utility.yul\":10518:10522   */\n      0x00\n        /* \"#utility.yul\":10556:10558   */\n      0x20\n        /* \"#utility.yul\":10545:10554   */\n      dup3\n        /* \"#utility.yul\":10541:10559   */\n      add\n        /* \"#utility.yul\":10533:10559   */\n      swap1\n      pop\n        /* \"#utility.yul\":10605:10614   */\n      dup2\n        /* \"#utility.yul\":10599:10603   */\n      dup2\n        /* \"#utility.yul\":10595:10615   */\n      sub\n        /* \"#utility.yul\":10591:10592   */\n      0x00\n        /* \"#utility.yul\":10580:10589   */\n      dup4\n        /* \"#utility.yul\":10576:10593   */\n      add\n        /* \"#utility.yul\":10569:10616   */\n      mstore\n        /* \"#utility.yul\":10633:10764   */\n      tag_424\n        /* \"#utility.yul\":10759:10763   */\n      dup2\n        /* \"#utility.yul\":10633:10764   */\n      tag_280\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":10625:10764   */\n      swap1\n      pop\n        /* \"#utility.yul\":10352:10771   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10777:10954   */\n    tag_281:\n        /* \"#utility.yul\":10917:10946   */\n      0x496e76616c69642062656e656669636961727920616464726573730000000000\n        /* \"#utility.yul\":10913:10914   */\n      0x00\n        /* \"#utility.yul\":10905:10911   */\n      dup3\n        /* \"#utility.yul\":10901:10915   */\n      add\n        /* \"#utility.yul\":10894:10947   */\n      mstore\n        /* \"#utility.yul\":10777:10954   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10960:11326   */\n    tag_282:\n        /* \"#utility.yul\":11102:11105   */\n      0x00\n        /* \"#utility.yul\":11123:11190   */\n      tag_427\n        /* \"#utility.yul\":11187:11189   */\n      0x1b\n        /* \"#utility.yul\":11182:11185   */\n      dup4\n        /* \"#utility.yul\":11123:11190   */\n      tag_276\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":11116:11190   */\n      swap2\n      pop\n        /* \"#utility.yul\":11199:11292   */\n      tag_428\n        /* \"#utility.yul\":11288:11291   */\n      dup3\n        /* \"#utility.yul\":11199:11292   */\n      tag_281\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":11317:11319   */\n      0x20\n        /* \"#utility.yul\":11312:11315   */\n      dup3\n        /* \"#utility.yul\":11308:11320   */\n      add\n        /* \"#utility.yul\":11301:11320   */\n      swap1\n      pop\n        /* \"#utility.yul\":10960:11326   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11332:11751   */\n    tag_145:\n        /* \"#utility.yul\":11498:11502   */\n      0x00\n        /* \"#utility.yul\":11536:11538   */\n      0x20\n        /* \"#utility.yul\":11525:11534   */\n      dup3\n        /* \"#utility.yul\":11521:11539   */\n      add\n        /* \"#utility.yul\":11513:11539   */\n      swap1\n      pop\n        /* \"#utility.yul\":11585:11594   */\n      dup2\n        /* \"#utility.yul\":11579:11583   */\n      dup2\n        /* \"#utility.yul\":11575:11595   */\n      sub\n        /* \"#utility.yul\":11571:11572   */\n      0x00\n        /* \"#utility.yul\":11560:11569   */\n      dup4\n        /* \"#utility.yul\":11556:11573   */\n      add\n        /* \"#utility.yul\":11549:11596   */\n      mstore\n        /* \"#utility.yul\":11613:11744   */\n      tag_430\n        /* \"#utility.yul\":11739:11743   */\n      dup2\n        /* \"#utility.yul\":11613:11744   */\n      tag_282\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":11605:11744   */\n      swap1\n      pop\n        /* \"#utility.yul\":11332:11751   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11757:11979   */\n    tag_283:\n        /* \"#utility.yul\":11897:11931   */\n      0x546f74616c20616d6f756e74206d757374206265206772656174657220746861\n        /* \"#utility.yul\":11893:11894   */\n      0x00\n        /* \"#utility.yul\":11885:11891   */\n      dup3\n        /* \"#utility.yul\":11881:11895   */\n      add\n        /* \"#utility.yul\":11874:11932   */\n      mstore\n        /* \"#utility.yul\":11966:11971   */\n      0x6e20300000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11961:11963   */\n      0x20\n        /* \"#utility.yul\":11953:11959   */\n      dup3\n        /* \"#utility.yul\":11949:11964   */\n      add\n        /* \"#utility.yul\":11942:11972   */\n      mstore\n        /* \"#utility.yul\":11757:11979   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11985:12351   */\n    tag_284:\n        /* \"#utility.yul\":12127:12130   */\n      0x00\n        /* \"#utility.yul\":12148:12215   */\n      tag_433\n        /* \"#utility.yul\":12212:12214   */\n      0x23\n        /* \"#utility.yul\":12207:12210   */\n      dup4\n        /* \"#utility.yul\":12148:12215   */\n      tag_276\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":12141:12215   */\n      swap2\n      pop\n        /* \"#utility.yul\":12224:12317   */\n      tag_434\n        /* \"#utility.yul\":12313:12316   */\n      dup3\n        /* \"#utility.yul\":12224:12317   */\n      tag_283\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":12342:12344   */\n      0x40\n        /* \"#utility.yul\":12337:12340   */\n      dup3\n        /* \"#utility.yul\":12333:12345   */\n      add\n        /* \"#utility.yul\":12326:12345   */\n      swap1\n      pop\n        /* \"#utility.yul\":11985:12351   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12357:12776   */\n    tag_148:\n        /* \"#utility.yul\":12523:12527   */\n      0x00\n        /* \"#utility.yul\":12561:12563   */\n      0x20\n        /* \"#utility.yul\":12550:12559   */\n      dup3\n        /* \"#utility.yul\":12546:12564   */\n      add\n        /* \"#utility.yul\":12538:12564   */\n      swap1\n      pop\n        /* \"#utility.yul\":12610:12619   */\n      dup2\n        /* \"#utility.yul\":12604:12608   */\n      dup2\n        /* \"#utility.yul\":12600:12620   */\n      sub\n        /* \"#utility.yul\":12596:12597   */\n      0x00\n        /* \"#utility.yul\":12585:12594   */\n      dup4\n        /* \"#utility.yul\":12581:12598   */\n      add\n        /* \"#utility.yul\":12574:12621   */\n      mstore\n        /* \"#utility.yul\":12638:12769   */\n      tag_436\n        /* \"#utility.yul\":12764:12768   */\n      dup2\n        /* \"#utility.yul\":12638:12769   */\n      tag_284\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":12630:12769   */\n      swap1\n      pop\n        /* \"#utility.yul\":12357:12776   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12782:12963   */\n    tag_285:\n        /* \"#utility.yul\":12922:12955   */\n      0x4475726174696f6e206d7573742062652067726561746572207468616e203000\n        /* \"#utility.yul\":12918:12919   */\n      0x00\n        /* \"#utility.yul\":12910:12916   */\n      dup3\n        /* \"#utility.yul\":12906:12920   */\n      add\n        /* \"#utility.yul\":12899:12956   */\n      mstore\n        /* \"#utility.yul\":12782:12963   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12969:13335   */\n    tag_286:\n        /* \"#utility.yul\":13111:13114   */\n      0x00\n        /* \"#utility.yul\":13132:13199   */\n      tag_439\n        /* \"#utility.yul\":13196:13198   */\n      0x1f\n        /* \"#utility.yul\":13191:13194   */\n      dup4\n        /* \"#utility.yul\":13132:13199   */\n      tag_276\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":13125:13199   */\n      swap2\n      pop\n        /* \"#utility.yul\":13208:13301   */\n      tag_440\n        /* \"#utility.yul\":13297:13300   */\n      dup3\n        /* \"#utility.yul\":13208:13301   */\n      tag_285\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":13326:13328   */\n      0x20\n        /* \"#utility.yul\":13321:13324   */\n      dup3\n        /* \"#utility.yul\":13317:13329   */\n      add\n        /* \"#utility.yul\":13310:13329   */\n      swap1\n      pop\n        /* \"#utility.yul\":12969:13335   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13341:13760   */\n    tag_151:\n        /* \"#utility.yul\":13507:13511   */\n      0x00\n        /* \"#utility.yul\":13545:13547   */\n      0x20\n        /* \"#utility.yul\":13534:13543   */\n      dup3\n        /* \"#utility.yul\":13530:13548   */\n      add\n        /* \"#utility.yul\":13522:13548   */\n      swap1\n      pop\n        /* \"#utility.yul\":13594:13603   */\n      dup2\n        /* \"#utility.yul\":13588:13592   */\n      dup2\n        /* \"#utility.yul\":13584:13604   */\n      sub\n        /* \"#utility.yul\":13580:13581   */\n      0x00\n        /* \"#utility.yul\":13569:13578   */\n      dup4\n        /* \"#utility.yul\":13565:13582   */\n      add\n        /* \"#utility.yul\":13558:13605   */\n      mstore\n        /* \"#utility.yul\":13622:13753   */\n      tag_442\n        /* \"#utility.yul\":13748:13752   */\n      dup2\n        /* \"#utility.yul\":13622:13753   */\n      tag_286\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":13614:13753   */\n      swap1\n      pop\n        /* \"#utility.yul\":13341:13760   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13766:13944   */\n    tag_287:\n        /* \"#utility.yul\":13906:13936   */\n      0x436c6966662063616e6e6f7420657863656564206475726174696f6e00000000\n        /* \"#utility.yul\":13902:13903   */\n      0x00\n        /* \"#utility.yul\":13894:13900   */\n      dup3\n        /* \"#utility.yul\":13890:13904   */\n      add\n        /* \"#utility.yul\":13883:13937   */\n      mstore\n        /* \"#utility.yul\":13766:13944   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13950:14316   */\n    tag_288:\n        /* \"#utility.yul\":14092:14095   */\n      0x00\n        /* \"#utility.yul\":14113:14180   */\n      tag_445\n        /* \"#utility.yul\":14177:14179   */\n      0x1c\n        /* \"#utility.yul\":14172:14175   */\n      dup4\n        /* \"#utility.yul\":14113:14180   */\n      tag_276\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":14106:14180   */\n      swap2\n      pop\n        /* \"#utility.yul\":14189:14282   */\n      tag_446\n        /* \"#utility.yul\":14278:14281   */\n      dup3\n        /* \"#utility.yul\":14189:14282   */\n      tag_287\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":14307:14309   */\n      0x20\n        /* \"#utility.yul\":14302:14305   */\n      dup3\n        /* \"#utility.yul\":14298:14310   */\n      add\n        /* \"#utility.yul\":14291:14310   */\n      swap1\n      pop\n        /* \"#utility.yul\":13950:14316   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14322:14741   */\n    tag_154:\n        /* \"#utility.yul\":14488:14492   */\n      0x00\n        /* \"#utility.yul\":14526:14528   */\n      0x20\n        /* \"#utility.yul\":14515:14524   */\n      dup3\n        /* \"#utility.yul\":14511:14529   */\n      add\n        /* \"#utility.yul\":14503:14529   */\n      swap1\n      pop\n        /* \"#utility.yul\":14575:14584   */\n      dup2\n        /* \"#utility.yul\":14569:14573   */\n      dup2\n        /* \"#utility.yul\":14565:14585   */\n      sub\n        /* \"#utility.yul\":14561:14562   */\n      0x00\n        /* \"#utility.yul\":14550:14559   */\n      dup4\n        /* \"#utility.yul\":14546:14563   */\n      add\n        /* \"#utility.yul\":14539:14586   */\n      mstore\n        /* \"#utility.yul\":14603:14734   */\n      tag_448\n        /* \"#utility.yul\":14729:14733   */\n      dup2\n        /* \"#utility.yul\":14603:14734   */\n      tag_288\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":14595:14734   */\n      swap1\n      pop\n        /* \"#utility.yul\":14322:14741   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14747:14918   */\n    tag_289:\n        /* \"#utility.yul\":14887:14910   */\n      0x496e76616c6964206f776e657220616464726573730000000000000000000000\n        /* \"#utility.yul\":14883:14884   */\n      0x00\n        /* \"#utility.yul\":14875:14881   */\n      dup3\n        /* \"#utility.yul\":14871:14885   */\n      add\n        /* \"#utility.yul\":14864:14911   */\n      mstore\n        /* \"#utility.yul\":14747:14918   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14924:15290   */\n    tag_290:\n        /* \"#utility.yul\":15066:15069   */\n      0x00\n        /* \"#utility.yul\":15087:15154   */\n      tag_451\n        /* \"#utility.yul\":15151:15153   */\n      0x15\n        /* \"#utility.yul\":15146:15149   */\n      dup4\n        /* \"#utility.yul\":15087:15154   */\n      tag_276\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":15080:15154   */\n      swap2\n      pop\n        /* \"#utility.yul\":15163:15256   */\n      tag_452\n        /* \"#utility.yul\":15252:15255   */\n      dup3\n        /* \"#utility.yul\":15163:15256   */\n      tag_289\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":15281:15283   */\n      0x20\n        /* \"#utility.yul\":15276:15279   */\n      dup3\n        /* \"#utility.yul\":15272:15284   */\n      add\n        /* \"#utility.yul\":15265:15284   */\n      swap1\n      pop\n        /* \"#utility.yul\":14924:15290   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15296:15715   */\n    tag_157:\n        /* \"#utility.yul\":15462:15466   */\n      0x00\n        /* \"#utility.yul\":15500:15502   */\n      0x20\n        /* \"#utility.yul\":15489:15498   */\n      dup3\n        /* \"#utility.yul\":15485:15503   */\n      add\n        /* \"#utility.yul\":15477:15503   */\n      swap1\n      pop\n        /* \"#utility.yul\":15549:15558   */\n      dup2\n        /* \"#utility.yul\":15543:15547   */\n      dup2\n        /* \"#utility.yul\":15539:15559   */\n      sub\n        /* \"#utility.yul\":15535:15536   */\n      0x00\n        /* \"#utility.yul\":15524:15533   */\n      dup4\n        /* \"#utility.yul\":15520:15537   */\n      add\n        /* \"#utility.yul\":15513:15560   */\n      mstore\n        /* \"#utility.yul\":15577:15708   */\n      tag_454\n        /* \"#utility.yul\":15703:15707   */\n      dup2\n        /* \"#utility.yul\":15577:15708   */\n      tag_290\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":15569:15708   */\n      swap1\n      pop\n        /* \"#utility.yul\":15296:15715   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15721:16262   */\n    tag_160:\n        /* \"#utility.yul\":15892:15896   */\n      0x00\n        /* \"#utility.yul\":15930:15933   */\n      0x80\n        /* \"#utility.yul\":15919:15928   */\n      dup3\n        /* \"#utility.yul\":15915:15934   */\n      add\n        /* \"#utility.yul\":15907:15934   */\n      swap1\n      pop\n        /* \"#utility.yul\":15944:16015   */\n      tag_456\n        /* \"#utility.yul\":16012:16013   */\n      0x00\n        /* \"#utility.yul\":16001:16010   */\n      dup4\n        /* \"#utility.yul\":15997:16014   */\n      add\n        /* \"#utility.yul\":15988:15994   */\n      dup8\n        /* \"#utility.yul\":15944:16015   */\n      tag_254\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":16025:16097   */\n      tag_457\n        /* \"#utility.yul\":16093:16095   */\n      0x20\n        /* \"#utility.yul\":16082:16091   */\n      dup4\n        /* \"#utility.yul\":16078:16096   */\n      add\n        /* \"#utility.yul\":16069:16075   */\n      dup7\n        /* \"#utility.yul\":16025:16097   */\n      tag_254\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":16107:16179   */\n      tag_458\n        /* \"#utility.yul\":16175:16177   */\n      0x40\n        /* \"#utility.yul\":16164:16173   */\n      dup4\n        /* \"#utility.yul\":16160:16178   */\n      add\n        /* \"#utility.yul\":16151:16157   */\n      dup6\n        /* \"#utility.yul\":16107:16179   */\n      tag_254\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":16189:16255   */\n      tag_459\n        /* \"#utility.yul\":16251:16253   */\n      0x60\n        /* \"#utility.yul\":16240:16249   */\n      dup4\n        /* \"#utility.yul\":16236:16254   */\n      add\n        /* \"#utility.yul\":16227:16233   */\n      dup5\n        /* \"#utility.yul\":16189:16255   */\n      tag_256\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":15721:16262   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16268:16442   */\n    tag_291:\n        /* \"#utility.yul\":16408:16434   */\n      0x56657374696e6720686173206265656e207265766f6b65640000000000000000\n        /* \"#utility.yul\":16404:16405   */\n      0x00\n        /* \"#utility.yul\":16396:16402   */\n      dup3\n        /* \"#utility.yul\":16392:16406   */\n      add\n        /* \"#utility.yul\":16385:16435   */\n      mstore\n        /* \"#utility.yul\":16268:16442   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16448:16814   */\n    tag_292:\n        /* \"#utility.yul\":16590:16593   */\n      0x00\n        /* \"#utility.yul\":16611:16678   */\n      tag_462\n        /* \"#utility.yul\":16675:16677   */\n      0x18\n        /* \"#utility.yul\":16670:16673   */\n      dup4\n        /* \"#utility.yul\":16611:16678   */\n      tag_276\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":16604:16678   */\n      swap2\n      pop\n        /* \"#utility.yul\":16687:16780   */\n      tag_463\n        /* \"#utility.yul\":16776:16779   */\n      dup3\n        /* \"#utility.yul\":16687:16780   */\n      tag_291\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":16805:16807   */\n      0x20\n        /* \"#utility.yul\":16800:16803   */\n      dup3\n        /* \"#utility.yul\":16796:16808   */\n      add\n        /* \"#utility.yul\":16789:16808   */\n      swap1\n      pop\n        /* \"#utility.yul\":16448:16814   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16820:17239   */\n    tag_167:\n        /* \"#utility.yul\":16986:16990   */\n      0x00\n        /* \"#utility.yul\":17024:17026   */\n      0x20\n        /* \"#utility.yul\":17013:17022   */\n      dup3\n        /* \"#utility.yul\":17009:17027   */\n      add\n        /* \"#utility.yul\":17001:17027   */\n      swap1\n      pop\n        /* \"#utility.yul\":17073:17082   */\n      dup2\n        /* \"#utility.yul\":17067:17071   */\n      dup2\n        /* \"#utility.yul\":17063:17083   */\n      sub\n        /* \"#utility.yul\":17059:17060   */\n      0x00\n        /* \"#utility.yul\":17048:17057   */\n      dup4\n        /* \"#utility.yul\":17044:17061   */\n      add\n        /* \"#utility.yul\":17037:17084   */\n      mstore\n        /* \"#utility.yul\":17101:17232   */\n      tag_465\n        /* \"#utility.yul\":17227:17231   */\n      dup2\n        /* \"#utility.yul\":17101:17232   */\n      tag_292\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":17093:17232   */\n      swap1\n      pop\n        /* \"#utility.yul\":16820:17239   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17245:17407   */\n    tag_293:\n        /* \"#utility.yul\":17385:17399   */\n      0x556e617574686f72697a65640000000000000000000000000000000000000000\n        /* \"#utility.yul\":17381:17382   */\n      0x00\n        /* \"#utility.yul\":17373:17379   */\n      dup3\n        /* \"#utility.yul\":17369:17383   */\n      add\n        /* \"#utility.yul\":17362:17400   */\n      mstore\n        /* \"#utility.yul\":17245:17407   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17413:17779   */\n    tag_294:\n        /* \"#utility.yul\":17555:17558   */\n      0x00\n        /* \"#utility.yul\":17576:17643   */\n      tag_468\n        /* \"#utility.yul\":17640:17642   */\n      0x0c\n        /* \"#utility.yul\":17635:17638   */\n      dup4\n        /* \"#utility.yul\":17576:17643   */\n      tag_276\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":17569:17643   */\n      swap2\n      pop\n        /* \"#utility.yul\":17652:17745   */\n      tag_469\n        /* \"#utility.yul\":17741:17744   */\n      dup3\n        /* \"#utility.yul\":17652:17745   */\n      tag_293\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":17770:17772   */\n      0x20\n        /* \"#utility.yul\":17765:17768   */\n      dup3\n        /* \"#utility.yul\":17761:17773   */\n      add\n        /* \"#utility.yul\":17754:17773   */\n      swap1\n      pop\n        /* \"#utility.yul\":17413:17779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17785:18204   */\n    tag_172:\n        /* \"#utility.yul\":17951:17955   */\n      0x00\n        /* \"#utility.yul\":17989:17991   */\n      0x20\n        /* \"#utility.yul\":17978:17987   */\n      dup3\n        /* \"#utility.yul\":17974:17992   */\n      add\n        /* \"#utility.yul\":17966:17992   */\n      swap1\n      pop\n        /* \"#utility.yul\":18038:18047   */\n      dup2\n        /* \"#utility.yul\":18032:18036   */\n      dup2\n        /* \"#utility.yul\":18028:18048   */\n      sub\n        /* \"#utility.yul\":18024:18025   */\n      0x00\n        /* \"#utility.yul\":18013:18022   */\n      dup4\n        /* \"#utility.yul\":18009:18026   */\n      add\n        /* \"#utility.yul\":18002:18049   */\n      mstore\n        /* \"#utility.yul\":18066:18197   */\n      tag_471\n        /* \"#utility.yul\":18192:18196   */\n      dup2\n        /* \"#utility.yul\":18066:18197   */\n      tag_294\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":18058:18197   */\n      swap1\n      pop\n        /* \"#utility.yul\":17785:18204   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18210:18380   */\n    tag_295:\n        /* \"#utility.yul\":18350:18372   */\n      0x4e6f20746f6b656e7320746f2072656c65617365000000000000000000000000\n        /* \"#utility.yul\":18346:18347   */\n      0x00\n        /* \"#utility.yul\":18338:18344   */\n      dup3\n        /* \"#utility.yul\":18334:18348   */\n      add\n        /* \"#utility.yul\":18327:18373   */\n      mstore\n        /* \"#utility.yul\":18210:18380   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18386:18752   */\n    tag_296:\n        /* \"#utility.yul\":18528:18531   */\n      0x00\n        /* \"#utility.yul\":18549:18616   */\n      tag_474\n        /* \"#utility.yul\":18613:18615   */\n      0x14\n        /* \"#utility.yul\":18608:18611   */\n      dup4\n        /* \"#utility.yul\":18549:18616   */\n      tag_276\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":18542:18616   */\n      swap2\n      pop\n        /* \"#utility.yul\":18625:18718   */\n      tag_475\n        /* \"#utility.yul\":18714:18717   */\n      dup3\n        /* \"#utility.yul\":18625:18718   */\n      tag_295\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":18743:18745   */\n      0x20\n        /* \"#utility.yul\":18738:18741   */\n      dup3\n        /* \"#utility.yul\":18734:18746   */\n      add\n        /* \"#utility.yul\":18727:18746   */\n      swap1\n      pop\n        /* \"#utility.yul\":18386:18752   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18758:19177   */\n    tag_176:\n        /* \"#utility.yul\":18924:18928   */\n      0x00\n        /* \"#utility.yul\":18962:18964   */\n      0x20\n        /* \"#utility.yul\":18951:18960   */\n      dup3\n        /* \"#utility.yul\":18947:18965   */\n      add\n        /* \"#utility.yul\":18939:18965   */\n      swap1\n      pop\n        /* \"#utility.yul\":19011:19020   */\n      dup2\n        /* \"#utility.yul\":19005:19009   */\n      dup2\n        /* \"#utility.yul\":19001:19021   */\n      sub\n        /* \"#utility.yul\":18997:18998   */\n      0x00\n        /* \"#utility.yul\":18986:18995   */\n      dup4\n        /* \"#utility.yul\":18982:18999   */\n      add\n        /* \"#utility.yul\":18975:19022   */\n      mstore\n        /* \"#utility.yul\":19039:19170   */\n      tag_477\n        /* \"#utility.yul\":19165:19169   */\n      dup2\n        /* \"#utility.yul\":19039:19170   */\n      tag_296\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":19031:19170   */\n      swap1\n      pop\n        /* \"#utility.yul\":18758:19177   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19183:19361   */\n    tag_297:\n        /* \"#utility.yul\":19323:19353   */\n      0x43616e6e6f74207265636f7665722076657374696e6720746f6b656e00000000\n        /* \"#utility.yul\":19319:19320   */\n      0x00\n        /* \"#utility.yul\":19311:19317   */\n      dup3\n        /* \"#utility.yul\":19307:19321   */\n      add\n        /* \"#utility.yul\":19300:19354   */\n      mstore\n        /* \"#utility.yul\":19183:19361   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19367:19733   */\n    tag_298:\n        /* \"#utility.yul\":19509:19512   */\n      0x00\n        /* \"#utility.yul\":19530:19597   */\n      tag_480\n        /* \"#utility.yul\":19594:19596   */\n      0x1c\n        /* \"#utility.yul\":19589:19592   */\n      dup4\n        /* \"#utility.yul\":19530:19597   */\n      tag_276\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":19523:19597   */\n      swap2\n      pop\n        /* \"#utility.yul\":19606:19699   */\n      tag_481\n        /* \"#utility.yul\":19695:19698   */\n      dup3\n        /* \"#utility.yul\":19606:19699   */\n      tag_297\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":19724:19726   */\n      0x20\n        /* \"#utility.yul\":19719:19722   */\n      dup3\n        /* \"#utility.yul\":19715:19727   */\n      add\n        /* \"#utility.yul\":19708:19727   */\n      swap1\n      pop\n        /* \"#utility.yul\":19367:19733   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19739:20158   */\n    tag_189:\n        /* \"#utility.yul\":19905:19909   */\n      0x00\n        /* \"#utility.yul\":19943:19945   */\n      0x20\n        /* \"#utility.yul\":19932:19941   */\n      dup3\n        /* \"#utility.yul\":19928:19946   */\n      add\n        /* \"#utility.yul\":19920:19946   */\n      swap1\n      pop\n        /* \"#utility.yul\":19992:20001   */\n      dup2\n        /* \"#utility.yul\":19986:19990   */\n      dup2\n        /* \"#utility.yul\":19982:20002   */\n      sub\n        /* \"#utility.yul\":19978:19979   */\n      0x00\n        /* \"#utility.yul\":19967:19976   */\n      dup4\n        /* \"#utility.yul\":19963:19980   */\n      add\n        /* \"#utility.yul\":19956:20003   */\n      mstore\n        /* \"#utility.yul\":20020:20151   */\n      tag_483\n        /* \"#utility.yul\":20146:20150   */\n      dup2\n        /* \"#utility.yul\":20020:20151   */\n      tag_298\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":20012:20151   */\n      swap1\n      pop\n        /* \"#utility.yul\":19739:20158   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20164:20338   */\n    tag_299:\n        /* \"#utility.yul\":20304:20330   */\n      0x56657374696e67206973206e6f74207265766f6361626c650000000000000000\n        /* \"#utility.yul\":20300:20301   */\n      0x00\n        /* \"#utility.yul\":20292:20298   */\n      dup3\n        /* \"#utility.yul\":20288:20302   */\n      add\n        /* \"#utility.yul\":20281:20331   */\n      mstore\n        /* \"#utility.yul\":20164:20338   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20344:20710   */\n    tag_300:\n        /* \"#utility.yul\":20486:20489   */\n      0x00\n        /* \"#utility.yul\":20507:20574   */\n      tag_486\n        /* \"#utility.yul\":20571:20573   */\n      0x18\n        /* \"#utility.yul\":20566:20569   */\n      dup4\n        /* \"#utility.yul\":20507:20574   */\n      tag_276\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":20500:20574   */\n      swap2\n      pop\n        /* \"#utility.yul\":20583:20676   */\n      tag_487\n        /* \"#utility.yul\":20672:20675   */\n      dup3\n        /* \"#utility.yul\":20583:20676   */\n      tag_299\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":20701:20703   */\n      0x20\n        /* \"#utility.yul\":20696:20699   */\n      dup3\n        /* \"#utility.yul\":20692:20704   */\n      add\n        /* \"#utility.yul\":20685:20704   */\n      swap1\n      pop\n        /* \"#utility.yul\":20344:20710   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20716:21135   */\n    tag_197:\n        /* \"#utility.yul\":20882:20886   */\n      0x00\n        /* \"#utility.yul\":20920:20922   */\n      0x20\n        /* \"#utility.yul\":20909:20918   */\n      dup3\n        /* \"#utility.yul\":20905:20923   */\n      add\n        /* \"#utility.yul\":20897:20923   */\n      swap1\n      pop\n        /* \"#utility.yul\":20969:20978   */\n      dup2\n        /* \"#utility.yul\":20963:20967   */\n      dup2\n        /* \"#utility.yul\":20959:20979   */\n      sub\n        /* \"#utility.yul\":20955:20956   */\n      0x00\n        /* \"#utility.yul\":20944:20953   */\n      dup4\n        /* \"#utility.yul\":20940:20957   */\n      add\n        /* \"#utility.yul\":20933:20980   */\n      mstore\n        /* \"#utility.yul\":20997:21128   */\n      tag_489\n        /* \"#utility.yul\":21123:21127   */\n      dup2\n        /* \"#utility.yul\":20997:21128   */\n      tag_300\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":20989:21128   */\n      swap1\n      pop\n        /* \"#utility.yul\":20716:21135   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21141:21314   */\n    tag_301:\n        /* \"#utility.yul\":21281:21306   */\n      0x56657374696e6720616c7265616479207265766f6b6564000000000000000000\n        /* \"#utility.yul\":21277:21278   */\n      0x00\n        /* \"#utility.yul\":21269:21275   */\n      dup3\n        /* \"#utility.yul\":21265:21279   */\n      add\n        /* \"#utility.yul\":21258:21307   */\n      mstore\n        /* \"#utility.yul\":21141:21314   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21320:21686   */\n    tag_302:\n        /* \"#utility.yul\":21462:21465   */\n      0x00\n        /* \"#utility.yul\":21483:21550   */\n      tag_492\n        /* \"#utility.yul\":21547:21549   */\n      0x17\n        /* \"#utility.yul\":21542:21545   */\n      dup4\n        /* \"#utility.yul\":21483:21550   */\n      tag_276\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":21476:21550   */\n      swap2\n      pop\n        /* \"#utility.yul\":21559:21652   */\n      tag_493\n        /* \"#utility.yul\":21648:21651   */\n      dup3\n        /* \"#utility.yul\":21559:21652   */\n      tag_301\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":21677:21679   */\n      0x20\n        /* \"#utility.yul\":21672:21675   */\n      dup3\n        /* \"#utility.yul\":21668:21680   */\n      add\n        /* \"#utility.yul\":21661:21680   */\n      swap1\n      pop\n        /* \"#utility.yul\":21320:21686   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21692:22111   */\n    tag_200:\n        /* \"#utility.yul\":21858:21862   */\n      0x00\n        /* \"#utility.yul\":21896:21898   */\n      0x20\n        /* \"#utility.yul\":21885:21894   */\n      dup3\n        /* \"#utility.yul\":21881:21899   */\n      add\n        /* \"#utility.yul\":21873:21899   */\n      swap1\n      pop\n        /* \"#utility.yul\":21945:21954   */\n      dup2\n        /* \"#utility.yul\":21939:21943   */\n      dup2\n        /* \"#utility.yul\":21935:21955   */\n      sub\n        /* \"#utility.yul\":21931:21932   */\n      0x00\n        /* \"#utility.yul\":21920:21929   */\n      dup4\n        /* \"#utility.yul\":21916:21933   */\n      add\n        /* \"#utility.yul\":21909:21956   */\n      mstore\n        /* \"#utility.yul\":21973:22104   */\n      tag_495\n        /* \"#utility.yul\":22099:22103   */\n      dup2\n        /* \"#utility.yul\":21973:22104   */\n      tag_302\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":21965:22104   */\n      swap1\n      pop\n        /* \"#utility.yul\":21692:22111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22117:22298   */\n    tag_303:\n        /* \"#utility.yul\":22257:22290   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":22253:22254   */\n      0x00\n        /* \"#utility.yul\":22245:22251   */\n      dup3\n        /* \"#utility.yul\":22241:22255   */\n      add\n        /* \"#utility.yul\":22234:22291   */\n      mstore\n        /* \"#utility.yul\":22117:22298   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22304:22670   */\n    tag_304:\n        /* \"#utility.yul\":22446:22449   */\n      0x00\n        /* \"#utility.yul\":22467:22534   */\n      tag_498\n        /* \"#utility.yul\":22531:22533   */\n      0x1f\n        /* \"#utility.yul\":22526:22529   */\n      dup4\n        /* \"#utility.yul\":22467:22534   */\n      tag_276\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":22460:22534   */\n      swap2\n      pop\n        /* \"#utility.yul\":22543:22636   */\n      tag_499\n        /* \"#utility.yul\":22632:22635   */\n      dup3\n        /* \"#utility.yul\":22543:22636   */\n      tag_303\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":22661:22663   */\n      0x20\n        /* \"#utility.yul\":22656:22659   */\n      dup3\n        /* \"#utility.yul\":22652:22664   */\n      add\n        /* \"#utility.yul\":22645:22664   */\n      swap1\n      pop\n        /* \"#utility.yul\":22304:22670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22676:23095   */\n    tag_239:\n        /* \"#utility.yul\":22842:22846   */\n      0x00\n        /* \"#utility.yul\":22880:22882   */\n      0x20\n        /* \"#utility.yul\":22869:22878   */\n      dup3\n        /* \"#utility.yul\":22865:22883   */\n      add\n        /* \"#utility.yul\":22857:22883   */\n      swap1\n      pop\n        /* \"#utility.yul\":22929:22938   */\n      dup2\n        /* \"#utility.yul\":22923:22927   */\n      dup2\n        /* \"#utility.yul\":22919:22939   */\n      sub\n        /* \"#utility.yul\":22915:22916   */\n      0x00\n        /* \"#utility.yul\":22904:22913   */\n      dup4\n        /* \"#utility.yul\":22900:22917   */\n      add\n        /* \"#utility.yul\":22893:22940   */\n      mstore\n        /* \"#utility.yul\":22957:23088   */\n      tag_501\n        /* \"#utility.yul\":23083:23087   */\n      dup2\n        /* \"#utility.yul\":22957:23088   */\n      tag_304\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":22949:23088   */\n      swap1\n      pop\n        /* \"#utility.yul\":22676:23095   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23101:23433   */\n    tag_243:\n        /* \"#utility.yul\":23222:23226   */\n      0x00\n        /* \"#utility.yul\":23260:23262   */\n      0x40\n        /* \"#utility.yul\":23249:23258   */\n      dup3\n        /* \"#utility.yul\":23245:23263   */\n      add\n        /* \"#utility.yul\":23237:23263   */\n      swap1\n      pop\n        /* \"#utility.yul\":23273:23344   */\n      tag_503\n        /* \"#utility.yul\":23341:23342   */\n      0x00\n        /* \"#utility.yul\":23330:23339   */\n      dup4\n        /* \"#utility.yul\":23326:23343   */\n      add\n        /* \"#utility.yul\":23317:23323   */\n      dup6\n        /* \"#utility.yul\":23273:23344   */\n      tag_259\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":23354:23426   */\n      tag_504\n        /* \"#utility.yul\":23422:23424   */\n      0x20\n        /* \"#utility.yul\":23411:23420   */\n      dup4\n        /* \"#utility.yul\":23407:23425   */\n      add\n        /* \"#utility.yul\":23398:23404   */\n      dup5\n        /* \"#utility.yul\":23354:23426   */\n      tag_254\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":23101:23433   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122075971fd7ee9b9806324433c07a30ee4206da5b72375a9b871e370b47faf588e864736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_256": {
									"entryPoint": null,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_956": {
									"entryPoint": null,
									"id": 956,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 164,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:590:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:10",
														"type": ""
													}
												],
												"src": "7:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:10",
														"type": ""
													}
												],
												"src": "139:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:10",
														"type": ""
													}
												],
												"src": "241:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:10",
														"type": ""
													}
												],
												"src": "365:222:10"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000085575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200007c9190620001a8565b60405180910390fd5b6200009681620000a460201b60201c565b5060018081905550620001c3565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620001908262000165565b9050919050565b620001a28162000184565b82525050565b5f602082019050620001bd5f83018462000197565b92915050565b611e6080620001d15f395ff3fe608060405234801561000f575f80fd5b5060043610610156575f3560e01c806386d1a69f116100c1578063be9a65551161007a578063be9a655514610336578063dc25a30014610354578063ecb70fb71461037a578063ee4a745c14610398578063f2fde38b146103ba578063fc0c546a146103d657610156565b806386d1a69f146102ac578063872a7810146102b65780638da5cb5b146102d457806396132521146102f25780639639011e14610310578063b6549f751461032c57610156565b806344691f7e1161011357806344691f7e1461020e57806344b1231f1461022c5780635b9400811461024a57806363d256ce14610268578063715018a614610286578063841bee0d1461029057610156565b80630fb5a6b41461015a57806313d033c0146101785780631a39d8ef14610196578063253254d6146101b457806338af3eed146101d2578063392e53cd146101f0575b5f80fd5b6101626103f4565b60405161016f919061132d565b60405180910390f35b6101806103fa565b60405161018d919061132d565b60405180910390f35b61019e610400565b6040516101ab919061132d565b60405180910390f35b6101bc610406565b6040516101c99190611360565b60405180910390f35b6101da61041f565b6040516101e791906113b8565b60405180910390f35b6101f8610444565b6040516102059190611360565b60405180910390f35b61021661045a565b6040516102239190611360565b60405180910390f35b610234610466565b604051610241919061132d565b60405180910390f35b610252610521565b60405161025f919061132d565b60405180910390f35b61027061053c565b60405161027d9190611360565b60405180910390f35b61028e61054f565b005b6102aa60048036038101906102a59190611453565b610562565b005b6102b4610931565b005b6102be610ba1565b6040516102cb9190611360565b60405180910390f35b6102dc610bb3565b6040516102e991906113b8565b60405180910390f35b6102fa610bda565b604051610307919061132d565b60405180910390f35b61032a600480360381019061032591906114f0565b610be0565b005b610334610cad565b005b61033e610e59565b60405161034b919061132d565b60405180910390f35b61035c610e5f565b6040516103719998979695949392919061152e565b60405180910390f35b610382610ef7565b60405161038f9190611360565b60405180910390f35b6103a0610f10565b6040516103b19594939291906115b9565b60405180910390f35b6103d460048036038101906103cf919061160a565b610fab565b005b6103de61102f565b6040516103eb9190611690565b60405180910390f35b60065481565b60045481565b60075481565b5f60045460055461041791906116d6565b421015905090565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f600960029054906101000a900460ff16905090565b5f600554421015905090565b5f600960019054906101000a900460ff1615610484575f905061051e565b5f42905060045460055461049891906116d6565b8110156104a8575f91505061051e565b6006546005546104b891906116d6565b81106104c95760075491505061051e565b5f600454600554836104db9190611709565b6104e59190611709565b90505f6004546006546104f89190611709565b90505f818360075461050a919061173c565b61051491906117aa565b9050809450505050505b90565b5f60085461052d610466565b6105379190611709565b905090565b600960019054906101000a900460ff1681565b610557611054565b6105605f6110db565b565b600960029054906101000a900460ff16156105b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a990611834565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1603610620576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106179061189c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff160361068e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068590611904565b60405180910390fd5b5f85116106d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c790611992565b60405180910390fd5b5f8311610712576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610709906119fa565b60405180910390fd5b82841115610755576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074c90611a62565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ba90611aca565b60405180910390fd5b8660025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508560035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508460078190555083600481905550826006819055508160095f6101000a81548160ff021916908315150217905550426005819055505f6008819055505f600960016101000a81548160ff0219169083151502179055506001600960026101000a81548160ff0219169083151502179055506108bd816110db565b8573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f14fc8ad8c19c2f708dda1e872c93f682d7a3cae234bdc2712270269f8e1d00c2878787876040516109209493929190611ae8565b60405180910390a350505050505050565b61093961119c565b600960019054906101000a900460ff1615610989576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098090611b75565b60405180910390fd5b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610a1657506109e7610bb3565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610a55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4c90611bdd565b60405180910390fd5b5f610a5e610521565b90505f8111610aa2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9990611c45565b60405180910390fd5b8060085f828254610ab391906116d6565b92505081905550610b2760035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168260025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166111eb9092919063ffffffff16565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fc7798891864187665ac6dd119286e44ec13f014527aeeb2b8eb3fd413df9317982604051610b8e919061132d565b60405180910390a250610b9f61126a565b565b60095f9054906101000a900460ff1681565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60085481565b610be8611054565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6e90611cad565b60405180910390fd5b610ca9610c82610bb3565b828473ffffffffffffffffffffffffffffffffffffffff166111eb9092919063ffffffff16565b5050565b610cb5611054565b60095f9054906101000a900460ff16610d03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cfa90611d15565b60405180910390fd5b600960019054906101000a900460ff1615610d53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4a90611d7d565b60405180910390fd5b6001600960016101000a81548160ff0219169083151502179055505f610d77610466565b90505f81600754610d889190611709565b90505f811115610de657610de5610d9d610bb3565b8260025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166111eb9092919063ffffffff16565b5b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f57c76f5e278bfbd4eeb5207d287aa5a1a9e1113c65f7eefa540e379a2774d13b82604051610e4d919061132d565b60405180910390a25050565b60055481565b5f805f805f805f805f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660075460085460045460055460065460095f9054906101000a900460ff16600960019054906101000a900460ff16985098509850985098509850985098509850909192939495969798565b5f600654600554610f0891906116d6565b421015905090565b5f805f805f804290505f6005548211610f29575f610f38565b60055482610f379190611709565b5b90505f600654600554610f4b91906116d6565b8310610f57575f610f73565b82600654600554610f6891906116d6565b610f729190611709565b5b9050610f7d610466565b610f85610521565b600854600754610f959190611709565b8484975097509750975097505050509091929394565b610fb3611054565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611023575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161101a91906113b8565b60405180910390fd5b61102c816110db565b50565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61105c611273565b73ffffffffffffffffffffffffffffffffffffffff1661107a610bb3565b73ffffffffffffffffffffffffffffffffffffffff16146110d95761109d611273565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016110d091906113b8565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6002600154036111e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d890611de5565b60405180910390fd5b6002600181905550565b611265838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb858560405160240161121e929190611e03565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061127a565b505050565b60018081905550565b5f33905090565b5f8060205f8451602086015f885af180611299576040513d5f823e3d81fd5b3d92505f519150505f82146112b25760018114156112cd565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561130f57836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161130691906113b8565b60405180910390fd5b50505050565b5f819050919050565b61132781611315565b82525050565b5f6020820190506113405f83018461131e565b92915050565b5f8115159050919050565b61135a81611346565b82525050565b5f6020820190506113735f830184611351565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6113a282611379565b9050919050565b6113b281611398565b82525050565b5f6020820190506113cb5f8301846113a9565b92915050565b5f80fd5b6113de81611398565b81146113e8575f80fd5b50565b5f813590506113f9816113d5565b92915050565b61140881611315565b8114611412575f80fd5b50565b5f81359050611423816113ff565b92915050565b61143281611346565b811461143c575f80fd5b50565b5f8135905061144d81611429565b92915050565b5f805f805f805f60e0888a03121561146e5761146d6113d1565b5b5f61147b8a828b016113eb565b975050602061148c8a828b016113eb565b965050604061149d8a828b01611415565b95505060606114ae8a828b01611415565b94505060806114bf8a828b01611415565b93505060a06114d08a828b0161143f565b92505060c06114e18a828b016113eb565b91505092959891949750929550565b5f8060408385031215611506576115056113d1565b5b5f611513858286016113eb565b925050602061152485828601611415565b9150509250929050565b5f610120820190506115425f83018c6113a9565b61154f602083018b6113a9565b61155c604083018a61131e565b611569606083018961131e565b611576608083018861131e565b61158360a083018761131e565b61159060c083018661131e565b61159d60e0830185611351565b6115ab610100830184611351565b9a9950505050505050505050565b5f60a0820190506115cc5f83018861131e565b6115d9602083018761131e565b6115e6604083018661131e565b6115f3606083018561131e565b611600608083018461131e565b9695505050505050565b5f6020828403121561161f5761161e6113d1565b5b5f61162c848285016113eb565b91505092915050565b5f819050919050565b5f61165861165361164e84611379565b611635565b611379565b9050919050565b5f6116698261163e565b9050919050565b5f61167a8261165f565b9050919050565b61168a81611670565b82525050565b5f6020820190506116a35f830184611681565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6116e082611315565b91506116eb83611315565b9250828201905080821115611703576117026116a9565b5b92915050565b5f61171382611315565b915061171e83611315565b9250828203905081811115611736576117356116a9565b5b92915050565b5f61174682611315565b915061175183611315565b925082820261175f81611315565b91508282048414831517611776576117756116a9565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6117b482611315565b91506117bf83611315565b9250826117cf576117ce61177d565b5b828204905092915050565b5f82825260208201905092915050565b7f416c726561647920696e697469616c697a6564000000000000000000000000005f82015250565b5f61181e6013836117da565b9150611829826117ea565b602082019050919050565b5f6020820190508181035f83015261184b81611812565b9050919050565b7f496e76616c696420746f6b656e206164647265737300000000000000000000005f82015250565b5f6118866015836117da565b915061189182611852565b602082019050919050565b5f6020820190508181035f8301526118b38161187a565b9050919050565b7f496e76616c69642062656e6566696369617279206164647265737300000000005f82015250565b5f6118ee601b836117da565b91506118f9826118ba565b602082019050919050565b5f6020820190508181035f83015261191b816118e2565b9050919050565b7f546f74616c20616d6f756e74206d7573742062652067726561746572207468615f8201527f6e20300000000000000000000000000000000000000000000000000000000000602082015250565b5f61197c6023836117da565b915061198782611922565b604082019050919050565b5f6020820190508181035f8301526119a981611970565b9050919050565b7f4475726174696f6e206d7573742062652067726561746572207468616e2030005f82015250565b5f6119e4601f836117da565b91506119ef826119b0565b602082019050919050565b5f6020820190508181035f830152611a11816119d8565b9050919050565b7f436c6966662063616e6e6f7420657863656564206475726174696f6e000000005f82015250565b5f611a4c601c836117da565b9150611a5782611a18565b602082019050919050565b5f6020820190508181035f830152611a7981611a40565b9050919050565b7f496e76616c6964206f776e6572206164647265737300000000000000000000005f82015250565b5f611ab46015836117da565b9150611abf82611a80565b602082019050919050565b5f6020820190508181035f830152611ae181611aa8565b9050919050565b5f608082019050611afb5f83018761131e565b611b08602083018661131e565b611b15604083018561131e565b611b226060830184611351565b95945050505050565b7f56657374696e6720686173206265656e207265766f6b656400000000000000005f82015250565b5f611b5f6018836117da565b9150611b6a82611b2b565b602082019050919050565b5f6020820190508181035f830152611b8c81611b53565b9050919050565b7f556e617574686f72697a656400000000000000000000000000000000000000005f82015250565b5f611bc7600c836117da565b9150611bd282611b93565b602082019050919050565b5f6020820190508181035f830152611bf481611bbb565b9050919050565b7f4e6f20746f6b656e7320746f2072656c656173650000000000000000000000005f82015250565b5f611c2f6014836117da565b9150611c3a82611bfb565b602082019050919050565b5f6020820190508181035f830152611c5c81611c23565b9050919050565b7f43616e6e6f74207265636f7665722076657374696e6720746f6b656e000000005f82015250565b5f611c97601c836117da565b9150611ca282611c63565b602082019050919050565b5f6020820190508181035f830152611cc481611c8b565b9050919050565b7f56657374696e67206973206e6f74207265766f6361626c6500000000000000005f82015250565b5f611cff6018836117da565b9150611d0a82611ccb565b602082019050919050565b5f6020820190508181035f830152611d2c81611cf3565b9050919050565b7f56657374696e6720616c7265616479207265766f6b65640000000000000000005f82015250565b5f611d676017836117da565b9150611d7282611d33565b602082019050919050565b5f6020820190508181035f830152611d9481611d5b565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f611dcf601f836117da565b9150611dda82611d9b565b602082019050919050565b5f6020820190508181035f830152611dfc81611dc3565b9050919050565b5f604082019050611e165f8301856113a9565b611e23602083018461131e565b939250505056fea264697066735822122075971fd7ee9b9806324433c07a30ee4206da5b72375a9b871e370b47faf588e864736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x85 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x7C SWAP2 SWAP1 PUSH3 0x1A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x96 DUP2 PUSH3 0xA4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH3 0x1C3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x190 DUP3 PUSH3 0x165 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1A2 DUP2 PUSH3 0x184 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1BD PUSH0 DUP4 ADD DUP5 PUSH3 0x197 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E60 DUP1 PUSH3 0x1D1 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x156 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x86D1A69F GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xBE9A6555 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0xDC25A300 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0xECB70FB7 EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0xEE4A745C EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x3D6 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x872A7810 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x96132521 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x9639011E EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0xB6549F75 EQ PUSH2 0x32C JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x44691F7E GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x44691F7E EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x44B1231F EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x5B940081 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x63D256CE EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x841BEE0D EQ PUSH2 0x290 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x13D033C0 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x1A39D8EF EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x253254D6 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x38AF3EED EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x392E53CD EQ PUSH2 0x1F0 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x162 PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x400 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BC PUSH2 0x406 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1360 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DA PUSH2 0x41F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F8 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x205 SWAP2 SWAP1 PUSH2 0x1360 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x216 PUSH2 0x45A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x1360 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x234 PUSH2 0x466 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x252 PUSH2 0x521 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x270 PUSH2 0x53C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x1360 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH2 0x54F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x1453 JUMP JUMPDEST PUSH2 0x562 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B4 PUSH2 0x931 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BE PUSH2 0xBA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x1360 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DC PUSH2 0xBB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FA PUSH2 0xBDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x14F0 JUMP JUMPDEST PUSH2 0xBE0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x334 PUSH2 0xCAD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33E PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35C PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x371 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x152E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x382 PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38F SWAP2 SWAP1 PUSH2 0x1360 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A0 PUSH2 0xF10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B1 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x160A JUMP JUMPDEST PUSH2 0xFAB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3DE PUSH2 0x102F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EB SWAP2 SWAP1 PUSH2 0x1690 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST TIMESTAMP LT ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD TIMESTAMP LT ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x484 JUMPI PUSH0 SWAP1 POP PUSH2 0x51E JUMP JUMPDEST PUSH0 TIMESTAMP SWAP1 POP PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH2 0x498 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x4A8 JUMPI PUSH0 SWAP2 POP POP PUSH2 0x51E JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST DUP2 LT PUSH2 0x4C9 JUMPI PUSH1 0x7 SLOAD SWAP2 POP POP PUSH2 0x51E JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD DUP4 PUSH2 0x4DB SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST PUSH2 0x4E5 SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x4 SLOAD PUSH1 0x6 SLOAD PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH1 0x7 SLOAD PUSH2 0x50A SWAP2 SWAP1 PUSH2 0x173C JUMP JUMPDEST PUSH2 0x514 SWAP2 SWAP1 PUSH2 0x17AA JUMP JUMPDEST SWAP1 POP DUP1 SWAP5 POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD PUSH2 0x52D PUSH2 0x466 JUMP JUMPDEST PUSH2 0x537 SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x557 PUSH2 0x1054 JUMP JUMPDEST PUSH2 0x560 PUSH0 PUSH2 0x10DB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x9 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x5B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A9 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x620 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x617 SWAP1 PUSH2 0x189C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x68E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x685 SWAP1 PUSH2 0x1904 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP6 GT PUSH2 0x6D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C7 SWAP1 PUSH2 0x1992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT PUSH2 0x712 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x709 SWAP1 PUSH2 0x19FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP5 GT ISZERO PUSH2 0x755 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74C SWAP1 PUSH2 0x1A62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BA SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x9 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x9 PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x8BD DUP2 PUSH2 0x10DB JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x14FC8AD8C19C2F708DDA1E872C93F682D7A3CAE234BDC2712270269F8E1D00C2 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x920 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x939 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x9 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x989 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x980 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xA16 JUMPI POP PUSH2 0x9E7 PUSH2 0xBB3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xA55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4C SWAP1 PUSH2 0x1BDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xA5E PUSH2 0x521 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0xAA2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA99 SWAP1 PUSH2 0x1C45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAB3 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xB27 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11EB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC7798891864187665AC6DD119286E44EC13F014527AEEB2B8EB3FD413DF93179 DUP3 PUSH1 0x40 MLOAD PUSH2 0xB8E SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xB9F PUSH2 0x126A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xBE8 PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC77 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6E SWAP1 PUSH2 0x1CAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCA9 PUSH2 0xC82 PUSH2 0xBB3 JUMP JUMPDEST DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11EB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xCB5 PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xD03 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCFA SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD53 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4A SWAP1 PUSH2 0x1D7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH2 0xD77 PUSH2 0x466 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x7 SLOAD PUSH2 0xD88 SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0xDE6 JUMPI PUSH2 0xDE5 PUSH2 0xD9D PUSH2 0xBB3 JUMP JUMPDEST DUP3 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11EB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x57C76F5E278BFBD4EEB5207D287AA5A1A9E1113C65F7EEFA540E379A2774D13B DUP3 PUSH1 0x40 MLOAD PUSH2 0xE4D SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x9 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 JUMP JUMPDEST PUSH0 PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0xF08 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST TIMESTAMP LT ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 TIMESTAMP SWAP1 POP PUSH0 PUSH1 0x5 SLOAD DUP3 GT PUSH2 0xF29 JUMPI PUSH0 PUSH2 0xF38 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP3 PUSH2 0xF37 SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH0 PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0xF4B SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST DUP4 LT PUSH2 0xF57 JUMPI PUSH0 PUSH2 0xF73 JUMP JUMPDEST DUP3 PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0xF68 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST PUSH2 0xF72 SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH2 0xF7D PUSH2 0x466 JUMP JUMPDEST PUSH2 0xF85 PUSH2 0x521 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH2 0xF95 SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST DUP5 DUP5 SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 JUMP JUMPDEST PUSH2 0xFB3 PUSH2 0x1054 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1023 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101A SWAP2 SWAP1 PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x102C DUP2 PUSH2 0x10DB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x105C PUSH2 0x1273 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x107A PUSH2 0xBB3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10D9 JUMPI PUSH2 0x109D PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D0 SWAP2 SWAP1 PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x11E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D8 SWAP1 PUSH2 0x1DE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1265 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x121E SWAP3 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x127A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1299 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x12B2 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x12CD JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x130F JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1306 SWAP2 SWAP1 PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1327 DUP2 PUSH2 0x1315 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1340 PUSH0 DUP4 ADD DUP5 PUSH2 0x131E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x135A DUP2 PUSH2 0x1346 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1373 PUSH0 DUP4 ADD DUP5 PUSH2 0x1351 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13A2 DUP3 PUSH2 0x1379 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13B2 DUP2 PUSH2 0x1398 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13CB PUSH0 DUP4 ADD DUP5 PUSH2 0x13A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13DE DUP2 PUSH2 0x1398 JUMP JUMPDEST DUP2 EQ PUSH2 0x13E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13F9 DUP2 PUSH2 0x13D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1408 DUP2 PUSH2 0x1315 JUMP JUMPDEST DUP2 EQ PUSH2 0x1412 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1423 DUP2 PUSH2 0x13FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1432 DUP2 PUSH2 0x1346 JUMP JUMPDEST DUP2 EQ PUSH2 0x143C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x144D DUP2 PUSH2 0x1429 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x146E JUMPI PUSH2 0x146D PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x147B DUP11 DUP3 DUP12 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x148C DUP11 DUP3 DUP12 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x149D DUP11 DUP3 DUP12 ADD PUSH2 0x1415 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x14AE DUP11 DUP3 DUP12 ADD PUSH2 0x1415 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x14BF DUP11 DUP3 DUP12 ADD PUSH2 0x1415 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x14D0 DUP11 DUP3 DUP12 ADD PUSH2 0x143F JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x14E1 DUP11 DUP3 DUP12 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1506 JUMPI PUSH2 0x1505 PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1513 DUP6 DUP3 DUP7 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1524 DUP6 DUP3 DUP7 ADD PUSH2 0x1415 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x1542 PUSH0 DUP4 ADD DUP13 PUSH2 0x13A9 JUMP JUMPDEST PUSH2 0x154F PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x13A9 JUMP JUMPDEST PUSH2 0x155C PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x1569 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x1576 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x1583 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x1590 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x159D PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x1351 JUMP JUMPDEST PUSH2 0x15AB PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x1351 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x15CC PUSH0 DUP4 ADD DUP9 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x15D9 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x15E6 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x15F3 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x1600 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x131E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x161F JUMPI PUSH2 0x161E PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x162C DUP5 DUP3 DUP6 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1658 PUSH2 0x1653 PUSH2 0x164E DUP5 PUSH2 0x1379 JUMP JUMPDEST PUSH2 0x1635 JUMP JUMPDEST PUSH2 0x1379 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1669 DUP3 PUSH2 0x163E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x167A DUP3 PUSH2 0x165F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x168A DUP2 PUSH2 0x1670 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16A3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1681 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x16E0 DUP3 PUSH2 0x1315 JUMP JUMPDEST SWAP2 POP PUSH2 0x16EB DUP4 PUSH2 0x1315 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1703 JUMPI PUSH2 0x1702 PUSH2 0x16A9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1713 DUP3 PUSH2 0x1315 JUMP JUMPDEST SWAP2 POP PUSH2 0x171E DUP4 PUSH2 0x1315 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1736 JUMPI PUSH2 0x1735 PUSH2 0x16A9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1746 DUP3 PUSH2 0x1315 JUMP JUMPDEST SWAP2 POP PUSH2 0x1751 DUP4 PUSH2 0x1315 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x175F DUP2 PUSH2 0x1315 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1776 JUMPI PUSH2 0x1775 PUSH2 0x16A9 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x17B4 DUP3 PUSH2 0x1315 JUMP JUMPDEST SWAP2 POP PUSH2 0x17BF DUP4 PUSH2 0x1315 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x17CF JUMPI PUSH2 0x17CE PUSH2 0x177D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C726561647920696E697469616C697A656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x181E PUSH1 0x13 DUP4 PUSH2 0x17DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1829 DUP3 PUSH2 0x17EA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x184B DUP2 PUSH2 0x1812 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1886 PUSH1 0x15 DUP4 PUSH2 0x17DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1891 DUP3 PUSH2 0x1852 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18B3 DUP2 PUSH2 0x187A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642062656E656669636961727920616464726573730000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18EE PUSH1 0x1B DUP4 PUSH2 0x17DA JUMP JUMPDEST SWAP2 POP PUSH2 0x18F9 DUP3 PUSH2 0x18BA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x191B DUP2 PUSH2 0x18E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F74616C20616D6F756E74206D757374206265206772656174657220746861 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E20300000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x197C PUSH1 0x23 DUP4 PUSH2 0x17DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1987 DUP3 PUSH2 0x1922 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19A9 DUP2 PUSH2 0x1970 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4475726174696F6E206D7573742062652067726561746572207468616E203000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19E4 PUSH1 0x1F DUP4 PUSH2 0x17DA JUMP JUMPDEST SWAP2 POP PUSH2 0x19EF DUP3 PUSH2 0x19B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A11 DUP2 PUSH2 0x19D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436C6966662063616E6E6F7420657863656564206475726174696F6E00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A4C PUSH1 0x1C DUP4 PUSH2 0x17DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1A57 DUP3 PUSH2 0x1A18 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A79 DUP2 PUSH2 0x1A40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206F776E657220616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AB4 PUSH1 0x15 DUP4 PUSH2 0x17DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1ABF DUP3 PUSH2 0x1A80 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AE1 DUP2 PUSH2 0x1AA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1AFB PUSH0 DUP4 ADD DUP8 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x1B08 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x1B15 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x1B22 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1351 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x56657374696E6720686173206265656E207265766F6B65640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B5F PUSH1 0x18 DUP4 PUSH2 0x17DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1B6A DUP3 PUSH2 0x1B2B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B8C DUP2 PUSH2 0x1B53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x556E617574686F72697A65640000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BC7 PUSH1 0xC DUP4 PUSH2 0x17DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD2 DUP3 PUSH2 0x1B93 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BF4 DUP2 PUSH2 0x1BBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F2072656C65617365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C2F PUSH1 0x14 DUP4 PUSH2 0x17DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1C3A DUP3 PUSH2 0x1BFB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C5C DUP2 PUSH2 0x1C23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207265636F7665722076657374696E6720746F6B656E00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C97 PUSH1 0x1C DUP4 PUSH2 0x17DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1CA2 DUP3 PUSH2 0x1C63 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CC4 DUP2 PUSH2 0x1C8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56657374696E67206973206E6F74207265766F6361626C650000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CFF PUSH1 0x18 DUP4 PUSH2 0x17DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1D0A DUP3 PUSH2 0x1CCB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D2C DUP2 PUSH2 0x1CF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56657374696E6720616C7265616479207265766F6B6564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D67 PUSH1 0x17 DUP4 PUSH2 0x17DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1D72 DUP3 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D94 DUP2 PUSH2 0x1D5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DCF PUSH1 0x1F DUP4 PUSH2 0x17DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1DDA DUP3 PUSH2 0x1D9B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DFC DUP2 PUSH2 0x1DC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E16 PUSH0 DUP4 ADD DUP6 PUSH2 0x13A9 JUMP JUMPDEST PUSH2 0x1E23 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x131E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0x971FD7EE9B9806324433C07A30EE4206DA5B72375A9B DUP8 0x1E CALLDATACOPY SIGNEXTEND SELFBALANCE STATICCALL CREATE2 DUP9 0xE8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "298:8130:9:-:0;;;1207:175;;;;;;;;;;1229:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:4;1821:7;:22;;;;298:8130:9;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:10:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;298:8130:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_802": {
									"entryPoint": 4730,
									"id": 802,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4180,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_856": {
									"entryPoint": 4723,
									"id": 856,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_290": {
									"entryPoint": 4714,
									"id": 290,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_282": {
									"entryPoint": 4508,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4315,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@beneficiary_905": {
									"entryPoint": 1055,
									"id": 905,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@cliffEnded_1395": {
									"entryPoint": 1030,
									"id": 1395,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@cliff_907": {
									"entryPoint": 1018,
									"id": 907,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@duration_911": {
									"entryPoint": 1012,
									"id": 911,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@emergencyRecover_1439": {
									"entryPoint": 3040,
									"id": 1439,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getVestingInfo_1312": {
									"entryPoint": 3679,
									"id": 1312,
									"parameterSlots": 0,
									"returnSlots": 9
								},
								"@getVestingStatus_1369": {
									"entryPoint": 3856,
									"id": 1369,
									"parameterSlots": 0,
									"returnSlots": 5
								},
								"@hasEnded_1409": {
									"entryPoint": 3831,
									"id": 1409,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasStarted_1381": {
									"entryPoint": 1114,
									"id": 1381,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialize_1088": {
									"entryPoint": 1378,
									"id": 1088,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@isInitialized_1097": {
									"entryPoint": 1092,
									"id": 1097,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2995,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@releasableAmount_1215": {
									"entryPoint": 1313,
									"id": 1215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@release_1152": {
									"entryPoint": 2353,
									"id": 1152,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@released_915": {
									"entryPoint": 3034,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1359,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@revocable_917": {
									"entryPoint": 2977,
									"id": 917,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@revoke_1203": {
									"entryPoint": 3245,
									"id": 1203,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@revoked_919": {
									"entryPoint": 1340,
									"id": 919,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransfer_425": {
									"entryPoint": 4587,
									"id": 425,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@start_909": {
									"entryPoint": 3673,
									"id": 909,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_903": {
									"entryPoint": 4143,
									"id": 903,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalAmount_913": {
									"entryPoint": 1024,
									"id": 913,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 4011,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@vestedAmount_1275": {
									"entryPoint": 1126,
									"id": 1275,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_boolt_address": {
									"entryPoint": 5203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack": {
									"entryPoint": 5761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_01a7a611bc9062f34f75663bda41092866c264ca4d6493eae41caf32588ac159_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7203,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4221c9f1cf6016d1dc194caf7e44a3291af146cc6529a1440a478135cd625fb2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5950fe1df8a349aec718570d3ca1732b2af340c81930e187be30755660fa4ecb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6543fbb0dac0cbc68b2805e7af1fbb4a9b84ff4a026c815f0d89c077167d5ffc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9702fe77c8ad7920939f14d593a75d4b7597fd9ba27692e37b232b0efa62ae17_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_978309526168c60a0dd3a591311247928d7ff465a9ba0b899d45188a786a7316_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed": {
									"entryPoint": 5422,
									"id": null,
									"parameterSlots": 10,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7683,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed": {
									"entryPoint": 5776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_01a7a611bc9062f34f75663bda41092866c264ca4d6493eae41caf32588ac159__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7133,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4221c9f1cf6016d1dc194caf7e44a3291af146cc6529a1440a478135cd625fb2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6650,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5950fe1df8a349aec718570d3ca1732b2af340c81930e187be30755660fa4ecb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6543fbb0dac0cbc68b2805e7af1fbb4a9b84ff4a026c815f0d89c077167d5ffc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9702fe77c8ad7920939f14d593a75d4b7597fd9ba27692e37b232b0efa62ae17__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_978309526168c60a0dd3a591311247928d7ff465a9ba0b899d45188a786a7316__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 6888,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5561,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$380_to_t_address": {
									"entryPoint": 5744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 5685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5801,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6013,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5073,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_01a7a611bc9062f34f75663bda41092866c264ca4d6493eae41caf32588ac159": {
									"entryPoint": 6955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89": {
									"entryPoint": 6330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5": {
									"entryPoint": 7059,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914": {
									"entryPoint": 7163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4221c9f1cf6016d1dc194caf7e44a3291af146cc6529a1440a478135cd625fb2": {
									"entryPoint": 7267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0": {
									"entryPoint": 6576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5950fe1df8a349aec718570d3ca1732b2af340c81930e187be30755660fa4ecb": {
									"entryPoint": 7371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6543fbb0dac0cbc68b2805e7af1fbb4a9b84ff4a026c815f0d89c077167d5ffc": {
									"entryPoint": 6434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3": {
									"entryPoint": 6784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9702fe77c8ad7920939f14d593a75d4b7597fd9ba27692e37b232b0efa62ae17": {
									"entryPoint": 7475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_978309526168c60a0dd3a591311247928d7ff465a9ba0b899d45188a786a7316": {
									"entryPoint": 6680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743": {
									"entryPoint": 6226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0": {
									"entryPoint": 6122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 7579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:23436:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:10",
														"type": ""
													}
												],
												"src": "7:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:10",
														"type": ""
													}
												],
												"src": "90:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:10",
														"type": ""
													}
												],
												"src": "214:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "484:48:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "494:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "519:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "512:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "512:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "505:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "505:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "494:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "466:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "476:7:10",
														"type": ""
													}
												],
												"src": "442:90:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "614:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "619:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "619:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "607:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "607:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "585:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "592:3:10",
														"type": ""
													}
												],
												"src": "538:109:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "745:118:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "755:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "767:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "778:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "763:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "755:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "829:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "842:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "853:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "838:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "838:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "791:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "791:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "791:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "717:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "729:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "740:4:10",
														"type": ""
													}
												],
												"src": "653:210:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "914:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "924:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "939:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "946:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "924:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "896:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "906:7:10",
														"type": ""
													}
												],
												"src": "869:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1046:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1056:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1085:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1067:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1067:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1056:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1028:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1038:7:10",
														"type": ""
													}
												],
												"src": "1001:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1168:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1185:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1208:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1190:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1190:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1178:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1178:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1178:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1156:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1163:3:10",
														"type": ""
													}
												],
												"src": "1103:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1325:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1335:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1347:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1358:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1343:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1343:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1335:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1415:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1428:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1439:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1424:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1424:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1371:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1371:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1371:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1297:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1309:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1320:4:10",
														"type": ""
													}
												],
												"src": "1227:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1495:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1505:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1521:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1515:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1515:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1505:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1488:6:10",
														"type": ""
													}
												],
												"src": "1455:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1625:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1642:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1645:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1635:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1635:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1635:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1536:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1748:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1765:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1768:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1758:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1758:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1758:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1659:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1825:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1882:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1891:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1894:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1884:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1884:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1884:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1848:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1873:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1855:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1855:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1845:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1845:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1838:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1838:43:10"
															},
															"nodeType": "YulIf",
															"src": "1835:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1818:5:10",
														"type": ""
													}
												],
												"src": "1782:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1962:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1972:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1994:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1981:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1981:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1972:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2037:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2010:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2010:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2010:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1940:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1948:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1956:5:10",
														"type": ""
													}
												],
												"src": "1910:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2098:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2155:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2164:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2167:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2157:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2157:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2157:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2121:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2146:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2128:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2128:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2118:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2118:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2111:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2111:43:10"
															},
															"nodeType": "YulIf",
															"src": "2108:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2091:5:10",
														"type": ""
													}
												],
												"src": "2055:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2235:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2245:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2267:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2254:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2254:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2245:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2310:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2283:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2283:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2283:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2213:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2221:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2229:5:10",
														"type": ""
													}
												],
												"src": "2183:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2368:76:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2422:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2431:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2434:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2424:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2424:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2424:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2391:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2413:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2398:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2398:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2388:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2388:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2381:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2381:40:10"
															},
															"nodeType": "YulIf",
															"src": "2378:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2361:5:10",
														"type": ""
													}
												],
												"src": "2328:116:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2499:84:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2509:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2531:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2518:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2518:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2509:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2571:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2547:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2547:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2547:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2477:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2485:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2493:5:10",
														"type": ""
													}
												],
												"src": "2450:133:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2754:1032:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2801:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2803:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2803:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2803:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2775:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2784:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2771:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2771:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2796:3:10",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2767:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2767:33:10"
															},
															"nodeType": "YulIf",
															"src": "2764:120:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "2894:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2909:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2923:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2913:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2938:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2973:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2984:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2969:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2969:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2993:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2948:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2948:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2938:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3021:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3036:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3050:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3040:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3066:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3101:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3112:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3097:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3097:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3121:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3076:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3076:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3066:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3149:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3164:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3178:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3168:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3194:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3229:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3240:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3225:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3225:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3249:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3204:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3204:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3194:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3277:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3292:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3306:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3296:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3322:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3357:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3368:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3353:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3353:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3377:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3332:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3332:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "3322:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3405:119:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3420:17:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3434:3:10",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3424:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3451:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3486:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3497:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3482:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3482:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3506:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3461:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3461:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "3451:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3534:116:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3549:17:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3563:3:10",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3553:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3580:60:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3612:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3623:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3608:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3608:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3632:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3590:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3590:50:10"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "3580:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3660:119:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3675:17:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3689:3:10",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3679:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3706:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3741:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3752:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3737:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3737:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3761:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3716:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3716:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nodeType": "YulIdentifier",
																			"src": "3706:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_boolt_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2676:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2687:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2699:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2707:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2715:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2723:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2731:6:10",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "2739:6:10",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "2747:6:10",
														"type": ""
													}
												],
												"src": "2589:1197:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3875:391:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3921:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3923:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3923:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3923:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3896:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3905:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3892:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3892:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3917:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3888:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3888:32:10"
															},
															"nodeType": "YulIf",
															"src": "3885:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "4014:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4029:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4043:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4033:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4058:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4093:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4104:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4089:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4089:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4113:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4068:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4068:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4058:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4141:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4156:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4170:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4160:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4186:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4221:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4232:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4217:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4217:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4241:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4196:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4196:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4186:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3837:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3848:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3860:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3868:6:10",
														"type": ""
													}
												],
												"src": "3792:474:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4582:774:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4592:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4604:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4615:3:10",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4600:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4600:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4592:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4673:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4686:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4697:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4682:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4682:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4629:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4629:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4629:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4754:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4767:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4778:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4763:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4763:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4710:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4710:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4710:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4836:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4849:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4860:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4845:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4845:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4792:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4792:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4792:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4918:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4931:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4942:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4927:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4927:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4874:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4874:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4874:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "5000:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5013:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5024:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5009:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5009:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4956:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4956:73:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4956:73:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "5083:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5096:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5107:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5092:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5092:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5039:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5039:73:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5039:73:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "5166:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5179:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5190:3:10",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5175:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5175:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5122:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5122:73:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5122:73:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value7",
																		"nodeType": "YulIdentifier",
																		"src": "5243:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5256:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5267:3:10",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5252:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5252:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5205:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5205:67:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5205:67:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value8",
																		"nodeType": "YulIdentifier",
																		"src": "5320:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5333:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5344:3:10",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5329:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5329:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5282:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5282:67:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5282:67:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4490:9:10",
														"type": ""
													},
													{
														"name": "value8",
														"nodeType": "YulTypedName",
														"src": "4502:6:10",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "4510:6:10",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "4518:6:10",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "4526:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4534:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4542:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4550:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4558:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4566:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4577:4:10",
														"type": ""
													}
												],
												"src": "4272:1084:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5572:454:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5582:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5594:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5605:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5590:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5590:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5582:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5663:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5676:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5687:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5672:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5672:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5619:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5619:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5619:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5744:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5757:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5768:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5753:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5753:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5700:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5700:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5700:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5826:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5839:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5850:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5835:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5835:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5782:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5782:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5782:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5908:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5921:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5932:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5917:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5917:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5864:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5864:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5864:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "5990:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6003:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6014:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5999:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5999:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5946:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5946:73:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5946:73:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5512:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5524:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5532:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5540:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5548:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5556:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5567:4:10",
														"type": ""
													}
												],
												"src": "5362:664:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6098:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6144:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6146:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6146:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6146:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6119:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6128:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6115:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6115:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6140:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6111:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6111:32:10"
															},
															"nodeType": "YulIf",
															"src": "6108:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "6237:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6252:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6266:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6256:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6281:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6316:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6327:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6312:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6312:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6336:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6291:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6291:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6281:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6068:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6079:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6091:6:10",
														"type": ""
													}
												],
												"src": "6032:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6399:28:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6409:12:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6416:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6409:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6385:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6395:3:10",
														"type": ""
													}
												],
												"src": "6367:60:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6493:82:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6503:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6561:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "6543:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6543:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "6534:8:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6534:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6516:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6516:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6503:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6473:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6483:9:10",
														"type": ""
													}
												],
												"src": "6433:142:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6641:66:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6651:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6695:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6664:30:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6664:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6651:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6621:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6631:9:10",
														"type": ""
													}
												],
												"src": "6581:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6787:66:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6797:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6841:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6810:30:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6810:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6797:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$380_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6767:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6777:9:10",
														"type": ""
													}
												],
												"src": "6713:140:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6938:80:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6955:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7005:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$380_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6960:44:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6960:51:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6948:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6948:64:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6948:64:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6926:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6933:3:10",
														"type": ""
													}
												],
												"src": "6859:159:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7136:138:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7146:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7158:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7169:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7154:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7154:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7146:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7240:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7253:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7264:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7249:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7249:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7182:57:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7182:85:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7182:85:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7108:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7120:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7131:4:10",
														"type": ""
													}
												],
												"src": "7024:250:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7308:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7325:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7328:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7318:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7318:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7422:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7425:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7415:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7415:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7415:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7446:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7449:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7439:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7439:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7439:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7280:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7510:147:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7520:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7543:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7525:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7525:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7520:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7554:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7577:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7559:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7559:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7554:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7588:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7599:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7602:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7595:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7595:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7588:3:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7628:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7630:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7630:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7630:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7620:1:10"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "7623:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7617:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7617:10:10"
															},
															"nodeType": "YulIf",
															"src": "7614:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7497:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7500:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7506:3:10",
														"type": ""
													}
												],
												"src": "7466:191:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7708:149:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7718:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7741:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7723:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7723:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7718:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7752:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7775:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7757:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7757:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7752:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7786:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7798:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7801:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7794:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7794:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "7786:4:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7828:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7830:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7830:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7830:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "7819:4:10"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7825:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7816:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7816:11:10"
															},
															"nodeType": "YulIf",
															"src": "7813:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7694:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7697:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "7703:4:10",
														"type": ""
													}
												],
												"src": "7663:194:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7911:362:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7921:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7944:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7926:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7926:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7921:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7955:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7978:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7960:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7960:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7955:1:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7989:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8012:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8015:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8008:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8008:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "7993:11:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8026:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "8055:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8037:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8037:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "8026:7:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8244:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8246:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8246:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8246:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8177:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8170:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8170:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "8200:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "8207:7:10"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "8216:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "8203:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8203:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "8197:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8197:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "8150:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8150:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8130:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8130:113:10"
															},
															"nodeType": "YulIf",
															"src": "8127:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7894:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7897:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "7903:7:10",
														"type": ""
													}
												],
												"src": "7863:410:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8307:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8324:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8327:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8317:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8317:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8317:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8421:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8424:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8414:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8414:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8414:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8445:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8448:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8438:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8438:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8438:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "8279:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8507:143:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8517:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8540:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8522:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8522:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8517:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8551:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8574:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8556:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8556:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8551:1:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8598:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "8600:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8600:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8600:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8595:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8588:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8588:9:10"
															},
															"nodeType": "YulIf",
															"src": "8585:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8630:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8639:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8642:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8635:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8635:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8630:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8496:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8499:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "8505:1:10",
														"type": ""
													}
												],
												"src": "8465:185:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8752:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8769:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8774:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8762:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8762:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8762:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8790:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8809:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8814:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8805:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8805:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "8790:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8724:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8729:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "8740:11:10",
														"type": ""
													}
												],
												"src": "8656:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8937:63:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8959:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8967:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8955:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8955:14:10"
																	},
																	{
																		"hexValue": "416c726561647920696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8971:21:10",
																		"type": "",
																		"value": "Already initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8948:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8948:45:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8948:45:10"
														}
													]
												},
												"name": "store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8929:6:10",
														"type": ""
													}
												],
												"src": "8831:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9152:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9162:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9228:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9233:2:10",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9169:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9169:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9162:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9334:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
																	"nodeType": "YulIdentifier",
																	"src": "9245:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9245:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9245:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9347:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9358:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9363:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9354:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9354:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9347:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9140:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9148:3:10",
														"type": ""
													}
												],
												"src": "9006:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9549:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9559:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9571:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9582:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9567:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9567:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9559:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9606:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9617:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9602:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9602:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9625:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9631:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9621:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9621:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9595:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9595:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9595:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9651:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9785:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9659:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9659:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9651:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9529:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9544:4:10",
														"type": ""
													}
												],
												"src": "9378:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9909:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9931:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9939:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9927:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9927:14:10"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9943:23:10",
																		"type": "",
																		"value": "Invalid token address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9920:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9920:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9920:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9901:6:10",
														"type": ""
													}
												],
												"src": "9803:171:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10126:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10136:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10202:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10207:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10143:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10143:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10136:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10308:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																	"nodeType": "YulIdentifier",
																	"src": "10219:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10219:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10219:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10321:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10332:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10337:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10328:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10328:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10321:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10114:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10122:3:10",
														"type": ""
													}
												],
												"src": "9980:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10523:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10533:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10545:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10556:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10541:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10541:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10533:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10580:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10591:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10576:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10576:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10599:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10605:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10595:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10595:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10569:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10569:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10569:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10625:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10759:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10633:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10633:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10625:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10503:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10518:4:10",
														"type": ""
													}
												],
												"src": "10352:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10883:71:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10905:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10913:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10901:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10901:14:10"
																	},
																	{
																		"hexValue": "496e76616c69642062656e65666963696172792061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10917:29:10",
																		"type": "",
																		"value": "Invalid beneficiary address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10894:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10894:53:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10894:53:10"
														}
													]
												},
												"name": "store_literal_in_memory_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10875:6:10",
														"type": ""
													}
												],
												"src": "10777:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11106:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11116:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11182:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11187:2:10",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11123:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11123:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11116:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11288:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89",
																	"nodeType": "YulIdentifier",
																	"src": "11199:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11199:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11199:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11301:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11312:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11317:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11308:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11308:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11301:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11094:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11102:3:10",
														"type": ""
													}
												],
												"src": "10960:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11503:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11513:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11525:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11536:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11521:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11521:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11513:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11560:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11571:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11556:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11556:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11579:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11585:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11575:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11575:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11549:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11549:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11549:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11605:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11739:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11613:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11613:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11605:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11483:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11498:4:10",
														"type": ""
													}
												],
												"src": "11332:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11863:116:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11885:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11893:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11881:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11881:14:10"
																	},
																	{
																		"hexValue": "546f74616c20616d6f756e74206d757374206265206772656174657220746861",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11897:34:10",
																		"type": "",
																		"value": "Total amount must be greater tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11874:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11874:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11874:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11953:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11961:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11949:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11949:15:10"
																	},
																	{
																		"hexValue": "6e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11966:5:10",
																		"type": "",
																		"value": "n 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11942:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11942:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11942:30:10"
														}
													]
												},
												"name": "store_literal_in_memory_6543fbb0dac0cbc68b2805e7af1fbb4a9b84ff4a026c815f0d89c077167d5ffc",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11855:6:10",
														"type": ""
													}
												],
												"src": "11757:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12131:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12141:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12207:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12212:2:10",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12148:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12148:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12141:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12313:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6543fbb0dac0cbc68b2805e7af1fbb4a9b84ff4a026c815f0d89c077167d5ffc",
																	"nodeType": "YulIdentifier",
																	"src": "12224:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12224:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12224:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12326:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12337:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12342:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12333:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12333:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12326:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6543fbb0dac0cbc68b2805e7af1fbb4a9b84ff4a026c815f0d89c077167d5ffc_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12119:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12127:3:10",
														"type": ""
													}
												],
												"src": "11985:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12528:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12538:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12550:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12561:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12546:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12546:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12538:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12585:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12596:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12581:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12581:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12604:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12610:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12600:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12600:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12574:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12574:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12574:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12630:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12764:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6543fbb0dac0cbc68b2805e7af1fbb4a9b84ff4a026c815f0d89c077167d5ffc_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12638:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12638:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12630:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6543fbb0dac0cbc68b2805e7af1fbb4a9b84ff4a026c815f0d89c077167d5ffc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12508:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12523:4:10",
														"type": ""
													}
												],
												"src": "12357:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12888:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12910:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12918:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12906:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12906:14:10"
																	},
																	{
																		"hexValue": "4475726174696f6e206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12922:33:10",
																		"type": "",
																		"value": "Duration must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12899:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12899:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12899:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12880:6:10",
														"type": ""
													}
												],
												"src": "12782:181:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13115:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13125:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13191:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13196:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13132:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13132:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13125:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13297:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0",
																	"nodeType": "YulIdentifier",
																	"src": "13208:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13208:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13208:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13310:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13321:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13326:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13317:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13317:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13310:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13103:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13111:3:10",
														"type": ""
													}
												],
												"src": "12969:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13512:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13522:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13534:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13545:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13530:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13530:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13522:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13569:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13580:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13565:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13565:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13588:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13594:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13584:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13584:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13558:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13558:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13558:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13614:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13748:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13622:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13622:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13614:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13492:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13507:4:10",
														"type": ""
													}
												],
												"src": "13341:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13872:72:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13894:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13902:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13890:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13890:14:10"
																	},
																	{
																		"hexValue": "436c6966662063616e6e6f7420657863656564206475726174696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13906:30:10",
																		"type": "",
																		"value": "Cliff cannot exceed duration"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13883:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13883:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13883:54:10"
														}
													]
												},
												"name": "store_literal_in_memory_978309526168c60a0dd3a591311247928d7ff465a9ba0b899d45188a786a7316",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13864:6:10",
														"type": ""
													}
												],
												"src": "13766:178:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14096:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14106:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14172:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14177:2:10",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14113:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14113:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14106:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14278:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_978309526168c60a0dd3a591311247928d7ff465a9ba0b899d45188a786a7316",
																	"nodeType": "YulIdentifier",
																	"src": "14189:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14189:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14189:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14291:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14302:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14307:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14298:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14298:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14291:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_978309526168c60a0dd3a591311247928d7ff465a9ba0b899d45188a786a7316_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14084:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14092:3:10",
														"type": ""
													}
												],
												"src": "13950:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14493:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14503:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14515:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14526:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14511:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14511:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14503:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14550:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14561:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14546:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14546:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14569:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14575:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14565:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14565:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14539:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14539:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14539:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14595:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14729:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_978309526168c60a0dd3a591311247928d7ff465a9ba0b899d45188a786a7316_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14603:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14603:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14595:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_978309526168c60a0dd3a591311247928d7ff465a9ba0b899d45188a786a7316__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14473:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14488:4:10",
														"type": ""
													}
												],
												"src": "14322:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14853:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14875:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14883:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14871:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14871:14:10"
																	},
																	{
																		"hexValue": "496e76616c6964206f776e65722061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14887:23:10",
																		"type": "",
																		"value": "Invalid owner address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14864:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14864:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14864:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14845:6:10",
														"type": ""
													}
												],
												"src": "14747:171:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15070:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15080:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15146:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15151:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15087:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15087:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15080:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15252:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3",
																	"nodeType": "YulIdentifier",
																	"src": "15163:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15163:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15163:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15265:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15276:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15281:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15272:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15272:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15265:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15058:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15066:3:10",
														"type": ""
													}
												],
												"src": "14924:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15467:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15477:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15489:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15500:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15485:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15485:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15477:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15524:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15535:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15520:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15520:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15543:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15549:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15539:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15539:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15513:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15513:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15513:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15569:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15703:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15577:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15577:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15569:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15447:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15462:4:10",
														"type": ""
													}
												],
												"src": "15296:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15897:365:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15907:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15919:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15930:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15915:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15915:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15907:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15988:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16001:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16012:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15997:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15997:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15944:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15944:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15944:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16069:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16082:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16093:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16078:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16078:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16025:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16025:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16025:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16151:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16164:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16175:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16160:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16160:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16107:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16107:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16107:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16227:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16240:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16251:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16236:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16236:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16189:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16189:66:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16189:66:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15845:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15857:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15865:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15873:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15881:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15892:4:10",
														"type": ""
													}
												],
												"src": "15721:541:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16374:68:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16396:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16404:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16392:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16392:14:10"
																	},
																	{
																		"hexValue": "56657374696e6720686173206265656e207265766f6b6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16408:26:10",
																		"type": "",
																		"value": "Vesting has been revoked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16385:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16385:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16385:50:10"
														}
													]
												},
												"name": "store_literal_in_memory_01a7a611bc9062f34f75663bda41092866c264ca4d6493eae41caf32588ac159",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16366:6:10",
														"type": ""
													}
												],
												"src": "16268:174:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16594:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16604:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16670:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16675:2:10",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16611:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16611:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16604:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16776:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_01a7a611bc9062f34f75663bda41092866c264ca4d6493eae41caf32588ac159",
																	"nodeType": "YulIdentifier",
																	"src": "16687:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16687:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16687:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16789:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16800:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16805:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16796:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16796:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16789:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_01a7a611bc9062f34f75663bda41092866c264ca4d6493eae41caf32588ac159_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16582:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16590:3:10",
														"type": ""
													}
												],
												"src": "16448:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16991:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17001:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17013:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17024:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17009:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17009:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17001:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17048:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17059:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17044:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17044:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17067:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17073:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17063:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17063:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17037:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17037:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17037:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17093:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17227:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_01a7a611bc9062f34f75663bda41092866c264ca4d6493eae41caf32588ac159_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17101:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17101:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17093:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_01a7a611bc9062f34f75663bda41092866c264ca4d6493eae41caf32588ac159__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16971:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16986:4:10",
														"type": ""
													}
												],
												"src": "16820:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17351:56:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17373:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17381:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17369:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17369:14:10"
																	},
																	{
																		"hexValue": "556e617574686f72697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17385:14:10",
																		"type": "",
																		"value": "Unauthorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17362:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17362:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17362:38:10"
														}
													]
												},
												"name": "store_literal_in_memory_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17343:6:10",
														"type": ""
													}
												],
												"src": "17245:162:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17559:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17569:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17635:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17640:2:10",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17576:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17576:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17569:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17741:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
																	"nodeType": "YulIdentifier",
																	"src": "17652:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17652:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17652:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17754:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17765:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17770:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17761:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17761:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17754:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17547:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17555:3:10",
														"type": ""
													}
												],
												"src": "17413:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17956:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17966:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17978:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17989:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17974:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17974:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17966:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18013:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18024:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18009:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18009:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18032:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18038:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18028:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18028:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18002:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18002:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18002:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18058:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18192:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18066:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18066:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18058:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17936:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17951:4:10",
														"type": ""
													}
												],
												"src": "17785:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18316:64:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18338:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18346:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18334:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18334:14:10"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e7320746f2072656c65617365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18350:22:10",
																		"type": "",
																		"value": "No tokens to release"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18327:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18327:46:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18327:46:10"
														}
													]
												},
												"name": "store_literal_in_memory_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18308:6:10",
														"type": ""
													}
												],
												"src": "18210:170:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18532:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18542:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18608:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18613:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18549:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18549:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18542:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18714:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914",
																	"nodeType": "YulIdentifier",
																	"src": "18625:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18625:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18625:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18727:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18738:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18743:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18734:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18734:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18727:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18520:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18528:3:10",
														"type": ""
													}
												],
												"src": "18386:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18929:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18939:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18951:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18962:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18947:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18947:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18939:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18986:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18997:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18982:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18982:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19005:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19011:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19001:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19001:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18975:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18975:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18975:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19031:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19165:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19039:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19039:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19031:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18909:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18924:4:10",
														"type": ""
													}
												],
												"src": "18758:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19289:72:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19311:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19319:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19307:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19307:14:10"
																	},
																	{
																		"hexValue": "43616e6e6f74207265636f7665722076657374696e6720746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19323:30:10",
																		"type": "",
																		"value": "Cannot recover vesting token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19300:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19300:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19300:54:10"
														}
													]
												},
												"name": "store_literal_in_memory_4221c9f1cf6016d1dc194caf7e44a3291af146cc6529a1440a478135cd625fb2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19281:6:10",
														"type": ""
													}
												],
												"src": "19183:178:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19513:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19523:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19589:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19594:2:10",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19530:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19530:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19523:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19695:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4221c9f1cf6016d1dc194caf7e44a3291af146cc6529a1440a478135cd625fb2",
																	"nodeType": "YulIdentifier",
																	"src": "19606:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19606:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19606:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19708:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19719:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19724:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19715:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19715:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19708:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4221c9f1cf6016d1dc194caf7e44a3291af146cc6529a1440a478135cd625fb2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19501:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19509:3:10",
														"type": ""
													}
												],
												"src": "19367:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19910:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19920:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19932:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19943:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19928:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19928:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19920:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19967:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19978:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19963:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19963:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19986:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19992:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19982:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19982:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19956:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19956:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19956:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20012:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20146:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4221c9f1cf6016d1dc194caf7e44a3291af146cc6529a1440a478135cd625fb2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20020:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20020:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20012:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4221c9f1cf6016d1dc194caf7e44a3291af146cc6529a1440a478135cd625fb2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19890:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19905:4:10",
														"type": ""
													}
												],
												"src": "19739:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20270:68:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20292:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20300:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20288:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20288:14:10"
																	},
																	{
																		"hexValue": "56657374696e67206973206e6f74207265766f6361626c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20304:26:10",
																		"type": "",
																		"value": "Vesting is not revocable"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20281:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20281:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20281:50:10"
														}
													]
												},
												"name": "store_literal_in_memory_5950fe1df8a349aec718570d3ca1732b2af340c81930e187be30755660fa4ecb",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20262:6:10",
														"type": ""
													}
												],
												"src": "20164:174:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20490:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20500:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20566:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20571:2:10",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20507:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20507:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20500:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20672:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5950fe1df8a349aec718570d3ca1732b2af340c81930e187be30755660fa4ecb",
																	"nodeType": "YulIdentifier",
																	"src": "20583:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20583:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20583:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20685:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20696:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20701:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20692:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20692:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20685:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5950fe1df8a349aec718570d3ca1732b2af340c81930e187be30755660fa4ecb_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20478:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20486:3:10",
														"type": ""
													}
												],
												"src": "20344:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20887:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20897:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20909:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20920:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20905:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20905:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20897:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20944:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20955:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20940:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20940:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20963:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20969:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20959:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20959:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20933:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20933:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20933:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20989:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21123:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5950fe1df8a349aec718570d3ca1732b2af340c81930e187be30755660fa4ecb_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20997:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20997:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20989:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5950fe1df8a349aec718570d3ca1732b2af340c81930e187be30755660fa4ecb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20867:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20882:4:10",
														"type": ""
													}
												],
												"src": "20716:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21247:67:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21269:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21277:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21265:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21265:14:10"
																	},
																	{
																		"hexValue": "56657374696e6720616c7265616479207265766f6b6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21281:25:10",
																		"type": "",
																		"value": "Vesting already revoked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21258:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21258:49:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21258:49:10"
														}
													]
												},
												"name": "store_literal_in_memory_9702fe77c8ad7920939f14d593a75d4b7597fd9ba27692e37b232b0efa62ae17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21239:6:10",
														"type": ""
													}
												],
												"src": "21141:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21466:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21476:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21542:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21547:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21483:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21483:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21476:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21648:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9702fe77c8ad7920939f14d593a75d4b7597fd9ba27692e37b232b0efa62ae17",
																	"nodeType": "YulIdentifier",
																	"src": "21559:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21559:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21559:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21661:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21672:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21677:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21668:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21668:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21661:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9702fe77c8ad7920939f14d593a75d4b7597fd9ba27692e37b232b0efa62ae17_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21454:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21462:3:10",
														"type": ""
													}
												],
												"src": "21320:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21863:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21873:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21885:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21896:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21881:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21881:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21873:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21920:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21931:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21916:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21916:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21939:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21945:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21935:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21935:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21909:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21909:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21909:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21965:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22099:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9702fe77c8ad7920939f14d593a75d4b7597fd9ba27692e37b232b0efa62ae17_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21973:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21973:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21965:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9702fe77c8ad7920939f14d593a75d4b7597fd9ba27692e37b232b0efa62ae17__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21843:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21858:4:10",
														"type": ""
													}
												],
												"src": "21692:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22223:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22245:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22253:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22241:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22241:14:10"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22257:33:10",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22234:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22234:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22234:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22215:6:10",
														"type": ""
													}
												],
												"src": "22117:181:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22450:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22460:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22526:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22531:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22467:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22467:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22460:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22632:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "22543:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22543:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22543:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22645:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22656:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22661:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22652:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22652:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22645:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22438:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22446:3:10",
														"type": ""
													}
												],
												"src": "22304:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22847:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22857:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22869:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22880:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22865:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22865:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22857:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22904:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22915:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22900:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22900:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22923:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22929:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22919:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22919:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22893:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22893:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22893:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22949:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23083:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22957:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22957:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22949:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22827:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22842:4:10",
														"type": ""
													}
												],
												"src": "22676:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23227:206:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23237:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23249:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23260:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23245:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23245:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23237:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23317:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23330:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23341:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23326:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23326:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23273:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23273:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23273:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "23398:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23411:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23422:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23407:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23407:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23354:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23354:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23354:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23191:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "23203:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23211:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23222:4:10",
														"type": ""
													}
												],
												"src": "23101:332:10"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_boolt_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$380_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$380_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token address\")\n\n    }\n\n    function abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid beneficiary address\")\n\n    }\n\n    function abi_encode_t_stringliteral_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6543fbb0dac0cbc68b2805e7af1fbb4a9b84ff4a026c815f0d89c077167d5ffc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Total amount must be greater tha\")\n\n        mstore(add(memPtr, 32), \"n 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_6543fbb0dac0cbc68b2805e7af1fbb4a9b84ff4a026c815f0d89c077167d5ffc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_6543fbb0dac0cbc68b2805e7af1fbb4a9b84ff4a026c815f0d89c077167d5ffc(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6543fbb0dac0cbc68b2805e7af1fbb4a9b84ff4a026c815f0d89c077167d5ffc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6543fbb0dac0cbc68b2805e7af1fbb4a9b84ff4a026c815f0d89c077167d5ffc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Duration must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_978309526168c60a0dd3a591311247928d7ff465a9ba0b899d45188a786a7316(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cliff cannot exceed duration\")\n\n    }\n\n    function abi_encode_t_stringliteral_978309526168c60a0dd3a591311247928d7ff465a9ba0b899d45188a786a7316_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_978309526168c60a0dd3a591311247928d7ff465a9ba0b899d45188a786a7316(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_978309526168c60a0dd3a591311247928d7ff465a9ba0b899d45188a786a7316__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_978309526168c60a0dd3a591311247928d7ff465a9ba0b899d45188a786a7316_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid owner address\")\n\n    }\n\n    function abi_encode_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_01a7a611bc9062f34f75663bda41092866c264ca4d6493eae41caf32588ac159(memPtr) {\n\n        mstore(add(memPtr, 0), \"Vesting has been revoked\")\n\n    }\n\n    function abi_encode_t_stringliteral_01a7a611bc9062f34f75663bda41092866c264ca4d6493eae41caf32588ac159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_01a7a611bc9062f34f75663bda41092866c264ca4d6493eae41caf32588ac159(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_01a7a611bc9062f34f75663bda41092866c264ca4d6493eae41caf32588ac159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_01a7a611bc9062f34f75663bda41092866c264ca4d6493eae41caf32588ac159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Unauthorized\")\n\n    }\n\n    function abi_encode_t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tokens to release\")\n\n    }\n\n    function abi_encode_t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4221c9f1cf6016d1dc194caf7e44a3291af146cc6529a1440a478135cd625fb2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot recover vesting token\")\n\n    }\n\n    function abi_encode_t_stringliteral_4221c9f1cf6016d1dc194caf7e44a3291af146cc6529a1440a478135cd625fb2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_4221c9f1cf6016d1dc194caf7e44a3291af146cc6529a1440a478135cd625fb2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4221c9f1cf6016d1dc194caf7e44a3291af146cc6529a1440a478135cd625fb2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4221c9f1cf6016d1dc194caf7e44a3291af146cc6529a1440a478135cd625fb2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5950fe1df8a349aec718570d3ca1732b2af340c81930e187be30755660fa4ecb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Vesting is not revocable\")\n\n    }\n\n    function abi_encode_t_stringliteral_5950fe1df8a349aec718570d3ca1732b2af340c81930e187be30755660fa4ecb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_5950fe1df8a349aec718570d3ca1732b2af340c81930e187be30755660fa4ecb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5950fe1df8a349aec718570d3ca1732b2af340c81930e187be30755660fa4ecb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5950fe1df8a349aec718570d3ca1732b2af340c81930e187be30755660fa4ecb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9702fe77c8ad7920939f14d593a75d4b7597fd9ba27692e37b232b0efa62ae17(memPtr) {\n\n        mstore(add(memPtr, 0), \"Vesting already revoked\")\n\n    }\n\n    function abi_encode_t_stringliteral_9702fe77c8ad7920939f14d593a75d4b7597fd9ba27692e37b232b0efa62ae17_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_9702fe77c8ad7920939f14d593a75d4b7597fd9ba27692e37b232b0efa62ae17(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9702fe77c8ad7920939f14d593a75d4b7597fd9ba27692e37b232b0efa62ae17__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9702fe77c8ad7920939f14d593a75d4b7597fd9ba27692e37b232b0efa62ae17_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x156 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x86D1A69F GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xBE9A6555 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0xDC25A300 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0xECB70FB7 EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0xEE4A745C EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x3D6 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x872A7810 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x96132521 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x9639011E EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0xB6549F75 EQ PUSH2 0x32C JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x44691F7E GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x44691F7E EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x44B1231F EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x5B940081 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x63D256CE EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x841BEE0D EQ PUSH2 0x290 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x13D033C0 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x1A39D8EF EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x253254D6 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x38AF3EED EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x392E53CD EQ PUSH2 0x1F0 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x162 PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x400 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BC PUSH2 0x406 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1360 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DA PUSH2 0x41F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F8 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x205 SWAP2 SWAP1 PUSH2 0x1360 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x216 PUSH2 0x45A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x1360 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x234 PUSH2 0x466 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x252 PUSH2 0x521 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x270 PUSH2 0x53C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x1360 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH2 0x54F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x1453 JUMP JUMPDEST PUSH2 0x562 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B4 PUSH2 0x931 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BE PUSH2 0xBA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x1360 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DC PUSH2 0xBB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FA PUSH2 0xBDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x14F0 JUMP JUMPDEST PUSH2 0xBE0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x334 PUSH2 0xCAD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33E PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35C PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x371 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x152E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x382 PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38F SWAP2 SWAP1 PUSH2 0x1360 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A0 PUSH2 0xF10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B1 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x160A JUMP JUMPDEST PUSH2 0xFAB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3DE PUSH2 0x102F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EB SWAP2 SWAP1 PUSH2 0x1690 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST TIMESTAMP LT ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD TIMESTAMP LT ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x484 JUMPI PUSH0 SWAP1 POP PUSH2 0x51E JUMP JUMPDEST PUSH0 TIMESTAMP SWAP1 POP PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH2 0x498 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x4A8 JUMPI PUSH0 SWAP2 POP POP PUSH2 0x51E JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST DUP2 LT PUSH2 0x4C9 JUMPI PUSH1 0x7 SLOAD SWAP2 POP POP PUSH2 0x51E JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD DUP4 PUSH2 0x4DB SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST PUSH2 0x4E5 SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x4 SLOAD PUSH1 0x6 SLOAD PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH1 0x7 SLOAD PUSH2 0x50A SWAP2 SWAP1 PUSH2 0x173C JUMP JUMPDEST PUSH2 0x514 SWAP2 SWAP1 PUSH2 0x17AA JUMP JUMPDEST SWAP1 POP DUP1 SWAP5 POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD PUSH2 0x52D PUSH2 0x466 JUMP JUMPDEST PUSH2 0x537 SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x557 PUSH2 0x1054 JUMP JUMPDEST PUSH2 0x560 PUSH0 PUSH2 0x10DB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x9 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x5B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A9 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x620 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x617 SWAP1 PUSH2 0x189C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x68E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x685 SWAP1 PUSH2 0x1904 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP6 GT PUSH2 0x6D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C7 SWAP1 PUSH2 0x1992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT PUSH2 0x712 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x709 SWAP1 PUSH2 0x19FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP5 GT ISZERO PUSH2 0x755 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74C SWAP1 PUSH2 0x1A62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BA SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x9 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x9 PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x8BD DUP2 PUSH2 0x10DB JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x14FC8AD8C19C2F708DDA1E872C93F682D7A3CAE234BDC2712270269F8E1D00C2 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x920 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x939 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x9 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x989 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x980 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xA16 JUMPI POP PUSH2 0x9E7 PUSH2 0xBB3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xA55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4C SWAP1 PUSH2 0x1BDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xA5E PUSH2 0x521 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0xAA2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA99 SWAP1 PUSH2 0x1C45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAB3 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xB27 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11EB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC7798891864187665AC6DD119286E44EC13F014527AEEB2B8EB3FD413DF93179 DUP3 PUSH1 0x40 MLOAD PUSH2 0xB8E SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xB9F PUSH2 0x126A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xBE8 PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC77 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6E SWAP1 PUSH2 0x1CAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCA9 PUSH2 0xC82 PUSH2 0xBB3 JUMP JUMPDEST DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11EB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xCB5 PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xD03 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCFA SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD53 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4A SWAP1 PUSH2 0x1D7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH2 0xD77 PUSH2 0x466 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x7 SLOAD PUSH2 0xD88 SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0xDE6 JUMPI PUSH2 0xDE5 PUSH2 0xD9D PUSH2 0xBB3 JUMP JUMPDEST DUP3 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11EB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x57C76F5E278BFBD4EEB5207D287AA5A1A9E1113C65F7EEFA540E379A2774D13B DUP3 PUSH1 0x40 MLOAD PUSH2 0xE4D SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x9 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 JUMP JUMPDEST PUSH0 PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0xF08 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST TIMESTAMP LT ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 TIMESTAMP SWAP1 POP PUSH0 PUSH1 0x5 SLOAD DUP3 GT PUSH2 0xF29 JUMPI PUSH0 PUSH2 0xF38 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP3 PUSH2 0xF37 SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH0 PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0xF4B SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST DUP4 LT PUSH2 0xF57 JUMPI PUSH0 PUSH2 0xF73 JUMP JUMPDEST DUP3 PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0xF68 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST PUSH2 0xF72 SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH2 0xF7D PUSH2 0x466 JUMP JUMPDEST PUSH2 0xF85 PUSH2 0x521 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH2 0xF95 SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST DUP5 DUP5 SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 JUMP JUMPDEST PUSH2 0xFB3 PUSH2 0x1054 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1023 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101A SWAP2 SWAP1 PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x102C DUP2 PUSH2 0x10DB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x105C PUSH2 0x1273 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x107A PUSH2 0xBB3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10D9 JUMPI PUSH2 0x109D PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D0 SWAP2 SWAP1 PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x11E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D8 SWAP1 PUSH2 0x1DE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1265 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x121E SWAP3 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x127A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1299 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x12B2 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x12CD JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x130F JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1306 SWAP2 SWAP1 PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1327 DUP2 PUSH2 0x1315 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1340 PUSH0 DUP4 ADD DUP5 PUSH2 0x131E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x135A DUP2 PUSH2 0x1346 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1373 PUSH0 DUP4 ADD DUP5 PUSH2 0x1351 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13A2 DUP3 PUSH2 0x1379 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13B2 DUP2 PUSH2 0x1398 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13CB PUSH0 DUP4 ADD DUP5 PUSH2 0x13A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13DE DUP2 PUSH2 0x1398 JUMP JUMPDEST DUP2 EQ PUSH2 0x13E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13F9 DUP2 PUSH2 0x13D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1408 DUP2 PUSH2 0x1315 JUMP JUMPDEST DUP2 EQ PUSH2 0x1412 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1423 DUP2 PUSH2 0x13FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1432 DUP2 PUSH2 0x1346 JUMP JUMPDEST DUP2 EQ PUSH2 0x143C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x144D DUP2 PUSH2 0x1429 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x146E JUMPI PUSH2 0x146D PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x147B DUP11 DUP3 DUP12 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x148C DUP11 DUP3 DUP12 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x149D DUP11 DUP3 DUP12 ADD PUSH2 0x1415 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x14AE DUP11 DUP3 DUP12 ADD PUSH2 0x1415 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x14BF DUP11 DUP3 DUP12 ADD PUSH2 0x1415 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x14D0 DUP11 DUP3 DUP12 ADD PUSH2 0x143F JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x14E1 DUP11 DUP3 DUP12 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1506 JUMPI PUSH2 0x1505 PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1513 DUP6 DUP3 DUP7 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1524 DUP6 DUP3 DUP7 ADD PUSH2 0x1415 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x1542 PUSH0 DUP4 ADD DUP13 PUSH2 0x13A9 JUMP JUMPDEST PUSH2 0x154F PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x13A9 JUMP JUMPDEST PUSH2 0x155C PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x1569 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x1576 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x1583 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x1590 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x159D PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x1351 JUMP JUMPDEST PUSH2 0x15AB PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x1351 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x15CC PUSH0 DUP4 ADD DUP9 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x15D9 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x15E6 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x15F3 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x1600 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x131E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x161F JUMPI PUSH2 0x161E PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x162C DUP5 DUP3 DUP6 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1658 PUSH2 0x1653 PUSH2 0x164E DUP5 PUSH2 0x1379 JUMP JUMPDEST PUSH2 0x1635 JUMP JUMPDEST PUSH2 0x1379 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1669 DUP3 PUSH2 0x163E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x167A DUP3 PUSH2 0x165F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x168A DUP2 PUSH2 0x1670 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16A3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1681 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x16E0 DUP3 PUSH2 0x1315 JUMP JUMPDEST SWAP2 POP PUSH2 0x16EB DUP4 PUSH2 0x1315 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1703 JUMPI PUSH2 0x1702 PUSH2 0x16A9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1713 DUP3 PUSH2 0x1315 JUMP JUMPDEST SWAP2 POP PUSH2 0x171E DUP4 PUSH2 0x1315 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1736 JUMPI PUSH2 0x1735 PUSH2 0x16A9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1746 DUP3 PUSH2 0x1315 JUMP JUMPDEST SWAP2 POP PUSH2 0x1751 DUP4 PUSH2 0x1315 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x175F DUP2 PUSH2 0x1315 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1776 JUMPI PUSH2 0x1775 PUSH2 0x16A9 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x17B4 DUP3 PUSH2 0x1315 JUMP JUMPDEST SWAP2 POP PUSH2 0x17BF DUP4 PUSH2 0x1315 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x17CF JUMPI PUSH2 0x17CE PUSH2 0x177D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C726561647920696E697469616C697A656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x181E PUSH1 0x13 DUP4 PUSH2 0x17DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1829 DUP3 PUSH2 0x17EA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x184B DUP2 PUSH2 0x1812 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1886 PUSH1 0x15 DUP4 PUSH2 0x17DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1891 DUP3 PUSH2 0x1852 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18B3 DUP2 PUSH2 0x187A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642062656E656669636961727920616464726573730000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18EE PUSH1 0x1B DUP4 PUSH2 0x17DA JUMP JUMPDEST SWAP2 POP PUSH2 0x18F9 DUP3 PUSH2 0x18BA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x191B DUP2 PUSH2 0x18E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F74616C20616D6F756E74206D757374206265206772656174657220746861 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E20300000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x197C PUSH1 0x23 DUP4 PUSH2 0x17DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1987 DUP3 PUSH2 0x1922 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19A9 DUP2 PUSH2 0x1970 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4475726174696F6E206D7573742062652067726561746572207468616E203000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19E4 PUSH1 0x1F DUP4 PUSH2 0x17DA JUMP JUMPDEST SWAP2 POP PUSH2 0x19EF DUP3 PUSH2 0x19B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A11 DUP2 PUSH2 0x19D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436C6966662063616E6E6F7420657863656564206475726174696F6E00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A4C PUSH1 0x1C DUP4 PUSH2 0x17DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1A57 DUP3 PUSH2 0x1A18 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A79 DUP2 PUSH2 0x1A40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206F776E657220616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AB4 PUSH1 0x15 DUP4 PUSH2 0x17DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1ABF DUP3 PUSH2 0x1A80 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AE1 DUP2 PUSH2 0x1AA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1AFB PUSH0 DUP4 ADD DUP8 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x1B08 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x1B15 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x131E JUMP JUMPDEST PUSH2 0x1B22 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1351 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x56657374696E6720686173206265656E207265766F6B65640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B5F PUSH1 0x18 DUP4 PUSH2 0x17DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1B6A DUP3 PUSH2 0x1B2B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B8C DUP2 PUSH2 0x1B53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x556E617574686F72697A65640000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BC7 PUSH1 0xC DUP4 PUSH2 0x17DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD2 DUP3 PUSH2 0x1B93 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BF4 DUP2 PUSH2 0x1BBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F2072656C65617365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C2F PUSH1 0x14 DUP4 PUSH2 0x17DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1C3A DUP3 PUSH2 0x1BFB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C5C DUP2 PUSH2 0x1C23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207265636F7665722076657374696E6720746F6B656E00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C97 PUSH1 0x1C DUP4 PUSH2 0x17DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1CA2 DUP3 PUSH2 0x1C63 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CC4 DUP2 PUSH2 0x1C8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56657374696E67206973206E6F74207265766F6361626C650000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CFF PUSH1 0x18 DUP4 PUSH2 0x17DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1D0A DUP3 PUSH2 0x1CCB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D2C DUP2 PUSH2 0x1CF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56657374696E6720616C7265616479207265766F6B6564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D67 PUSH1 0x17 DUP4 PUSH2 0x17DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1D72 DUP3 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D94 DUP2 PUSH2 0x1D5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DCF PUSH1 0x1F DUP4 PUSH2 0x17DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1DDA DUP3 PUSH2 0x1D9B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DFC DUP2 PUSH2 0x1DC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E16 PUSH0 DUP4 ADD DUP6 PUSH2 0x13A9 JUMP JUMPDEST PUSH2 0x1E23 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x131E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0x971FD7EE9B9806324433C07A30EE4206DA5B72375A9B DUP8 0x1E CALLDATACOPY SIGNEXTEND SELFBALANCE STATICCALL CREATE2 DUP9 0xE8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "298:8130:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;522:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;470:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;551:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7704:107;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;438:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3086:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7493:99;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4629:843;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4399:107;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;639:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1795:1216:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3247:436;;;:::i;:::-;;612:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;583:23:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8211:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3759:501;;;:::i;:::-;;496:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5898:527;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;7913:108;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6752:635;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;413:19:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;522:23;;;;:::o;470:20::-;;;;:::o;551:26::-;;;;:::o;7704:107::-;7749:4;7799:5;;7791;;:13;;;;:::i;:::-;7772:15;:32;;7765:39;;7704:107;:::o;438:26::-;;;;;;;;;;;;;:::o;3086:90::-;3134:4;3157:12;;;;;;;;;;;3150:19;;3086:90;:::o;7493:99::-;7538:4;7580:5;;7561:15;:24;;7554:31;;7493:99;:::o;4629:843::-;4674:7;4697;;;;;;;;;;;4693:46;;;4727:1;4720:8;;;;4693:46;4749:19;4771:15;4749:37;;4882:5;;4874;;:13;;;;:::i;:::-;4860:11;:27;4856:66;;;4910:1;4903:8;;;;;4856:66;5016:8;;5008:5;;:16;;;;:::i;:::-;4993:11;:31;4989:80;;5047:11;;5040:18;;;;;4989:80;5156:19;5200:5;;5192;;5178:11;:19;;;;:::i;:::-;:27;;;;:::i;:::-;5156:49;;5215:23;5252:5;;5241:8;;:16;;;;:::i;:::-;5215:42;;5359:20;5412:15;5397:11;5383;;:25;;;;:::i;:::-;5382:45;;;;:::i;:::-;5359:68;;5453:12;5446:19;;;;;;4629:843;;:::o;4399:107::-;4448:7;4491:8;;4474:14;:12;:14::i;:::-;:25;;;;:::i;:::-;4467:32;;4399:107;:::o;639:19::-;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1795:1216:9:-;2033:12;;;;;;;;;;;2032:13;2024:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;2105:1;2087:20;;:6;:20;;;2079:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;2175:1;2151:26;;:12;:26;;;2143:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;2242:1;2227:12;:16;2219:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2313:1;2301:9;:13;2293:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;2378:9;2368:6;:19;;2360:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;2456:1;2438:20;;:6;:20;;;2430:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;2510:6;2495:5;;:22;;;;;;;;;;;;;;;;;;2541:12;2527:11;;:26;;;;;;;;;;;;;;;;;;2577:12;2563:11;:26;;;;2607:6;2599:5;:14;;;;2634:9;2623:8;:20;;;;2665:10;2653:9;;:22;;;;;;;;;;;;;;;;;;2693:15;2685:5;:23;;;;2729:1;2718:8;:12;;;;2750:5;2740:7;;:15;;;;;;;;;;;;;;;;;;2780:4;2765:12;;:19;;;;;;;;;;;;;;;;;;2795:26;2814:6;2795:18;:26::i;:::-;2889:12;2837:167;;2869:6;2837:167;;;2915:12;2941:6;2961:9;2984:10;2837:167;;;;;;;;;:::i;:::-;;;;;;;;1795:1216;;;;;;;:::o;3247:436::-;2261:21:4;:19;:21::i;:::-;3307:7:9::1;;;;;;;;;;;3306:8;3298:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;3375:11;;;;;;;;;;;3361:25;;:10;:25;;;:50;;;;3404:7;:5;:7::i;:::-;3390:21;;:10;:21;;;3361:50;3353:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;3439:18;3460;:16;:18::i;:::-;3439:39;;3509:1;3496:10;:14;3488:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;3558:10;3546:8;;:22;;;;;;;:::i;:::-;;;;;;;;3578:43;3597:11;;;;;;;;;;;3610:10;3578:5;;;;;;;;;;;:18;;;;:43;;;;;:::i;:::-;3652:11;;;;;;;;;;;3637:39;;;3665:10;3637:39;;;;;;:::i;:::-;;;;;;;;3288:395;2303:20:4::0;:18;:20::i;:::-;3247:436:9:o;612:21::-;;;;;;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;583:23:9:-;;;;:::o;8211:215::-;1531:13:0;:11;:13::i;:::-;8325:5:9::1;;;;;;;;;;;8307:24;;:6;:24;;::::0;8299:65:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;8374:45;8402:7;:5;:7::i;:::-;8411;8381:6;8374:27;;;;:45;;;;;:::i;:::-;8211:215:::0;;:::o;3759:501::-;1531:13:0;:11;:13::i;:::-;3814:9:9::1;;;;;;;;;;;3806:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;3871:7;;;;;;;;;;;3870:8;3862:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;3927:4;3917:7;;:14;;;;;;;;;;;;;;;;;;4022;4039;:12;:14::i;:::-;4022:31;;4063:16;4096:6;4082:11;;:20;;;;:::i;:::-;4063:39;;4136:1;4125:8;:12;4121:80;;;4153:37;4172:7;:5;:7::i;:::-;4181:8;4153:5;;;;;;;;;;;:18;;;;:37;;;;;:::i;:::-;4121:80;4231:11;;;;;;;;;;;4216:37;;;4244:8;4216:37;;;;;;:::i;:::-;;;;;;;;3796:464;;3759:501::o:0;496:20::-;;;;:::o;5898:527::-;5956:14;5980:20;6010;6040:17;6067:14;6091;6115:17;6142:15;6167:13;6226:5;;;;;;;;;;;6246:11;;;;;;;;;;;6271;;6296:8;;6318:5;;6337;;6356:8;;6378:9;;;;;;;;;;;6401:7;;;;;;;;;;;6197:221;;;;;;;;;;;;;;;;;;5898:527;;;;;;;;;:::o;7913:108::-;7956:4;8006:8;;7998:5;;:16;;;;:::i;:::-;7979:15;:35;;7972:42;;7913:108;:::o;6752:635::-;6812:21;6843:25;6878:24;6912:20;6942:22;6981:19;7003:15;6981:37;;7028:19;7064:5;;7050:11;:19;:45;;7094:1;7050:45;;;7086:5;;7072:11;:19;;;;:::i;:::-;7050:45;7028:67;;7105:21;7151:8;;7143:5;;:16;;;;:::i;:::-;7129:11;:30;:67;;7195:1;7129:67;;;7181:11;7170:8;;7162:5;;:16;;;;:::i;:::-;:30;;;;:::i;:::-;7129:67;7105:91;;7236:14;:12;:14::i;:::-;7264:18;:16;:18::i;:::-;7310:8;;7296:11;;:22;;;;:::i;:::-;7332:11;7357:13;7215:165;;;;;;;;;;;;;6752:635;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;413:19:9:-;;;;;;;;;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2336:287:4:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;1219:160:6:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;2629:209:4:-;1716:1;2809:7;:22;;;;2629:209::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8370:720:6:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;7:77:10:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:90::-;476:7;519:5;512:13;505:21;494:32;;442:90;;;:::o;538:109::-;619:21;634:5;619:21;:::i;:::-;614:3;607:34;538:109;;:::o;653:210::-;740:4;778:2;767:9;763:18;755:26;;791:65;853:1;842:9;838:17;829:6;791:65;:::i;:::-;653:210;;;;:::o;869:126::-;906:7;946:42;939:5;935:54;924:65;;869:126;;;:::o;1001:96::-;1038:7;1067:24;1085:5;1067:24;:::i;:::-;1056:35;;1001:96;;;:::o;1103:118::-;1190:24;1208:5;1190:24;:::i;:::-;1185:3;1178:37;1103:118;;:::o;1227:222::-;1320:4;1358:2;1347:9;1343:18;1335:26;;1371:71;1439:1;1428:9;1424:17;1415:6;1371:71;:::i;:::-;1227:222;;;;:::o;1536:117::-;1645:1;1642;1635:12;1782:122;1855:24;1873:5;1855:24;:::i;:::-;1848:5;1845:35;1835:63;;1894:1;1891;1884:12;1835:63;1782:122;:::o;1910:139::-;1956:5;1994:6;1981:20;1972:29;;2010:33;2037:5;2010:33;:::i;:::-;1910:139;;;;:::o;2055:122::-;2128:24;2146:5;2128:24;:::i;:::-;2121:5;2118:35;2108:63;;2167:1;2164;2157:12;2108:63;2055:122;:::o;2183:139::-;2229:5;2267:6;2254:20;2245:29;;2283:33;2310:5;2283:33;:::i;:::-;2183:139;;;;:::o;2328:116::-;2398:21;2413:5;2398:21;:::i;:::-;2391:5;2388:32;2378:60;;2434:1;2431;2424:12;2378:60;2328:116;:::o;2450:133::-;2493:5;2531:6;2518:20;2509:29;;2547:30;2571:5;2547:30;:::i;:::-;2450:133;;;;:::o;2589:1197::-;2699:6;2707;2715;2723;2731;2739;2747;2796:3;2784:9;2775:7;2771:23;2767:33;2764:120;;;2803:79;;:::i;:::-;2764:120;2923:1;2948:53;2993:7;2984:6;2973:9;2969:22;2948:53;:::i;:::-;2938:63;;2894:117;3050:2;3076:53;3121:7;3112:6;3101:9;3097:22;3076:53;:::i;:::-;3066:63;;3021:118;3178:2;3204:53;3249:7;3240:6;3229:9;3225:22;3204:53;:::i;:::-;3194:63;;3149:118;3306:2;3332:53;3377:7;3368:6;3357:9;3353:22;3332:53;:::i;:::-;3322:63;;3277:118;3434:3;3461:53;3506:7;3497:6;3486:9;3482:22;3461:53;:::i;:::-;3451:63;;3405:119;3563:3;3590:50;3632:7;3623:6;3612:9;3608:22;3590:50;:::i;:::-;3580:60;;3534:116;3689:3;3716:53;3761:7;3752:6;3741:9;3737:22;3716:53;:::i;:::-;3706:63;;3660:119;2589:1197;;;;;;;;;;:::o;3792:474::-;3860:6;3868;3917:2;3905:9;3896:7;3892:23;3888:32;3885:119;;;3923:79;;:::i;:::-;3885:119;4043:1;4068:53;4113:7;4104:6;4093:9;4089:22;4068:53;:::i;:::-;4058:63;;4014:117;4170:2;4196:53;4241:7;4232:6;4221:9;4217:22;4196:53;:::i;:::-;4186:63;;4141:118;3792:474;;;;;:::o;4272:1084::-;4577:4;4615:3;4604:9;4600:19;4592:27;;4629:71;4697:1;4686:9;4682:17;4673:6;4629:71;:::i;:::-;4710:72;4778:2;4767:9;4763:18;4754:6;4710:72;:::i;:::-;4792;4860:2;4849:9;4845:18;4836:6;4792:72;:::i;:::-;4874;4942:2;4931:9;4927:18;4918:6;4874:72;:::i;:::-;4956:73;5024:3;5013:9;5009:19;5000:6;4956:73;:::i;:::-;5039;5107:3;5096:9;5092:19;5083:6;5039:73;:::i;:::-;5122;5190:3;5179:9;5175:19;5166:6;5122:73;:::i;:::-;5205:67;5267:3;5256:9;5252:19;5243:6;5205:67;:::i;:::-;5282;5344:3;5333:9;5329:19;5320:6;5282:67;:::i;:::-;4272:1084;;;;;;;;;;;;:::o;5362:664::-;5567:4;5605:3;5594:9;5590:19;5582:27;;5619:71;5687:1;5676:9;5672:17;5663:6;5619:71;:::i;:::-;5700:72;5768:2;5757:9;5753:18;5744:6;5700:72;:::i;:::-;5782;5850:2;5839:9;5835:18;5826:6;5782:72;:::i;:::-;5864;5932:2;5921:9;5917:18;5908:6;5864:72;:::i;:::-;5946:73;6014:3;6003:9;5999:19;5990:6;5946:73;:::i;:::-;5362:664;;;;;;;;:::o;6032:329::-;6091:6;6140:2;6128:9;6119:7;6115:23;6111:32;6108:119;;;6146:79;;:::i;:::-;6108:119;6266:1;6291:53;6336:7;6327:6;6316:9;6312:22;6291:53;:::i;:::-;6281:63;;6237:117;6032:329;;;;:::o;6367:60::-;6395:3;6416:5;6409:12;;6367:60;;;:::o;6433:142::-;6483:9;6516:53;6534:34;6543:24;6561:5;6543:24;:::i;:::-;6534:34;:::i;:::-;6516:53;:::i;:::-;6503:66;;6433:142;;;:::o;6581:126::-;6631:9;6664:37;6695:5;6664:37;:::i;:::-;6651:50;;6581:126;;;:::o;6713:140::-;6777:9;6810:37;6841:5;6810:37;:::i;:::-;6797:50;;6713:140;;;:::o;6859:159::-;6960:51;7005:5;6960:51;:::i;:::-;6955:3;6948:64;6859:159;;:::o;7024:250::-;7131:4;7169:2;7158:9;7154:18;7146:26;;7182:85;7264:1;7253:9;7249:17;7240:6;7182:85;:::i;:::-;7024:250;;;;:::o;7280:180::-;7328:77;7325:1;7318:88;7425:4;7422:1;7415:15;7449:4;7446:1;7439:15;7466:191;7506:3;7525:20;7543:1;7525:20;:::i;:::-;7520:25;;7559:20;7577:1;7559:20;:::i;:::-;7554:25;;7602:1;7599;7595:9;7588:16;;7623:3;7620:1;7617:10;7614:36;;;7630:18;;:::i;:::-;7614:36;7466:191;;;;:::o;7663:194::-;7703:4;7723:20;7741:1;7723:20;:::i;:::-;7718:25;;7757:20;7775:1;7757:20;:::i;:::-;7752:25;;7801:1;7798;7794:9;7786:17;;7825:1;7819:4;7816:11;7813:37;;;7830:18;;:::i;:::-;7813:37;7663:194;;;;:::o;7863:410::-;7903:7;7926:20;7944:1;7926:20;:::i;:::-;7921:25;;7960:20;7978:1;7960:20;:::i;:::-;7955:25;;8015:1;8012;8008:9;8037:30;8055:11;8037:30;:::i;:::-;8026:41;;8216:1;8207:7;8203:15;8200:1;8197:22;8177:1;8170:9;8150:83;8127:139;;8246:18;;:::i;:::-;8127:139;7911:362;7863:410;;;;:::o;8279:180::-;8327:77;8324:1;8317:88;8424:4;8421:1;8414:15;8448:4;8445:1;8438:15;8465:185;8505:1;8522:20;8540:1;8522:20;:::i;:::-;8517:25;;8556:20;8574:1;8556:20;:::i;:::-;8551:25;;8595:1;8585:35;;8600:18;;:::i;:::-;8585:35;8642:1;8639;8635:9;8630:14;;8465:185;;;;:::o;8656:169::-;8740:11;8774:6;8769:3;8762:19;8814:4;8809:3;8805:14;8790:29;;8656:169;;;;:::o;8831:::-;8971:21;8967:1;8959:6;8955:14;8948:45;8831:169;:::o;9006:366::-;9148:3;9169:67;9233:2;9228:3;9169:67;:::i;:::-;9162:74;;9245:93;9334:3;9245:93;:::i;:::-;9363:2;9358:3;9354:12;9347:19;;9006:366;;;:::o;9378:419::-;9544:4;9582:2;9571:9;9567:18;9559:26;;9631:9;9625:4;9621:20;9617:1;9606:9;9602:17;9595:47;9659:131;9785:4;9659:131;:::i;:::-;9651:139;;9378:419;;;:::o;9803:171::-;9943:23;9939:1;9931:6;9927:14;9920:47;9803:171;:::o;9980:366::-;10122:3;10143:67;10207:2;10202:3;10143:67;:::i;:::-;10136:74;;10219:93;10308:3;10219:93;:::i;:::-;10337:2;10332:3;10328:12;10321:19;;9980:366;;;:::o;10352:419::-;10518:4;10556:2;10545:9;10541:18;10533:26;;10605:9;10599:4;10595:20;10591:1;10580:9;10576:17;10569:47;10633:131;10759:4;10633:131;:::i;:::-;10625:139;;10352:419;;;:::o;10777:177::-;10917:29;10913:1;10905:6;10901:14;10894:53;10777:177;:::o;10960:366::-;11102:3;11123:67;11187:2;11182:3;11123:67;:::i;:::-;11116:74;;11199:93;11288:3;11199:93;:::i;:::-;11317:2;11312:3;11308:12;11301:19;;10960:366;;;:::o;11332:419::-;11498:4;11536:2;11525:9;11521:18;11513:26;;11585:9;11579:4;11575:20;11571:1;11560:9;11556:17;11549:47;11613:131;11739:4;11613:131;:::i;:::-;11605:139;;11332:419;;;:::o;11757:222::-;11897:34;11893:1;11885:6;11881:14;11874:58;11966:5;11961:2;11953:6;11949:15;11942:30;11757:222;:::o;11985:366::-;12127:3;12148:67;12212:2;12207:3;12148:67;:::i;:::-;12141:74;;12224:93;12313:3;12224:93;:::i;:::-;12342:2;12337:3;12333:12;12326:19;;11985:366;;;:::o;12357:419::-;12523:4;12561:2;12550:9;12546:18;12538:26;;12610:9;12604:4;12600:20;12596:1;12585:9;12581:17;12574:47;12638:131;12764:4;12638:131;:::i;:::-;12630:139;;12357:419;;;:::o;12782:181::-;12922:33;12918:1;12910:6;12906:14;12899:57;12782:181;:::o;12969:366::-;13111:3;13132:67;13196:2;13191:3;13132:67;:::i;:::-;13125:74;;13208:93;13297:3;13208:93;:::i;:::-;13326:2;13321:3;13317:12;13310:19;;12969:366;;;:::o;13341:419::-;13507:4;13545:2;13534:9;13530:18;13522:26;;13594:9;13588:4;13584:20;13580:1;13569:9;13565:17;13558:47;13622:131;13748:4;13622:131;:::i;:::-;13614:139;;13341:419;;;:::o;13766:178::-;13906:30;13902:1;13894:6;13890:14;13883:54;13766:178;:::o;13950:366::-;14092:3;14113:67;14177:2;14172:3;14113:67;:::i;:::-;14106:74;;14189:93;14278:3;14189:93;:::i;:::-;14307:2;14302:3;14298:12;14291:19;;13950:366;;;:::o;14322:419::-;14488:4;14526:2;14515:9;14511:18;14503:26;;14575:9;14569:4;14565:20;14561:1;14550:9;14546:17;14539:47;14603:131;14729:4;14603:131;:::i;:::-;14595:139;;14322:419;;;:::o;14747:171::-;14887:23;14883:1;14875:6;14871:14;14864:47;14747:171;:::o;14924:366::-;15066:3;15087:67;15151:2;15146:3;15087:67;:::i;:::-;15080:74;;15163:93;15252:3;15163:93;:::i;:::-;15281:2;15276:3;15272:12;15265:19;;14924:366;;;:::o;15296:419::-;15462:4;15500:2;15489:9;15485:18;15477:26;;15549:9;15543:4;15539:20;15535:1;15524:9;15520:17;15513:47;15577:131;15703:4;15577:131;:::i;:::-;15569:139;;15296:419;;;:::o;15721:541::-;15892:4;15930:3;15919:9;15915:19;15907:27;;15944:71;16012:1;16001:9;15997:17;15988:6;15944:71;:::i;:::-;16025:72;16093:2;16082:9;16078:18;16069:6;16025:72;:::i;:::-;16107;16175:2;16164:9;16160:18;16151:6;16107:72;:::i;:::-;16189:66;16251:2;16240:9;16236:18;16227:6;16189:66;:::i;:::-;15721:541;;;;;;;:::o;16268:174::-;16408:26;16404:1;16396:6;16392:14;16385:50;16268:174;:::o;16448:366::-;16590:3;16611:67;16675:2;16670:3;16611:67;:::i;:::-;16604:74;;16687:93;16776:3;16687:93;:::i;:::-;16805:2;16800:3;16796:12;16789:19;;16448:366;;;:::o;16820:419::-;16986:4;17024:2;17013:9;17009:18;17001:26;;17073:9;17067:4;17063:20;17059:1;17048:9;17044:17;17037:47;17101:131;17227:4;17101:131;:::i;:::-;17093:139;;16820:419;;;:::o;17245:162::-;17385:14;17381:1;17373:6;17369:14;17362:38;17245:162;:::o;17413:366::-;17555:3;17576:67;17640:2;17635:3;17576:67;:::i;:::-;17569:74;;17652:93;17741:3;17652:93;:::i;:::-;17770:2;17765:3;17761:12;17754:19;;17413:366;;;:::o;17785:419::-;17951:4;17989:2;17978:9;17974:18;17966:26;;18038:9;18032:4;18028:20;18024:1;18013:9;18009:17;18002:47;18066:131;18192:4;18066:131;:::i;:::-;18058:139;;17785:419;;;:::o;18210:170::-;18350:22;18346:1;18338:6;18334:14;18327:46;18210:170;:::o;18386:366::-;18528:3;18549:67;18613:2;18608:3;18549:67;:::i;:::-;18542:74;;18625:93;18714:3;18625:93;:::i;:::-;18743:2;18738:3;18734:12;18727:19;;18386:366;;;:::o;18758:419::-;18924:4;18962:2;18951:9;18947:18;18939:26;;19011:9;19005:4;19001:20;18997:1;18986:9;18982:17;18975:47;19039:131;19165:4;19039:131;:::i;:::-;19031:139;;18758:419;;;:::o;19183:178::-;19323:30;19319:1;19311:6;19307:14;19300:54;19183:178;:::o;19367:366::-;19509:3;19530:67;19594:2;19589:3;19530:67;:::i;:::-;19523:74;;19606:93;19695:3;19606:93;:::i;:::-;19724:2;19719:3;19715:12;19708:19;;19367:366;;;:::o;19739:419::-;19905:4;19943:2;19932:9;19928:18;19920:26;;19992:9;19986:4;19982:20;19978:1;19967:9;19963:17;19956:47;20020:131;20146:4;20020:131;:::i;:::-;20012:139;;19739:419;;;:::o;20164:174::-;20304:26;20300:1;20292:6;20288:14;20281:50;20164:174;:::o;20344:366::-;20486:3;20507:67;20571:2;20566:3;20507:67;:::i;:::-;20500:74;;20583:93;20672:3;20583:93;:::i;:::-;20701:2;20696:3;20692:12;20685:19;;20344:366;;;:::o;20716:419::-;20882:4;20920:2;20909:9;20905:18;20897:26;;20969:9;20963:4;20959:20;20955:1;20944:9;20940:17;20933:47;20997:131;21123:4;20997:131;:::i;:::-;20989:139;;20716:419;;;:::o;21141:173::-;21281:25;21277:1;21269:6;21265:14;21258:49;21141:173;:::o;21320:366::-;21462:3;21483:67;21547:2;21542:3;21483:67;:::i;:::-;21476:74;;21559:93;21648:3;21559:93;:::i;:::-;21677:2;21672:3;21668:12;21661:19;;21320:366;;;:::o;21692:419::-;21858:4;21896:2;21885:9;21881:18;21873:26;;21945:9;21939:4;21935:20;21931:1;21920:9;21916:17;21909:47;21973:131;22099:4;21973:131;:::i;:::-;21965:139;;21692:419;;;:::o;22117:181::-;22257:33;22253:1;22245:6;22241:14;22234:57;22117:181;:::o;22304:366::-;22446:3;22467:67;22531:2;22526:3;22467:67;:::i;:::-;22460:74;;22543:93;22632:3;22543:93;:::i;:::-;22661:2;22656:3;22652:12;22645:19;;22304:366;;;:::o;22676:419::-;22842:4;22880:2;22869:9;22865:18;22857:26;;22929:9;22923:4;22919:20;22915:1;22904:9;22900:17;22893:47;22957:131;23083:4;22957:131;:::i;:::-;22949:139;;22676:419;;;:::o;23101:332::-;23222:4;23260:2;23249:9;23245:18;23237:26;;23273:71;23341:1;23330:9;23326:17;23317:6;23273:71;:::i;:::-;23354:72;23422:2;23411:9;23407:18;23398:6;23354:72;:::i;:::-;23101:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1555200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"beneficiary()": "2620",
								"cliff()": "2471",
								"cliffEnded()": "infinite",
								"duration()": "2449",
								"emergencyRecover(address,uint256)": "infinite",
								"getVestingInfo()": "infinite",
								"getVestingStatus()": "infinite",
								"hasEnded()": "infinite",
								"hasStarted()": "2469",
								"initialize(address,address,uint256,uint256,uint256,bool,address)": "infinite",
								"isInitialized()": "2658",
								"owner()": "2582",
								"releasableAmount()": "infinite",
								"release()": "infinite",
								"released()": "2514",
								"renounceOwnership()": "infinite",
								"revocable()": "2511",
								"revoke()": "infinite",
								"revoked()": "2606",
								"start()": "2447",
								"token()": "infinite",
								"totalAmount()": "2493",
								"transferOwnership(address)": "infinite",
								"vestedAmount()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 298,
									"end": 8428,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 298,
									"end": 8428,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 298,
									"end": 8428,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1207,
									"end": 1382,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 1207,
									"end": 1382,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1207,
									"end": 1382,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1207,
									"end": 1382,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1207,
									"end": 1382,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1207,
									"end": 1382,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 1382,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1207,
									"end": 1382,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1207,
									"end": 1382,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1207,
									"end": 1382,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1207,
									"end": 1382,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1229,
									"end": 1239,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 298,
									"end": 8428,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 298,
									"end": 8428,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 298,
									"end": 8428,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 298,
									"end": 8428,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 298,
									"end": 8428,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 298,
									"end": 8428,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 298,
									"end": 8428,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 298,
									"end": 8428,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 298,
									"end": 8428,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 298,
									"end": 8428,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 298,
									"end": 8428,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122075971fd7ee9b9806324433c07a30ee4206da5b72375a9b871e370b47faf588e864736f6c63430008140033",
									".code": [
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "86D1A69F"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "BE9A6555"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "BE9A6555"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "DC25A300"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "ECB70FB7"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "EE4A745C"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "FC0C546A"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "86D1A69F"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "872A7810"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "96132521"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "9639011E"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "B6549F75"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "44691F7E"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "44691F7E"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "44B1231F"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "5B940081"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "63D256CE"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "841BEE0D"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "FB5A6B4"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "13D033C0"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "1A39D8EF"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "253254D6"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "38AF3EED"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "392E53CD"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 298,
											"end": 8428,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 522,
											"end": 545,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 522,
											"end": 545,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 522,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 522,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 522,
											"end": 545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 522,
											"end": 545,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 522,
											"end": 545,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 522,
											"end": 545,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 522,
											"end": 545,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 522,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 522,
											"end": 545,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 522,
											"end": 545,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 522,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 522,
											"end": 545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 522,
											"end": 545,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 522,
											"end": 545,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 522,
											"end": 545,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 522,
											"end": 545,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 522,
											"end": 545,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 522,
											"end": 545,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 522,
											"end": 545,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 522,
											"end": 545,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 522,
											"end": 545,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 470,
											"end": 490,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 470,
											"end": 490,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 470,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 470,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 470,
											"end": 490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 470,
											"end": 490,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 470,
											"end": 490,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 470,
											"end": 490,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 470,
											"end": 490,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 470,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 470,
											"end": 490,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 470,
											"end": 490,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 470,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 470,
											"end": 490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 470,
											"end": 490,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 470,
											"end": 490,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 470,
											"end": 490,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 470,
											"end": 490,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 470,
											"end": 490,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 470,
											"end": 490,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 470,
											"end": 490,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 470,
											"end": 490,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 470,
											"end": 490,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 551,
											"end": 577,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 551,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 551,
											"end": 577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 551,
											"end": 577,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 577,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 551,
											"end": 577,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 551,
											"end": 577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 551,
											"end": 577,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 577,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 7704,
											"end": 7811,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 7704,
											"end": 7811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7704,
											"end": 7811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7704,
											"end": 7811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 7704,
											"end": 7811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7704,
											"end": 7811,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7704,
											"end": 7811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7704,
											"end": 7811,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7704,
											"end": 7811,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7704,
											"end": 7811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 7704,
											"end": 7811,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7704,
											"end": 7811,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7704,
											"end": 7811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 7704,
											"end": 7811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7704,
											"end": 7811,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 7704,
											"end": 7811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7704,
											"end": 7811,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7704,
											"end": 7811,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7704,
											"end": 7811,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7704,
											"end": 7811,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7704,
											"end": 7811,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7704,
											"end": 7811,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7704,
											"end": 7811,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 438,
											"end": 464,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 438,
											"end": 464,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 438,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 438,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 438,
											"end": 464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 438,
											"end": 464,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 438,
											"end": 464,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 438,
											"end": 464,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 464,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 438,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 438,
											"end": 464,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 438,
											"end": 464,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 438,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 438,
											"end": 464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 438,
											"end": 464,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 438,
											"end": 464,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 438,
											"end": 464,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 464,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 438,
											"end": 464,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 438,
											"end": 464,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 438,
											"end": 464,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 438,
											"end": 464,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 438,
											"end": 464,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3176,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3086,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 3086,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 3086,
											"end": 3176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3176,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 3086,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3176,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3176,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 3086,
											"end": 3176,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3176,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 3086,
											"end": 3176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3176,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 3086,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3176,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3176,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3176,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3176,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3176,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3176,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3176,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 7493,
											"end": 7592,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 7493,
											"end": 7592,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7493,
											"end": 7592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 7493,
											"end": 7592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 7493,
											"end": 7592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7493,
											"end": 7592,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 7493,
											"end": 7592,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7493,
											"end": 7592,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7493,
											"end": 7592,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7493,
											"end": 7592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 7493,
											"end": 7592,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7493,
											"end": 7592,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7493,
											"end": 7592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 7493,
											"end": 7592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7493,
											"end": 7592,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 7493,
											"end": 7592,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7493,
											"end": 7592,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7493,
											"end": 7592,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7493,
											"end": 7592,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7493,
											"end": 7592,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7493,
											"end": 7592,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7493,
											"end": 7592,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7493,
											"end": 7592,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 5472,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 4629,
											"end": 5472,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 4629,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 4629,
											"end": 5472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 5472,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 4629,
											"end": 5472,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 5472,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4629,
											"end": 5472,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 4629,
											"end": 5472,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 5472,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 4629,
											"end": 5472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 5472,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 4629,
											"end": 5472,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 5472,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4629,
											"end": 5472,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 5472,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 5472,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 5472,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 5472,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 5472,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4399,
											"end": 4506,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 4399,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4399,
											"end": 4506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 4399,
											"end": 4506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 4399,
											"end": 4506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4399,
											"end": 4506,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 4399,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4399,
											"end": 4506,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4399,
											"end": 4506,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4399,
											"end": 4506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 4399,
											"end": 4506,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4399,
											"end": 4506,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4399,
											"end": 4506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 4399,
											"end": 4506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4399,
											"end": 4506,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 4399,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4399,
											"end": 4506,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4399,
											"end": 4506,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4399,
											"end": 4506,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4399,
											"end": 4506,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4399,
											"end": 4506,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4399,
											"end": 4506,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4399,
											"end": 4506,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 639,
											"end": 658,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 639,
											"end": 658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 639,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 639,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 639,
											"end": 658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 639,
											"end": 658,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 639,
											"end": 658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 639,
											"end": 658,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 639,
											"end": 658,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 639,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 639,
											"end": 658,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 639,
											"end": 658,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 639,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 639,
											"end": 658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 639,
											"end": 658,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 639,
											"end": 658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 639,
											"end": 658,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 639,
											"end": 658,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 639,
											"end": 658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 639,
											"end": 658,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 639,
											"end": 658,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 639,
											"end": 658,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 639,
											"end": 658,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1795,
											"end": 3011,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1795,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1795,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 1795,
											"end": 3011,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1795,
											"end": 3011,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1795,
											"end": 3011,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1795,
											"end": 3011,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1795,
											"end": 3011,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1795,
											"end": 3011,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1795,
											"end": 3011,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1795,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1795,
											"end": 3011,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1795,
											"end": 3011,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1795,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 1795,
											"end": 3011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1795,
											"end": 3011,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1795,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1795,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 1795,
											"end": 3011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1795,
											"end": 3011,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 1795,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1795,
											"end": 3011,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3247,
											"end": 3683,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 3247,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3247,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 3247,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 3247,
											"end": 3683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3247,
											"end": 3683,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 3247,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3247,
											"end": 3683,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 612,
											"end": 633,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 612,
											"end": 633,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 612,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 612,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 612,
											"end": 633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 612,
											"end": 633,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 612,
											"end": 633,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 612,
											"end": 633,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 612,
											"end": 633,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 612,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 612,
											"end": 633,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 612,
											"end": 633,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 612,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 612,
											"end": 633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 612,
											"end": 633,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 612,
											"end": 633,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 612,
											"end": 633,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 612,
											"end": 633,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 612,
											"end": 633,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 612,
											"end": 633,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 612,
											"end": 633,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 612,
											"end": 633,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 612,
											"end": 633,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 583,
											"end": 606,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 583,
											"end": 606,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 583,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 583,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 583,
											"end": 606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 583,
											"end": 606,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 583,
											"end": 606,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 583,
											"end": 606,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 606,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 583,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 583,
											"end": 606,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 583,
											"end": 606,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 583,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 583,
											"end": 606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 583,
											"end": 606,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 583,
											"end": 606,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 583,
											"end": 606,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 606,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 583,
											"end": 606,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 583,
											"end": 606,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 583,
											"end": 606,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 583,
											"end": 606,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 583,
											"end": 606,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 8211,
											"end": 8426,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 8211,
											"end": 8426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8211,
											"end": 8426,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 8211,
											"end": 8426,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8211,
											"end": 8426,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8211,
											"end": 8426,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8211,
											"end": 8426,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8211,
											"end": 8426,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8211,
											"end": 8426,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8211,
											"end": 8426,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8211,
											"end": 8426,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 8211,
											"end": 8426,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8211,
											"end": 8426,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8211,
											"end": 8426,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 8211,
											"end": 8426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8211,
											"end": 8426,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 8211,
											"end": 8426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8211,
											"end": 8426,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 8211,
											"end": 8426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8211,
											"end": 8426,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 8211,
											"end": 8426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8211,
											"end": 8426,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3759,
											"end": 4260,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3759,
											"end": 4260,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3759,
											"end": 4260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3759,
											"end": 4260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 3759,
											"end": 4260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3759,
											"end": 4260,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3759,
											"end": 4260,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3759,
											"end": 4260,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 496,
											"end": 516,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 496,
											"end": 516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 496,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 496,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 496,
											"end": 516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 496,
											"end": 516,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 496,
											"end": 516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 496,
											"end": 516,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 496,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 496,
											"end": 516,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 496,
											"end": 516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 496,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 496,
											"end": 516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 496,
											"end": 516,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 496,
											"end": 516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 496,
											"end": 516,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 496,
											"end": 516,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 496,
											"end": 516,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 496,
											"end": 516,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 496,
											"end": 516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 496,
											"end": 516,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 5898,
											"end": 6425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "SWAP10",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 5898,
											"end": 6425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 7913,
											"end": 8021,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 7913,
											"end": 8021,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7913,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 7913,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 7913,
											"end": 8021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7913,
											"end": 8021,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 7913,
											"end": 8021,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7913,
											"end": 8021,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7913,
											"end": 8021,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7913,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 7913,
											"end": 8021,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7913,
											"end": 8021,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7913,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 7913,
											"end": 8021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7913,
											"end": 8021,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 7913,
											"end": 8021,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7913,
											"end": 8021,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7913,
											"end": 8021,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7913,
											"end": 8021,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7913,
											"end": 8021,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7913,
											"end": 8021,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7913,
											"end": 8021,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7913,
											"end": 8021,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7387,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6752,
											"end": 7387,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7387,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 6752,
											"end": 7387,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 6752,
											"end": 7387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7387,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 6752,
											"end": 7387,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7387,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6752,
											"end": 7387,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7387,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 6752,
											"end": 7387,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7387,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7387,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7387,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7387,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7387,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7387,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 6752,
											"end": 7387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7387,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 6752,
											"end": 7387,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7387,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6752,
											"end": 7387,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7387,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7387,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7387,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7387,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7387,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 413,
											"end": 432,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 413,
											"end": 432,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 413,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 413,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 413,
											"end": 432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 413,
											"end": 432,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 413,
											"end": 432,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 413,
											"end": 432,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 432,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 413,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 413,
											"end": 432,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 413,
											"end": 432,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 413,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 413,
											"end": 432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 413,
											"end": 432,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 413,
											"end": 432,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 413,
											"end": 432,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 432,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 413,
											"end": 432,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 413,
											"end": 432,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 413,
											"end": 432,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 413,
											"end": 432,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 413,
											"end": 432,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 522,
											"end": 545,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 522,
											"end": 545,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 522,
											"end": 545,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 522,
											"end": 545,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 522,
											"end": 545,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 522,
											"end": 545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 470,
											"end": 490,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 470,
											"end": 490,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 470,
											"end": 490,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 470,
											"end": 490,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 470,
											"end": 490,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 470,
											"end": 490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 551,
											"end": 577,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 551,
											"end": 577,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7704,
											"end": 7811,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 7704,
											"end": 7811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7753,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7799,
											"end": 7804,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7799,
											"end": 7804,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7791,
											"end": 7796,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 7791,
											"end": 7796,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7791,
											"end": 7804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 7791,
											"end": 7804,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7791,
											"end": 7804,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7791,
											"end": 7804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 7791,
											"end": 7804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7791,
											"end": 7804,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 7791,
											"end": 7804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7772,
											"end": 7787,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 7772,
											"end": 7804,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7772,
											"end": 7804,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7765,
											"end": 7804,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7765,
											"end": 7804,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7704,
											"end": 7811,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7704,
											"end": 7811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 438,
											"end": 464,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 438,
											"end": 464,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 438,
											"end": 464,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 438,
											"end": 464,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 438,
											"end": 464,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 438,
											"end": 464,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 438,
											"end": 464,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 438,
											"end": 464,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 438,
											"end": 464,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 438,
											"end": 464,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 438,
											"end": 464,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 438,
											"end": 464,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 438,
											"end": 464,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 438,
											"end": 464,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 438,
											"end": 464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3176,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 3086,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3138,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3157,
											"end": 3169,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3157,
											"end": 3169,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3157,
											"end": 3169,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3157,
											"end": 3169,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3157,
											"end": 3169,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3157,
											"end": 3169,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3157,
											"end": 3169,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3157,
											"end": 3169,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3157,
											"end": 3169,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3157,
											"end": 3169,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3157,
											"end": 3169,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3150,
											"end": 3169,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3150,
											"end": 3169,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3176,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7493,
											"end": 7592,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 7493,
											"end": 7592,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7538,
											"end": 7542,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7580,
											"end": 7585,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 7580,
											"end": 7585,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7561,
											"end": 7576,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 7561,
											"end": 7585,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7561,
											"end": 7585,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7554,
											"end": 7585,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7554,
											"end": 7585,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7493,
											"end": 7592,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7493,
											"end": 7592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 5472,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 4629,
											"end": 5472,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 4681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4697,
											"end": 4704,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 4697,
											"end": 4704,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4697,
											"end": 4704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4697,
											"end": 4704,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4697,
											"end": 4704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4697,
											"end": 4704,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4697,
											"end": 4704,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4697,
											"end": 4704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4697,
											"end": 4704,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4697,
											"end": 4704,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4697,
											"end": 4704,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4693,
											"end": 4739,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4693,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 4693,
											"end": 4739,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4727,
											"end": 4728,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4720,
											"end": 4728,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4720,
											"end": 4728,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4720,
											"end": 4728,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 4720,
											"end": 4728,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4693,
											"end": 4739,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 4693,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4768,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4771,
											"end": 4786,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4786,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4786,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4882,
											"end": 4887,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4882,
											"end": 4887,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4874,
											"end": 4879,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4874,
											"end": 4879,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4874,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 4874,
											"end": 4887,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4874,
											"end": 4887,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4874,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 4874,
											"end": 4887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4874,
											"end": 4887,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 4874,
											"end": 4887,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4860,
											"end": 4871,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4860,
											"end": 4887,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4856,
											"end": 4922,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4856,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 4856,
											"end": 4922,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4910,
											"end": 4911,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4903,
											"end": 4911,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 4903,
											"end": 4911,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4856,
											"end": 4922,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 4856,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5016,
											"end": 5024,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 5016,
											"end": 5024,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 5013,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 5008,
											"end": 5013,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 5008,
											"end": 5024,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 5024,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 5008,
											"end": 5024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 5024,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 5008,
											"end": 5024,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4993,
											"end": 5004,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4993,
											"end": 5024,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4989,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 4989,
											"end": 5069,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5047,
											"end": 5058,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 5047,
											"end": 5058,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5058,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5058,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5058,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 5040,
											"end": 5058,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4989,
											"end": 5069,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 4989,
											"end": 5069,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5156,
											"end": 5175,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5200,
											"end": 5205,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5200,
											"end": 5205,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5192,
											"end": 5197,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 5192,
											"end": 5197,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5189,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 5178,
											"end": 5197,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 5178,
											"end": 5197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5197,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 5178,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5205,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 5178,
											"end": 5205,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5205,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5205,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 5178,
											"end": 5205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5205,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 5178,
											"end": 5205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5156,
											"end": 5205,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5156,
											"end": 5205,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5215,
											"end": 5238,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5252,
											"end": 5257,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5252,
											"end": 5257,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5241,
											"end": 5249,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 5241,
											"end": 5249,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5241,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 5241,
											"end": 5257,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5241,
											"end": 5257,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5241,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 5241,
											"end": 5257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5241,
											"end": 5257,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 5241,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5215,
											"end": 5257,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5215,
											"end": 5257,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5359,
											"end": 5379,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5412,
											"end": 5427,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5397,
											"end": 5408,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5383,
											"end": 5394,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 5383,
											"end": 5394,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5383,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 5383,
											"end": 5408,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5383,
											"end": 5408,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5383,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 5383,
											"end": 5408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5383,
											"end": 5408,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 5383,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5382,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 5382,
											"end": 5427,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5382,
											"end": 5427,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5382,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 5382,
											"end": 5427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5382,
											"end": 5427,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 5382,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5359,
											"end": 5427,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5359,
											"end": 5427,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5453,
											"end": 5465,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5446,
											"end": 5465,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 5446,
											"end": 5465,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5446,
											"end": 5465,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5446,
											"end": 5465,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5446,
											"end": 5465,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5446,
											"end": 5465,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 5472,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 4629,
											"end": 5472,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 5472,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 5472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4399,
											"end": 4506,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 4399,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4448,
											"end": 4455,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4499,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 4491,
											"end": 4499,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4474,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 4474,
											"end": 4488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4474,
											"end": 4488,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 4474,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4474,
											"end": 4499,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 4474,
											"end": 4499,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4474,
											"end": 4499,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4474,
											"end": 4499,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 4474,
											"end": 4499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4474,
											"end": 4499,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 4474,
											"end": 4499,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4467,
											"end": 4499,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4467,
											"end": 4499,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4399,
											"end": 4506,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4399,
											"end": 4506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 639,
											"end": 658,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 639,
											"end": 658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 639,
											"end": 658,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 639,
											"end": 658,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 639,
											"end": 658,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 639,
											"end": 658,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 639,
											"end": 658,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 639,
											"end": 658,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 639,
											"end": 658,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 639,
											"end": 658,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 639,
											"end": 658,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 639,
											"end": 658,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 639,
											"end": 658,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 639,
											"end": 658,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 639,
											"end": 658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1795,
											"end": 3011,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 1795,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2045,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2024,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 2024,
											"end": 2069,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2024,
											"end": 2069,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2024,
											"end": 2069,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2024,
											"end": 2069,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2024,
											"end": 2069,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2024,
											"end": 2069,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2024,
											"end": 2069,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2024,
											"end": 2069,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2024,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 2024,
											"end": 2069,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2024,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 2024,
											"end": 2069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2024,
											"end": 2069,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 2024,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2024,
											"end": 2069,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2024,
											"end": 2069,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2024,
											"end": 2069,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2024,
											"end": 2069,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2024,
											"end": 2069,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2024,
											"end": 2069,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2024,
											"end": 2069,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2024,
											"end": 2069,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 2024,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2105,
											"end": 2106,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2087,
											"end": 2107,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2087,
											"end": 2107,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2087,
											"end": 2093,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2087,
											"end": 2107,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2087,
											"end": 2107,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2087,
											"end": 2107,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2079,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 2079,
											"end": 2133,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2079,
											"end": 2133,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2079,
											"end": 2133,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2079,
											"end": 2133,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2079,
											"end": 2133,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2079,
											"end": 2133,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2079,
											"end": 2133,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2079,
											"end": 2133,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2079,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 2079,
											"end": 2133,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2079,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 2079,
											"end": 2133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2079,
											"end": 2133,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 2079,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2079,
											"end": 2133,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2079,
											"end": 2133,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2079,
											"end": 2133,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2079,
											"end": 2133,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2079,
											"end": 2133,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2079,
											"end": 2133,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2079,
											"end": 2133,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2079,
											"end": 2133,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 2079,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2175,
											"end": 2176,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2151,
											"end": 2177,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2151,
											"end": 2177,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2151,
											"end": 2163,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2151,
											"end": 2177,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2151,
											"end": 2177,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2151,
											"end": 2177,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2143,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 2143,
											"end": 2209,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2143,
											"end": 2209,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2143,
											"end": 2209,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2143,
											"end": 2209,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2143,
											"end": 2209,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2143,
											"end": 2209,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2143,
											"end": 2209,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2143,
											"end": 2209,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2143,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 2143,
											"end": 2209,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2143,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 2143,
											"end": 2209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2143,
											"end": 2209,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 2143,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2143,
											"end": 2209,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2143,
											"end": 2209,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2143,
											"end": 2209,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2143,
											"end": 2209,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2143,
											"end": 2209,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2143,
											"end": 2209,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2143,
											"end": 2209,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2143,
											"end": 2209,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 2143,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2242,
											"end": 2243,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2227,
											"end": 2239,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2243,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 2219,
											"end": 2283,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2283,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2219,
											"end": 2283,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2283,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2219,
											"end": 2283,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2283,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2283,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2219,
											"end": 2283,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 2219,
											"end": 2283,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 2219,
											"end": 2283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2283,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 2219,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2283,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2219,
											"end": 2283,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2283,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2283,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2283,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2283,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2283,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2283,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 2219,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2313,
											"end": 2314,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2301,
											"end": 2310,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2301,
											"end": 2314,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 2293,
											"end": 2350,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2350,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2350,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2350,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2293,
											"end": 2350,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2350,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2350,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2293,
											"end": 2350,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 2293,
											"end": 2350,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 2293,
											"end": 2350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2350,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 2293,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2350,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2350,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2350,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2350,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2350,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2350,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2350,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2350,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 2293,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2378,
											"end": 2387,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2374,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2387,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2387,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 2360,
											"end": 2420,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2420,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2360,
											"end": 2420,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2420,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2360,
											"end": 2420,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2420,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2420,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2360,
											"end": 2420,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 2360,
											"end": 2420,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 2360,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2420,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 2360,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2420,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2360,
											"end": 2420,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2420,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2420,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2420,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2420,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2420,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2420,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 2360,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2456,
											"end": 2457,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2458,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2438,
											"end": 2458,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2438,
											"end": 2444,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2438,
											"end": 2458,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2438,
											"end": 2458,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2438,
											"end": 2458,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2430,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 2430,
											"end": 2484,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2430,
											"end": 2484,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2430,
											"end": 2484,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2430,
											"end": 2484,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2430,
											"end": 2484,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2430,
											"end": 2484,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2430,
											"end": 2484,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2430,
											"end": 2484,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2430,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 2430,
											"end": 2484,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2430,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 2430,
											"end": 2484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2430,
											"end": 2484,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 2430,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2430,
											"end": 2484,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2430,
											"end": 2484,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2430,
											"end": 2484,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2430,
											"end": 2484,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2430,
											"end": 2484,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2430,
											"end": 2484,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2430,
											"end": 2484,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2430,
											"end": 2484,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 2430,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2510,
											"end": 2516,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2495,
											"end": 2500,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2495,
											"end": 2500,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2495,
											"end": 2517,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2495,
											"end": 2517,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2495,
											"end": 2517,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2495,
											"end": 2517,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2495,
											"end": 2517,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2495,
											"end": 2517,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2495,
											"end": 2517,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2495,
											"end": 2517,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2495,
											"end": 2517,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2495,
											"end": 2517,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2495,
											"end": 2517,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2495,
											"end": 2517,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2495,
											"end": 2517,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2495,
											"end": 2517,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2495,
											"end": 2517,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2495,
											"end": 2517,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2495,
											"end": 2517,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2495,
											"end": 2517,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2553,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2527,
											"end": 2538,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2527,
											"end": 2538,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2527,
											"end": 2553,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2527,
											"end": 2553,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2527,
											"end": 2553,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2527,
											"end": 2553,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2527,
											"end": 2553,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2527,
											"end": 2553,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2527,
											"end": 2553,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2527,
											"end": 2553,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2527,
											"end": 2553,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2527,
											"end": 2553,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2527,
											"end": 2553,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2527,
											"end": 2553,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2527,
											"end": 2553,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2527,
											"end": 2553,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2527,
											"end": 2553,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2527,
											"end": 2553,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2527,
											"end": 2553,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2527,
											"end": 2553,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2577,
											"end": 2589,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2563,
											"end": 2574,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2563,
											"end": 2589,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2563,
											"end": 2589,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2563,
											"end": 2589,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2563,
											"end": 2589,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2604,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2599,
											"end": 2613,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2613,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2613,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2623,
											"end": 2631,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2623,
											"end": 2643,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2623,
											"end": 2643,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2623,
											"end": 2643,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2623,
											"end": 2643,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2665,
											"end": 2675,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2653,
											"end": 2662,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 2653,
											"end": 2662,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2653,
											"end": 2675,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2653,
											"end": 2675,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2653,
											"end": 2675,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2653,
											"end": 2675,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2653,
											"end": 2675,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2653,
											"end": 2675,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2653,
											"end": 2675,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2653,
											"end": 2675,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2653,
											"end": 2675,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2653,
											"end": 2675,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2653,
											"end": 2675,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2653,
											"end": 2675,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2653,
											"end": 2675,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2653,
											"end": 2675,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2653,
											"end": 2675,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2653,
											"end": 2675,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2653,
											"end": 2675,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2653,
											"end": 2675,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 2685,
											"end": 2690,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2685,
											"end": 2708,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2685,
											"end": 2708,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2685,
											"end": 2708,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2685,
											"end": 2708,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2729,
											"end": 2730,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2718,
											"end": 2726,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 2718,
											"end": 2730,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2718,
											"end": 2730,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2718,
											"end": 2730,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2718,
											"end": 2730,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2750,
											"end": 2755,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2740,
											"end": 2747,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 2740,
											"end": 2747,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2740,
											"end": 2755,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2740,
											"end": 2755,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2740,
											"end": 2755,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2740,
											"end": 2755,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2740,
											"end": 2755,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2740,
											"end": 2755,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2740,
											"end": 2755,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2740,
											"end": 2755,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2740,
											"end": 2755,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2740,
											"end": 2755,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2740,
											"end": 2755,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2740,
											"end": 2755,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2740,
											"end": 2755,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2740,
											"end": 2755,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2740,
											"end": 2755,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2740,
											"end": 2755,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2740,
											"end": 2755,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2740,
											"end": 2755,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2784,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2765,
											"end": 2777,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 2765,
											"end": 2777,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2765,
											"end": 2784,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2765,
											"end": 2784,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2765,
											"end": 2784,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2765,
											"end": 2784,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2765,
											"end": 2784,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2765,
											"end": 2784,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2765,
											"end": 2784,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2765,
											"end": 2784,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2765,
											"end": 2784,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2765,
											"end": 2784,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2765,
											"end": 2784,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2765,
											"end": 2784,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2765,
											"end": 2784,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2765,
											"end": 2784,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2765,
											"end": 2784,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2765,
											"end": 2784,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2765,
											"end": 2784,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2765,
											"end": 2784,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2795,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 2814,
											"end": 2820,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2795,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 2795,
											"end": 2821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2795,
											"end": 2821,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 2795,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2889,
											"end": 2901,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2837,
											"end": 3004,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2837,
											"end": 3004,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2875,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2837,
											"end": 3004,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2837,
											"end": 3004,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2837,
											"end": 3004,
											"name": "PUSH",
											"source": 9,
											"value": "14FC8AD8C19C2F708DDA1E872C93F682D7A3CAE234BDC2712270269F8E1D00C2"
										},
										{
											"begin": 2915,
											"end": 2927,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2941,
											"end": 2947,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2961,
											"end": 2970,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2984,
											"end": 2994,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2837,
											"end": 3004,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2837,
											"end": 3004,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2837,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 2837,
											"end": 3004,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2837,
											"end": 3004,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2837,
											"end": 3004,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2837,
											"end": 3004,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2837,
											"end": 3004,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2837,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 2837,
											"end": 3004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2837,
											"end": 3004,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 2837,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2837,
											"end": 3004,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2837,
											"end": 3004,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2837,
											"end": 3004,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2837,
											"end": 3004,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2837,
											"end": 3004,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2837,
											"end": 3004,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2837,
											"end": 3004,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 1795,
											"end": 3011,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1795,
											"end": 3011,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1795,
											"end": 3011,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1795,
											"end": 3011,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1795,
											"end": 3011,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1795,
											"end": 3011,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1795,
											"end": 3011,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1795,
											"end": 3011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3247,
											"end": 3683,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 3247,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3307,
											"end": 3314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3307,
											"end": 3314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3307,
											"end": 3314,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3307,
											"end": 3314,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3307,
											"end": 3314,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3307,
											"end": 3314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3307,
											"end": 3314,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3307,
											"end": 3314,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3307,
											"end": 3314,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3307,
											"end": 3314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3307,
											"end": 3314,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3306,
											"end": 3314,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 3298,
											"end": 3343,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3298,
											"end": 3343,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3298,
											"end": 3343,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3343,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3298,
											"end": 3343,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 3298,
											"end": 3343,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 3298,
											"end": 3343,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3343,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 3298,
											"end": 3343,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3298,
											"end": 3343,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3343,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3343,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3343,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3343,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3343,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3343,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 3298,
											"end": 3343,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3375,
											"end": 3386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3375,
											"end": 3386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3375,
											"end": 3386,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3375,
											"end": 3386,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3375,
											"end": 3386,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3375,
											"end": 3386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3375,
											"end": 3386,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3375,
											"end": 3386,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3375,
											"end": 3386,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3375,
											"end": 3386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3375,
											"end": 3386,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3361,
											"end": 3386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3361,
											"end": 3386,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3361,
											"end": 3371,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3361,
											"end": 3386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3361,
											"end": 3386,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3361,
											"end": 3386,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3361,
											"end": 3411,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3361,
											"end": 3411,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 3361,
											"end": 3411,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3361,
											"end": 3411,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3404,
											"end": 3411,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 3404,
											"end": 3409,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 3404,
											"end": 3411,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3404,
											"end": 3411,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 3404,
											"end": 3411,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3390,
											"end": 3411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3411,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3390,
											"end": 3400,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3390,
											"end": 3411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3411,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3390,
											"end": 3411,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3361,
											"end": 3411,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 3361,
											"end": 3411,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3353,
											"end": 3428,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 3353,
											"end": 3428,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3353,
											"end": 3428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3353,
											"end": 3428,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3353,
											"end": 3428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3353,
											"end": 3428,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3353,
											"end": 3428,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3353,
											"end": 3428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3353,
											"end": 3428,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3353,
											"end": 3428,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 3353,
											"end": 3428,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3353,
											"end": 3428,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 3353,
											"end": 3428,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3353,
											"end": 3428,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 3353,
											"end": 3428,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3353,
											"end": 3428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3353,
											"end": 3428,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3353,
											"end": 3428,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3353,
											"end": 3428,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3353,
											"end": 3428,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3353,
											"end": 3428,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3353,
											"end": 3428,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3353,
											"end": 3428,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 3353,
											"end": 3428,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3439,
											"end": 3457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3460,
											"end": 3478,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 3460,
											"end": 3476,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 3460,
											"end": 3478,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3460,
											"end": 3478,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 3460,
											"end": 3478,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3439,
											"end": 3478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3439,
											"end": 3478,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3509,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3496,
											"end": 3506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3510,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3488,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 3488,
											"end": 3535,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3488,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3488,
											"end": 3535,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3488,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3488,
											"end": 3535,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3488,
											"end": 3535,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3488,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3488,
											"end": 3535,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3488,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 3488,
											"end": 3535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3488,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 3488,
											"end": 3535,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3488,
											"end": 3535,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 3488,
											"end": 3535,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3488,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3488,
											"end": 3535,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3488,
											"end": 3535,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3488,
											"end": 3535,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3488,
											"end": 3535,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3488,
											"end": 3535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3488,
											"end": 3535,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3488,
											"end": 3535,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 3488,
											"end": 3535,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3558,
											"end": 3568,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3546,
											"end": 3554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3546,
											"end": 3568,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3568,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3568,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 3546,
											"end": 3568,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3568,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 3546,
											"end": 3568,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3568,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 3546,
											"end": 3568,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3568,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3568,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3568,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3568,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3568,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3568,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3568,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3578,
											"end": 3621,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 3597,
											"end": 3608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3597,
											"end": 3608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3597,
											"end": 3608,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3597,
											"end": 3608,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3597,
											"end": 3608,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3597,
											"end": 3608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3597,
											"end": 3608,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3597,
											"end": 3608,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3597,
											"end": 3608,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3597,
											"end": 3608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3597,
											"end": 3608,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3610,
											"end": 3620,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3578,
											"end": 3583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3578,
											"end": 3583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3578,
											"end": 3583,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3578,
											"end": 3583,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3578,
											"end": 3583,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3578,
											"end": 3583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3578,
											"end": 3583,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3578,
											"end": 3583,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3578,
											"end": 3583,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3578,
											"end": 3583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3578,
											"end": 3583,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3578,
											"end": 3596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3578,
											"end": 3596,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3578,
											"end": 3596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 3578,
											"end": 3596,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3578,
											"end": 3621,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3578,
											"end": 3621,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3578,
											"end": 3621,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3578,
											"end": 3621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3578,
											"end": 3621,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3578,
											"end": 3621,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3578,
											"end": 3621,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 3578,
											"end": 3621,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3652,
											"end": 3663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3652,
											"end": 3663,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3663,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3663,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3652,
											"end": 3663,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3663,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3663,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3652,
											"end": 3663,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3637,
											"end": 3676,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "C7798891864187665AC6DD119286E44EC13F014527AEEB2B8EB3FD413DF93179"
										},
										{
											"begin": 3665,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3637,
											"end": 3676,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3676,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 3637,
											"end": 3676,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3676,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3676,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 3637,
											"end": 3676,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3676,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 3637,
											"end": 3676,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3637,
											"end": 3676,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3676,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3676,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3676,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3676,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3676,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 3288,
											"end": 3683,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3247,
											"end": 3683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 612,
											"end": 633,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 612,
											"end": 633,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 612,
											"end": 633,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 612,
											"end": 633,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 633,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 612,
											"end": 633,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 612,
											"end": 633,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 612,
											"end": 633,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 612,
											"end": 633,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 612,
											"end": 633,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 612,
											"end": 633,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 612,
											"end": 633,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 612,
											"end": 633,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 612,
											"end": 633,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 612,
											"end": 633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 583,
											"end": 606,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 583,
											"end": 606,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 583,
											"end": 606,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 583,
											"end": 606,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 583,
											"end": 606,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 583,
											"end": 606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8211,
											"end": 8426,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 8211,
											"end": 8426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8325,
											"end": 8330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 8325,
											"end": 8330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8325,
											"end": 8330,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8325,
											"end": 8330,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8325,
											"end": 8330,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8325,
											"end": 8330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8325,
											"end": 8330,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 8325,
											"end": 8330,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8325,
											"end": 8330,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8325,
											"end": 8330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8325,
											"end": 8330,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8307,
											"end": 8331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8307,
											"end": 8331,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8307,
											"end": 8313,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8307,
											"end": 8331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8307,
											"end": 8331,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8307,
											"end": 8331,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8299,
											"end": 8364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 8299,
											"end": 8364,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8299,
											"end": 8364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8299,
											"end": 8364,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8299,
											"end": 8364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8299,
											"end": 8364,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8299,
											"end": 8364,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8299,
											"end": 8364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8299,
											"end": 8364,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8299,
											"end": 8364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 8299,
											"end": 8364,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8299,
											"end": 8364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 8299,
											"end": 8364,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8299,
											"end": 8364,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 8299,
											"end": 8364,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8299,
											"end": 8364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8299,
											"end": 8364,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8299,
											"end": 8364,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8299,
											"end": 8364,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8299,
											"end": 8364,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8299,
											"end": 8364,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8299,
											"end": 8364,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8299,
											"end": 8364,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 8299,
											"end": 8364,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8374,
											"end": 8419,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 8402,
											"end": 8409,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 8402,
											"end": 8407,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 8402,
											"end": 8409,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8402,
											"end": 8409,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 8402,
											"end": 8409,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8411,
											"end": 8418,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8381,
											"end": 8387,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8374,
											"end": 8401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8374,
											"end": 8401,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8374,
											"end": 8401,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 8374,
											"end": 8401,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8374,
											"end": 8419,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8374,
											"end": 8419,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8374,
											"end": 8419,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8374,
											"end": 8419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8374,
											"end": 8419,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8374,
											"end": 8419,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8374,
											"end": 8419,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 8374,
											"end": 8419,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8211,
											"end": 8426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8211,
											"end": 8426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8211,
											"end": 8426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3759,
											"end": 4260,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 3759,
											"end": 4260,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3814,
											"end": 3823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3814,
											"end": 3823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 3823,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3814,
											"end": 3823,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3814,
											"end": 3823,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3814,
											"end": 3823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3814,
											"end": 3823,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3814,
											"end": 3823,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3814,
											"end": 3823,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3814,
											"end": 3823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3814,
											"end": 3823,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3806,
											"end": 3852,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 3806,
											"end": 3852,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3806,
											"end": 3852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3806,
											"end": 3852,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3806,
											"end": 3852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3806,
											"end": 3852,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3806,
											"end": 3852,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3806,
											"end": 3852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3806,
											"end": 3852,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3806,
											"end": 3852,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 3806,
											"end": 3852,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3806,
											"end": 3852,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 3806,
											"end": 3852,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3806,
											"end": 3852,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 3806,
											"end": 3852,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3806,
											"end": 3852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3806,
											"end": 3852,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3806,
											"end": 3852,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3806,
											"end": 3852,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3806,
											"end": 3852,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3806,
											"end": 3852,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3806,
											"end": 3852,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3806,
											"end": 3852,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 3806,
											"end": 3852,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3871,
											"end": 3878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3871,
											"end": 3878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3871,
											"end": 3878,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3871,
											"end": 3878,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3871,
											"end": 3878,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3871,
											"end": 3878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3871,
											"end": 3878,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3871,
											"end": 3878,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3871,
											"end": 3878,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3871,
											"end": 3878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3871,
											"end": 3878,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3870,
											"end": 3878,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3862,
											"end": 3906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 3862,
											"end": 3906,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3862,
											"end": 3906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3862,
											"end": 3906,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3862,
											"end": 3906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3862,
											"end": 3906,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3862,
											"end": 3906,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3862,
											"end": 3906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3862,
											"end": 3906,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3862,
											"end": 3906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 3862,
											"end": 3906,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3862,
											"end": 3906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 3862,
											"end": 3906,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3862,
											"end": 3906,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 3862,
											"end": 3906,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3862,
											"end": 3906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3862,
											"end": 3906,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3862,
											"end": 3906,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3862,
											"end": 3906,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3862,
											"end": 3906,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3862,
											"end": 3906,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3862,
											"end": 3906,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3862,
											"end": 3906,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 3862,
											"end": 3906,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3927,
											"end": 3931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3917,
											"end": 3924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3917,
											"end": 3924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3917,
											"end": 3931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3917,
											"end": 3931,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3931,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3931,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3931,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3917,
											"end": 3931,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3931,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3931,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3931,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3931,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3931,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3931,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3931,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3931,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3931,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3931,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3931,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4022,
											"end": 4036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4053,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 4039,
											"end": 4051,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 4039,
											"end": 4053,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4039,
											"end": 4053,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 4039,
											"end": 4053,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4022,
											"end": 4053,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4022,
											"end": 4053,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4063,
											"end": 4079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4096,
											"end": 4102,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4082,
											"end": 4093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 4082,
											"end": 4093,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4082,
											"end": 4102,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 4082,
											"end": 4102,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4082,
											"end": 4102,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4082,
											"end": 4102,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 4082,
											"end": 4102,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4082,
											"end": 4102,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 4082,
											"end": 4102,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4063,
											"end": 4102,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4063,
											"end": 4102,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4136,
											"end": 4137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4125,
											"end": 4133,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4125,
											"end": 4137,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4121,
											"end": 4201,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4121,
											"end": 4201,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 4121,
											"end": 4201,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4153,
											"end": 4190,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 4172,
											"end": 4179,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 4172,
											"end": 4177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 4172,
											"end": 4179,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4172,
											"end": 4179,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 4172,
											"end": 4179,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4181,
											"end": 4189,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4153,
											"end": 4158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4153,
											"end": 4158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4153,
											"end": 4158,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4153,
											"end": 4158,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4153,
											"end": 4158,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4153,
											"end": 4158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4153,
											"end": 4158,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4153,
											"end": 4158,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4153,
											"end": 4158,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4153,
											"end": 4158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4153,
											"end": 4158,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4153,
											"end": 4171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4153,
											"end": 4171,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4153,
											"end": 4171,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 4153,
											"end": 4171,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4153,
											"end": 4190,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4153,
											"end": 4190,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4153,
											"end": 4190,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4153,
											"end": 4190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4153,
											"end": 4190,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4153,
											"end": 4190,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4153,
											"end": 4190,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 4153,
											"end": 4190,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4121,
											"end": 4201,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 4121,
											"end": 4201,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4231,
											"end": 4242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4231,
											"end": 4242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4231,
											"end": 4242,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4231,
											"end": 4242,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4231,
											"end": 4242,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4231,
											"end": 4242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4231,
											"end": 4242,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4231,
											"end": 4242,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4231,
											"end": 4242,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4231,
											"end": 4242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4231,
											"end": 4242,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4216,
											"end": 4253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4216,
											"end": 4253,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4216,
											"end": 4253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "57C76F5E278BFBD4EEB5207D287AA5A1A9E1113C65F7EEFA540E379A2774D13B"
										},
										{
											"begin": 4244,
											"end": 4252,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4216,
											"end": 4253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4216,
											"end": 4253,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4216,
											"end": 4253,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 4216,
											"end": 4253,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4216,
											"end": 4253,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4216,
											"end": 4253,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 4216,
											"end": 4253,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4216,
											"end": 4253,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 4216,
											"end": 4253,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4216,
											"end": 4253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4216,
											"end": 4253,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4216,
											"end": 4253,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4216,
											"end": 4253,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4216,
											"end": 4253,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4216,
											"end": 4253,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4216,
											"end": 4253,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 3796,
											"end": 4260,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3796,
											"end": 4260,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3759,
											"end": 4260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 496,
											"end": 516,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 496,
											"end": 516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 496,
											"end": 516,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 496,
											"end": 516,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 496,
											"end": 516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 496,
											"end": 516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5956,
											"end": 5970,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5980,
											"end": 6000,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6010,
											"end": 6030,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6040,
											"end": 6057,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6067,
											"end": 6081,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6091,
											"end": 6105,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6115,
											"end": 6132,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6142,
											"end": 6157,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6167,
											"end": 6180,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6226,
											"end": 6231,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6226,
											"end": 6231,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6226,
											"end": 6231,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6226,
											"end": 6231,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6226,
											"end": 6231,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6226,
											"end": 6231,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6226,
											"end": 6231,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6226,
											"end": 6231,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6226,
											"end": 6231,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6226,
											"end": 6231,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6226,
											"end": 6231,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6246,
											"end": 6257,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 6246,
											"end": 6257,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6246,
											"end": 6257,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6246,
											"end": 6257,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6246,
											"end": 6257,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6246,
											"end": 6257,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6246,
											"end": 6257,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6246,
											"end": 6257,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6246,
											"end": 6257,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6246,
											"end": 6257,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6246,
											"end": 6257,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6271,
											"end": 6282,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 6271,
											"end": 6282,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6296,
											"end": 6304,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 6296,
											"end": 6304,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6318,
											"end": 6323,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6318,
											"end": 6323,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6337,
											"end": 6342,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 6337,
											"end": 6342,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6356,
											"end": 6364,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 6356,
											"end": 6364,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6378,
											"end": 6387,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 6378,
											"end": 6387,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6378,
											"end": 6387,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6378,
											"end": 6387,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6378,
											"end": 6387,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6378,
											"end": 6387,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6378,
											"end": 6387,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6378,
											"end": 6387,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6378,
											"end": 6387,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6378,
											"end": 6387,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6378,
											"end": 6387,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6401,
											"end": 6408,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 6401,
											"end": 6408,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6401,
											"end": 6408,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6401,
											"end": 6408,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6401,
											"end": 6408,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6401,
											"end": 6408,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6401,
											"end": 6408,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6401,
											"end": 6408,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6401,
											"end": 6408,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6401,
											"end": 6408,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6401,
											"end": 6408,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6197,
											"end": 6418,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 6197,
											"end": 6418,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6197,
											"end": 6418,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 6197,
											"end": 6418,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6197,
											"end": 6418,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 6197,
											"end": 6418,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6197,
											"end": 6418,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 6197,
											"end": 6418,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6197,
											"end": 6418,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 6197,
											"end": 6418,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6197,
											"end": 6418,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 6197,
											"end": 6418,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6197,
											"end": 6418,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 6197,
											"end": 6418,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6197,
											"end": 6418,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 6197,
											"end": 6418,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6197,
											"end": 6418,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 6197,
											"end": 6418,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6425,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 6425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7913,
											"end": 8021,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 7913,
											"end": 8021,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7956,
											"end": 7960,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8006,
											"end": 8014,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 8006,
											"end": 8014,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7998,
											"end": 8003,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 7998,
											"end": 8003,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7998,
											"end": 8014,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 7998,
											"end": 8014,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7998,
											"end": 8014,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7998,
											"end": 8014,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 7998,
											"end": 8014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7998,
											"end": 8014,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 7998,
											"end": 8014,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7979,
											"end": 7994,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 7979,
											"end": 8014,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7979,
											"end": 8014,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7972,
											"end": 8014,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7972,
											"end": 8014,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7913,
											"end": 8021,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7913,
											"end": 8021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7387,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 6752,
											"end": 7387,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6812,
											"end": 6833,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6843,
											"end": 6868,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6878,
											"end": 6902,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6912,
											"end": 6932,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6942,
											"end": 6964,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6981,
											"end": 7000,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7003,
											"end": 7018,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 6981,
											"end": 7018,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6981,
											"end": 7018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7028,
											"end": 7047,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7064,
											"end": 7069,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 7064,
											"end": 7069,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7050,
											"end": 7061,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7050,
											"end": 7069,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7050,
											"end": 7095,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 7050,
											"end": 7095,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7094,
											"end": 7095,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7050,
											"end": 7095,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 7050,
											"end": 7095,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7050,
											"end": 7095,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 7050,
											"end": 7095,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7086,
											"end": 7091,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 7086,
											"end": 7091,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7072,
											"end": 7083,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7072,
											"end": 7091,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 7072,
											"end": 7091,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7072,
											"end": 7091,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7072,
											"end": 7091,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 7072,
											"end": 7091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7072,
											"end": 7091,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 7072,
											"end": 7091,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7050,
											"end": 7095,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 7050,
											"end": 7095,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7028,
											"end": 7095,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7028,
											"end": 7095,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7105,
											"end": 7126,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7151,
											"end": 7159,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 7151,
											"end": 7159,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7143,
											"end": 7148,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 7143,
											"end": 7148,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7143,
											"end": 7159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 7143,
											"end": 7159,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7143,
											"end": 7159,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7143,
											"end": 7159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 7143,
											"end": 7159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7143,
											"end": 7159,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 7143,
											"end": 7159,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7129,
											"end": 7140,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7129,
											"end": 7159,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7129,
											"end": 7196,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 7129,
											"end": 7196,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7195,
											"end": 7196,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7129,
											"end": 7196,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 7129,
											"end": 7196,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7129,
											"end": 7196,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 7129,
											"end": 7196,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7181,
											"end": 7192,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7170,
											"end": 7178,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 7170,
											"end": 7178,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7162,
											"end": 7167,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 7162,
											"end": 7167,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7162,
											"end": 7178,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 7162,
											"end": 7178,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7162,
											"end": 7178,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7162,
											"end": 7178,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 7162,
											"end": 7178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7162,
											"end": 7178,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 7162,
											"end": 7178,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7162,
											"end": 7192,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 7162,
											"end": 7192,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7162,
											"end": 7192,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7162,
											"end": 7192,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 7162,
											"end": 7192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7162,
											"end": 7192,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 7162,
											"end": 7192,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7129,
											"end": 7196,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 7129,
											"end": 7196,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7105,
											"end": 7196,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7105,
											"end": 7196,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7236,
											"end": 7250,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 7236,
											"end": 7248,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 7236,
											"end": 7250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7236,
											"end": 7250,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 7236,
											"end": 7250,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7264,
											"end": 7282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 7264,
											"end": 7280,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 7264,
											"end": 7282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7264,
											"end": 7282,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 7264,
											"end": 7282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7310,
											"end": 7318,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 7310,
											"end": 7318,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7296,
											"end": 7307,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 7296,
											"end": 7307,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7296,
											"end": 7318,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 7296,
											"end": 7318,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7296,
											"end": 7318,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7296,
											"end": 7318,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 7296,
											"end": 7318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7296,
											"end": 7318,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 7296,
											"end": 7318,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7332,
											"end": 7343,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7357,
											"end": 7370,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7215,
											"end": 7380,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 7215,
											"end": 7380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7215,
											"end": 7380,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 7215,
											"end": 7380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7215,
											"end": 7380,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 7215,
											"end": 7380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7215,
											"end": 7380,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 7215,
											"end": 7380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7215,
											"end": 7380,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 7215,
											"end": 7380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7215,
											"end": 7380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7215,
											"end": 7380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7215,
											"end": 7380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7387,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7387,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7387,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7387,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7387,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 413,
											"end": 432,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 413,
											"end": 432,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 413,
											"end": 432,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 413,
											"end": 432,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 432,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 413,
											"end": 432,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 413,
											"end": 432,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 413,
											"end": 432,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 413,
											"end": 432,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 413,
											"end": 432,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 413,
											"end": 432,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 413,
											"end": 432,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 413,
											"end": 432,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 413,
											"end": 432,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 413,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 442,
											"end": 532,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 442,
											"end": 532,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 476,
											"end": 483,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 524,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 512,
											"end": 525,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 505,
											"end": 526,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 494,
											"end": 526,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 494,
											"end": 526,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 442,
											"end": 532,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 442,
											"end": 532,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 442,
											"end": 532,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 442,
											"end": 532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 538,
											"end": 647,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 538,
											"end": 647,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 619,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 619,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 619,
											"end": 640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 619,
											"end": 640,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 619,
											"end": 640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 614,
											"end": 617,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 607,
											"end": 641,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 538,
											"end": 647,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 538,
											"end": 647,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 538,
											"end": 647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 653,
											"end": 863,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 653,
											"end": 863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 740,
											"end": 744,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 778,
											"end": 780,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 767,
											"end": 776,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 763,
											"end": 781,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 755,
											"end": 781,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 755,
											"end": 781,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 853,
											"end": 854,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 851,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 838,
											"end": 855,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 829,
											"end": 835,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 653,
											"end": 863,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 653,
											"end": 863,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 653,
											"end": 863,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 653,
											"end": 863,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 653,
											"end": 863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 869,
											"end": 995,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 869,
											"end": 995,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 906,
											"end": 913,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 946,
											"end": 988,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 939,
											"end": 944,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 935,
											"end": 989,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 924,
											"end": 989,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 924,
											"end": 989,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 869,
											"end": 995,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 869,
											"end": 995,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 869,
											"end": 995,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 869,
											"end": 995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1097,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 1001,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1038,
											"end": 1045,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 1085,
											"end": 1090,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1067,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 1067,
											"end": 1091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1067,
											"end": 1091,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 1067,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1091,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1091,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1097,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1097,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1097,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1103,
											"end": 1221,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 1103,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1190,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 1208,
											"end": 1213,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1190,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 1190,
											"end": 1214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1190,
											"end": 1214,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 1190,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1185,
											"end": 1188,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1178,
											"end": 1215,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1103,
											"end": 1221,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1103,
											"end": 1221,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1103,
											"end": 1221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1227,
											"end": 1449,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 1227,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1320,
											"end": 1324,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1360,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1347,
											"end": 1356,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1343,
											"end": 1361,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1361,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1361,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1371,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 1439,
											"end": 1440,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1424,
											"end": 1441,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1415,
											"end": 1421,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1371,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 1371,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1371,
											"end": 1442,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 1371,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1227,
											"end": 1449,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1227,
											"end": 1449,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1227,
											"end": 1449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1227,
											"end": 1449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1227,
											"end": 1449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1536,
											"end": 1653,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 1536,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1643,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1635,
											"end": 1647,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1782,
											"end": 1904,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 1782,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1855,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 1873,
											"end": 1878,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1855,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 1855,
											"end": 1879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1855,
											"end": 1879,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 1855,
											"end": 1879,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1848,
											"end": 1853,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1845,
											"end": 1880,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1835,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 1835,
											"end": 1898,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1894,
											"end": 1895,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1891,
											"end": 1892,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 1896,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1835,
											"end": 1898,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 1835,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1782,
											"end": 1904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1782,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 2049,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 1910,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1956,
											"end": 1961,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1994,
											"end": 2000,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1981,
											"end": 2001,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1972,
											"end": 2001,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1972,
											"end": 2001,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2010,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 2037,
											"end": 2042,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2010,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 2010,
											"end": 2043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2010,
											"end": 2043,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 2010,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 2049,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 2049,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 2049,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 2049,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 2049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2177,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 2055,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 2146,
											"end": 2151,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 2128,
											"end": 2152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2152,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 2128,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2121,
											"end": 2126,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 2108,
											"end": 2171,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2167,
											"end": 2168,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2164,
											"end": 2165,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2157,
											"end": 2169,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2171,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 2108,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2322,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 2183,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2229,
											"end": 2234,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2273,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2254,
											"end": 2274,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2274,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2274,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2283,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 2310,
											"end": 2315,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2283,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 2283,
											"end": 2316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2283,
											"end": 2316,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 2283,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2322,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2322,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2322,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2322,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2328,
											"end": 2444,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 2328,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2398,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 2413,
											"end": 2418,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2398,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 2398,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2398,
											"end": 2419,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 2398,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2391,
											"end": 2396,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2420,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2378,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 2378,
											"end": 2438,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2434,
											"end": 2435,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2431,
											"end": 2432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2424,
											"end": 2436,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2378,
											"end": 2438,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 2378,
											"end": 2438,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2328,
											"end": 2444,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2328,
											"end": 2444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2450,
											"end": 2583,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 2450,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2493,
											"end": 2498,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2518,
											"end": 2538,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2509,
											"end": 2538,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2509,
											"end": 2538,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2547,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 2571,
											"end": 2576,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2547,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 2547,
											"end": 2577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2547,
											"end": 2577,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 2547,
											"end": 2577,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2450,
											"end": 2583,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2450,
											"end": 2583,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2450,
											"end": 2583,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2450,
											"end": 2583,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2450,
											"end": 2583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2589,
											"end": 3786,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 2589,
											"end": 3786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2699,
											"end": 2705,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2713,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2715,
											"end": 2721,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2723,
											"end": 2729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2731,
											"end": 2737,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2739,
											"end": 2745,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2747,
											"end": 2753,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2799,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2784,
											"end": 2793,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2775,
											"end": 2782,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 2771,
											"end": 2794,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2767,
											"end": 2800,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2764,
											"end": 2884,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2764,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 2764,
											"end": 2884,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2803,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 2803,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 2803,
											"end": 2882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2803,
											"end": 2882,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 2803,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2764,
											"end": 2884,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 2764,
											"end": 2884,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2923,
											"end": 2924,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2948,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 2993,
											"end": 3000,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 2984,
											"end": 2990,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2973,
											"end": 2982,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 2969,
											"end": 2991,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2948,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 2948,
											"end": 3001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2948,
											"end": 3001,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 2948,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2938,
											"end": 3001,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 2938,
											"end": 3001,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2894,
											"end": 3011,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3050,
											"end": 3052,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 3121,
											"end": 3128,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 3112,
											"end": 3118,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3110,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 3097,
											"end": 3119,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3076,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 3076,
											"end": 3129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3076,
											"end": 3129,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 3076,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3129,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3021,
											"end": 3139,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3178,
											"end": 3180,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3204,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 3249,
											"end": 3256,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 3240,
											"end": 3246,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3229,
											"end": 3238,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 3225,
											"end": 3247,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3204,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 3204,
											"end": 3257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3204,
											"end": 3257,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 3204,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3194,
											"end": 3257,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3194,
											"end": 3257,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3149,
											"end": 3267,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3306,
											"end": 3308,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3332,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 3377,
											"end": 3384,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 3368,
											"end": 3374,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3357,
											"end": 3366,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 3353,
											"end": 3375,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3332,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 3332,
											"end": 3385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3332,
											"end": 3385,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 3332,
											"end": 3385,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3322,
											"end": 3385,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3322,
											"end": 3385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3277,
											"end": 3395,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3434,
											"end": 3437,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3461,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 3506,
											"end": 3513,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 3497,
											"end": 3503,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3486,
											"end": 3495,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 3482,
											"end": 3504,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3461,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 3461,
											"end": 3514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3461,
											"end": 3514,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 3461,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3451,
											"end": 3514,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3451,
											"end": 3514,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3405,
											"end": 3524,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3563,
											"end": 3566,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 3590,
											"end": 3640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 3632,
											"end": 3639,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3629,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3612,
											"end": 3621,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 3608,
											"end": 3630,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3590,
											"end": 3640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 3590,
											"end": 3640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3590,
											"end": 3640,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 3590,
											"end": 3640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3580,
											"end": 3640,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3580,
											"end": 3640,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3534,
											"end": 3650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3692,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 3716,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 3761,
											"end": 3768,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 3752,
											"end": 3758,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3741,
											"end": 3750,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 3737,
											"end": 3759,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3716,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 3716,
											"end": 3769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3716,
											"end": 3769,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 3716,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3660,
											"end": 3779,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2589,
											"end": 3786,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2589,
											"end": 3786,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2589,
											"end": 3786,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 2589,
											"end": 3786,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2589,
											"end": 3786,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2589,
											"end": 3786,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 2589,
											"end": 3786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2589,
											"end": 3786,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2589,
											"end": 3786,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2589,
											"end": 3786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2589,
											"end": 3786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3792,
											"end": 4266,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 3792,
											"end": 4266,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3860,
											"end": 3866,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3868,
											"end": 3874,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3917,
											"end": 3919,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3905,
											"end": 3914,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3896,
											"end": 3903,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3915,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3888,
											"end": 3920,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3885,
											"end": 4004,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3885,
											"end": 4004,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 3885,
											"end": 4004,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3923,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 3923,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 3923,
											"end": 4002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3923,
											"end": 4002,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 3923,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3885,
											"end": 4004,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 3885,
											"end": 4004,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4044,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 4113,
											"end": 4120,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4104,
											"end": 4110,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4093,
											"end": 4102,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4089,
											"end": 4111,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4068,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 4068,
											"end": 4121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4068,
											"end": 4121,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 4068,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4058,
											"end": 4121,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4058,
											"end": 4121,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4014,
											"end": 4131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4170,
											"end": 4172,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4196,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 4241,
											"end": 4248,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4238,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4221,
											"end": 4230,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4217,
											"end": 4239,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4196,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 4196,
											"end": 4249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4196,
											"end": 4249,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 4196,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4186,
											"end": 4249,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4186,
											"end": 4249,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4259,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3792,
											"end": 4266,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3792,
											"end": 4266,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3792,
											"end": 4266,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3792,
											"end": 4266,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3792,
											"end": 4266,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3792,
											"end": 4266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4272,
											"end": 5356,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 4272,
											"end": 5356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4577,
											"end": 4581,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4615,
											"end": 4618,
											"name": "PUSH",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4600,
											"end": 4619,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4592,
											"end": 4619,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4592,
											"end": 4619,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4629,
											"end": 4700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 4697,
											"end": 4698,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4695,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4682,
											"end": 4699,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4673,
											"end": 4679,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 4629,
											"end": 4700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 4629,
											"end": 4700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4629,
											"end": 4700,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 4629,
											"end": 4700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4710,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 4778,
											"end": 4780,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4767,
											"end": 4776,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4763,
											"end": 4781,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4754,
											"end": 4760,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 4710,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 4710,
											"end": 4782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4710,
											"end": 4782,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 4710,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4792,
											"end": 4864,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 4860,
											"end": 4862,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4849,
											"end": 4858,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4836,
											"end": 4842,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 4792,
											"end": 4864,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 4792,
											"end": 4864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4792,
											"end": 4864,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 4792,
											"end": 4864,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4874,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 4942,
											"end": 4944,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4931,
											"end": 4940,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4927,
											"end": 4945,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4918,
											"end": 4924,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4874,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 4874,
											"end": 4946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4874,
											"end": 4946,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 4874,
											"end": 4946,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4956,
											"end": 5029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 5024,
											"end": 5027,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 5013,
											"end": 5022,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5009,
											"end": 5028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5000,
											"end": 5006,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4956,
											"end": 5029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 4956,
											"end": 5029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4956,
											"end": 5029,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 4956,
											"end": 5029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5039,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 5107,
											"end": 5110,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 5096,
											"end": 5105,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5092,
											"end": 5111,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5083,
											"end": 5089,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5039,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 5039,
											"end": 5112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5039,
											"end": 5112,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 5039,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 5190,
											"end": 5193,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 5179,
											"end": 5188,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5175,
											"end": 5194,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5166,
											"end": 5172,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 5122,
											"end": 5195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5195,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 5122,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 5267,
											"end": 5270,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5256,
											"end": 5265,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5252,
											"end": 5271,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5243,
											"end": 5249,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 5205,
											"end": 5272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5272,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 5205,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5282,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 5344,
											"end": 5347,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5333,
											"end": 5342,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5329,
											"end": 5348,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5320,
											"end": 5326,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5282,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 5282,
											"end": 5349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5282,
											"end": 5349,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 5282,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4272,
											"end": 5356,
											"name": "SWAP11",
											"source": 10
										},
										{
											"begin": 4272,
											"end": 5356,
											"name": "SWAP10",
											"source": 10
										},
										{
											"begin": 4272,
											"end": 5356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4272,
											"end": 5356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4272,
											"end": 5356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4272,
											"end": 5356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4272,
											"end": 5356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4272,
											"end": 5356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4272,
											"end": 5356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4272,
											"end": 5356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4272,
											"end": 5356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4272,
											"end": 5356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4272,
											"end": 5356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5362,
											"end": 6026,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 5362,
											"end": 6026,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5567,
											"end": 5571,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5605,
											"end": 5608,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 5594,
											"end": 5603,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5590,
											"end": 5609,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5609,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5609,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5619,
											"end": 5690,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 5687,
											"end": 5688,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5676,
											"end": 5685,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5672,
											"end": 5689,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5663,
											"end": 5669,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5619,
											"end": 5690,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 5619,
											"end": 5690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5619,
											"end": 5690,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 5619,
											"end": 5690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5700,
											"end": 5772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 5768,
											"end": 5770,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5757,
											"end": 5766,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5753,
											"end": 5771,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5744,
											"end": 5750,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5700,
											"end": 5772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 5700,
											"end": 5772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5700,
											"end": 5772,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 5700,
											"end": 5772,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5782,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 5850,
											"end": 5852,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5839,
											"end": 5848,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5835,
											"end": 5853,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5826,
											"end": 5832,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5782,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 5782,
											"end": 5854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5782,
											"end": 5854,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 5782,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5864,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 5932,
											"end": 5934,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5921,
											"end": 5930,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5917,
											"end": 5935,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5908,
											"end": 5914,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5864,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 5864,
											"end": 5936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5864,
											"end": 5936,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 5864,
											"end": 5936,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5946,
											"end": 6019,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 6014,
											"end": 6017,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 6003,
											"end": 6012,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6018,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5990,
											"end": 5996,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5946,
											"end": 6019,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 5946,
											"end": 6019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5946,
											"end": 6019,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 5946,
											"end": 6019,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5362,
											"end": 6026,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 5362,
											"end": 6026,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 5362,
											"end": 6026,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5362,
											"end": 6026,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5362,
											"end": 6026,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5362,
											"end": 6026,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5362,
											"end": 6026,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5362,
											"end": 6026,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5362,
											"end": 6026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6032,
											"end": 6361,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 6032,
											"end": 6361,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6091,
											"end": 6097,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6140,
											"end": 6142,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6128,
											"end": 6137,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6119,
											"end": 6126,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6115,
											"end": 6138,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6111,
											"end": 6143,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6108,
											"end": 6227,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6108,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 6108,
											"end": 6227,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6146,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 6146,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 6146,
											"end": 6225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6146,
											"end": 6225,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 6146,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6108,
											"end": 6227,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 6108,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6266,
											"end": 6267,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6327,
											"end": 6333,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6316,
											"end": 6325,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6312,
											"end": 6334,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 6291,
											"end": 6344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6344,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 6291,
											"end": 6344,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6281,
											"end": 6344,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6281,
											"end": 6344,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6237,
											"end": 6354,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6032,
											"end": 6361,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6032,
											"end": 6361,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6032,
											"end": 6361,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6032,
											"end": 6361,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6032,
											"end": 6361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6367,
											"end": 6427,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 6367,
											"end": 6427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6395,
											"end": 6398,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6416,
											"end": 6421,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6367,
											"end": 6427,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6367,
											"end": 6427,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6367,
											"end": 6427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6367,
											"end": 6427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6433,
											"end": 6575,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 6433,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6483,
											"end": 6492,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6516,
											"end": 6569,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 6534,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 6543,
											"end": 6567,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 6561,
											"end": 6566,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6543,
											"end": 6567,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 6543,
											"end": 6567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6543,
											"end": 6567,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 6543,
											"end": 6567,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6534,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 6534,
											"end": 6568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6534,
											"end": 6568,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 6534,
											"end": 6568,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6516,
											"end": 6569,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 6516,
											"end": 6569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6516,
											"end": 6569,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 6516,
											"end": 6569,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6503,
											"end": 6569,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6503,
											"end": 6569,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6433,
											"end": 6575,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6433,
											"end": 6575,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6433,
											"end": 6575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6433,
											"end": 6575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6581,
											"end": 6707,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 6581,
											"end": 6707,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6631,
											"end": 6640,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6664,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 6695,
											"end": 6700,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6664,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 6664,
											"end": 6701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6664,
											"end": 6701,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 6664,
											"end": 6701,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6651,
											"end": 6701,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6651,
											"end": 6701,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6581,
											"end": 6707,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6581,
											"end": 6707,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6581,
											"end": 6707,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6581,
											"end": 6707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6713,
											"end": 6853,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 6713,
											"end": 6853,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6777,
											"end": 6786,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 6841,
											"end": 6846,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6810,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 6810,
											"end": 6847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6810,
											"end": 6847,
											"name": "tag",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 6810,
											"end": 6847,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6797,
											"end": 6847,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6797,
											"end": 6847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6713,
											"end": 6853,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6713,
											"end": 6853,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6713,
											"end": 6853,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6713,
											"end": 6853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6859,
											"end": 7018,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 6859,
											"end": 7018,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6960,
											"end": 7011,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 7005,
											"end": 7010,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6960,
											"end": 7011,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 6960,
											"end": 7011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6960,
											"end": 7011,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 6960,
											"end": 7011,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6955,
											"end": 6958,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6948,
											"end": 7012,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6859,
											"end": 7018,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6859,
											"end": 7018,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6859,
											"end": 7018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7024,
											"end": 7274,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 7024,
											"end": 7274,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7131,
											"end": 7135,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7169,
											"end": 7171,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7158,
											"end": 7167,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7154,
											"end": 7172,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7146,
											"end": 7172,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7146,
											"end": 7172,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7182,
											"end": 7267,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 7264,
											"end": 7265,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7253,
											"end": 7262,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7249,
											"end": 7266,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7240,
											"end": 7246,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7182,
											"end": 7267,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 7182,
											"end": 7267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7182,
											"end": 7267,
											"name": "tag",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 7182,
											"end": 7267,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7024,
											"end": 7274,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7024,
											"end": 7274,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7024,
											"end": 7274,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7024,
											"end": 7274,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7024,
											"end": 7274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7280,
											"end": 7460,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 7280,
											"end": 7460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7328,
											"end": 7405,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7318,
											"end": 7406,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7425,
											"end": 7429,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 7422,
											"end": 7423,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7415,
											"end": 7430,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7449,
											"end": 7453,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7446,
											"end": 7447,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7439,
											"end": 7454,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7466,
											"end": 7657,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 7466,
											"end": 7657,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7506,
											"end": 7509,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7525,
											"end": 7545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 7543,
											"end": 7544,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7525,
											"end": 7545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 7525,
											"end": 7545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7525,
											"end": 7545,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 7525,
											"end": 7545,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7520,
											"end": 7545,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7520,
											"end": 7545,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7559,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 7577,
											"end": 7578,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7559,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 7559,
											"end": 7579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7559,
											"end": 7579,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 7559,
											"end": 7579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7554,
											"end": 7579,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7554,
											"end": 7579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7602,
											"end": 7603,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7599,
											"end": 7600,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7595,
											"end": 7604,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7588,
											"end": 7604,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7588,
											"end": 7604,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7623,
											"end": 7626,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7620,
											"end": 7621,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7617,
											"end": 7627,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7614,
											"end": 7650,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7614,
											"end": 7650,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 7614,
											"end": 7650,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7630,
											"end": 7648,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 7630,
											"end": 7648,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 7630,
											"end": 7648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7630,
											"end": 7648,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 7630,
											"end": 7648,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7614,
											"end": 7650,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 7614,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7466,
											"end": 7657,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7466,
											"end": 7657,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7466,
											"end": 7657,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7466,
											"end": 7657,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7466,
											"end": 7657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7663,
											"end": 7857,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 7663,
											"end": 7857,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7703,
											"end": 7707,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7723,
											"end": 7743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 7741,
											"end": 7742,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7723,
											"end": 7743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 7723,
											"end": 7743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7723,
											"end": 7743,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 7723,
											"end": 7743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7718,
											"end": 7743,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7718,
											"end": 7743,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 7775,
											"end": 7776,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 7757,
											"end": 7777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7752,
											"end": 7777,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7752,
											"end": 7777,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7801,
											"end": 7802,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7798,
											"end": 7799,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7794,
											"end": 7803,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7786,
											"end": 7803,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7786,
											"end": 7803,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7825,
											"end": 7826,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7819,
											"end": 7823,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7816,
											"end": 7827,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7813,
											"end": 7850,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7813,
											"end": 7850,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 7813,
											"end": 7850,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7830,
											"end": 7848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 7830,
											"end": 7848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 7830,
											"end": 7848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7830,
											"end": 7848,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 7830,
											"end": 7848,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7813,
											"end": 7850,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 7813,
											"end": 7850,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7663,
											"end": 7857,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7663,
											"end": 7857,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7663,
											"end": 7857,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7663,
											"end": 7857,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7663,
											"end": 7857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7863,
											"end": 8273,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 7863,
											"end": 8273,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7903,
											"end": 7910,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7926,
											"end": 7946,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 7944,
											"end": 7945,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7926,
											"end": 7946,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 7926,
											"end": 7946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7926,
											"end": 7946,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 7926,
											"end": 7946,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7960,
											"end": 7980,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 7978,
											"end": 7979,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7960,
											"end": 7980,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 7960,
											"end": 7980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7960,
											"end": 7980,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 7960,
											"end": 7980,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7955,
											"end": 7980,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7955,
											"end": 7980,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8015,
											"end": 8016,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8012,
											"end": 8013,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8008,
											"end": 8017,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8037,
											"end": 8067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 8055,
											"end": 8066,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8037,
											"end": 8067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 8037,
											"end": 8067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8037,
											"end": 8067,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 8037,
											"end": 8067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8026,
											"end": 8067,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8026,
											"end": 8067,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8216,
											"end": 8217,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8207,
											"end": 8214,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8203,
											"end": 8218,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8201,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8197,
											"end": 8219,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 8177,
											"end": 8178,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8170,
											"end": 8179,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8150,
											"end": 8233,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 8127,
											"end": 8266,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 8127,
											"end": 8266,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8246,
											"end": 8264,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 8246,
											"end": 8264,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 8246,
											"end": 8264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8246,
											"end": 8264,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 8246,
											"end": 8264,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8127,
											"end": 8266,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 8127,
											"end": 8266,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7911,
											"end": 8273,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7863,
											"end": 8273,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7863,
											"end": 8273,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7863,
											"end": 8273,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7863,
											"end": 8273,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7863,
											"end": 8273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8279,
											"end": 8459,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 8279,
											"end": 8459,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8327,
											"end": 8404,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8324,
											"end": 8325,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8405,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8424,
											"end": 8428,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 8421,
											"end": 8422,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8414,
											"end": 8429,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8448,
											"end": 8452,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8445,
											"end": 8446,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8438,
											"end": 8453,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8465,
											"end": 8650,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 8465,
											"end": 8650,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8505,
											"end": 8506,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8522,
											"end": 8542,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 8540,
											"end": 8541,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8522,
											"end": 8542,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 8522,
											"end": 8542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8522,
											"end": 8542,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 8522,
											"end": 8542,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8517,
											"end": 8542,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8517,
											"end": 8542,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8556,
											"end": 8576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 8574,
											"end": 8575,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8556,
											"end": 8576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 8556,
											"end": 8576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8556,
											"end": 8576,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 8556,
											"end": 8576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8551,
											"end": 8576,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8551,
											"end": 8576,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8595,
											"end": 8596,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8585,
											"end": 8620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 8585,
											"end": 8620,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8600,
											"end": 8618,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 8600,
											"end": 8618,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 8600,
											"end": 8618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8600,
											"end": 8618,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 8600,
											"end": 8618,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8585,
											"end": 8620,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 8585,
											"end": 8620,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8642,
											"end": 8643,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8639,
											"end": 8640,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8635,
											"end": 8644,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8630,
											"end": 8644,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8630,
											"end": 8644,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8465,
											"end": 8650,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8465,
											"end": 8650,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8465,
											"end": 8650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8465,
											"end": 8650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8465,
											"end": 8650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8656,
											"end": 8825,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 8656,
											"end": 8825,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8740,
											"end": 8751,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8774,
											"end": 8780,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8769,
											"end": 8772,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8762,
											"end": 8781,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8814,
											"end": 8818,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8809,
											"end": 8812,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8805,
											"end": 8819,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8790,
											"end": 8819,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8790,
											"end": 8819,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8656,
											"end": 8825,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8656,
											"end": 8825,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8656,
											"end": 8825,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8656,
											"end": 8825,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8656,
											"end": 8825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8831,
											"end": 9000,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 8831,
											"end": 9000,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8971,
											"end": 8992,
											"name": "PUSH",
											"source": 10,
											"value": "416C726561647920696E697469616C697A656400000000000000000000000000"
										},
										{
											"begin": 8967,
											"end": 8968,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8959,
											"end": 8965,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8955,
											"end": 8969,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8948,
											"end": 8993,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8831,
											"end": 9000,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8831,
											"end": 9000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9006,
											"end": 9372,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 9006,
											"end": 9372,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9148,
											"end": 9151,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9169,
											"end": 9236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 9233,
											"end": 9235,
											"name": "PUSH",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 9228,
											"end": 9231,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9169,
											"end": 9236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 9169,
											"end": 9236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9169,
											"end": 9236,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 9169,
											"end": 9236,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9162,
											"end": 9236,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9162,
											"end": 9236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9245,
											"end": 9338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 9334,
											"end": 9337,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9245,
											"end": 9338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 9245,
											"end": 9338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9245,
											"end": 9338,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 9245,
											"end": 9338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9363,
											"end": 9365,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9358,
											"end": 9361,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9354,
											"end": 9366,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9347,
											"end": 9366,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9347,
											"end": 9366,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9006,
											"end": 9372,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9006,
											"end": 9372,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9006,
											"end": 9372,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9006,
											"end": 9372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9378,
											"end": 9797,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 9378,
											"end": 9797,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9544,
											"end": 9548,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9582,
											"end": 9584,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9571,
											"end": 9580,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9567,
											"end": 9585,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9559,
											"end": 9585,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9559,
											"end": 9585,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9631,
											"end": 9640,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9625,
											"end": 9629,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9621,
											"end": 9641,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9617,
											"end": 9618,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9606,
											"end": 9615,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9602,
											"end": 9619,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9595,
											"end": 9642,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9659,
											"end": 9790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 9785,
											"end": 9789,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9659,
											"end": 9790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 9659,
											"end": 9790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9659,
											"end": 9790,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 9659,
											"end": 9790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9651,
											"end": 9790,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9651,
											"end": 9790,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9378,
											"end": 9797,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9378,
											"end": 9797,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9378,
											"end": 9797,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9378,
											"end": 9797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9803,
											"end": 9974,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 9803,
											"end": 9974,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9943,
											"end": 9966,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C696420746F6B656E20616464726573730000000000000000000000"
										},
										{
											"begin": 9939,
											"end": 9940,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9931,
											"end": 9937,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9927,
											"end": 9941,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9920,
											"end": 9967,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9803,
											"end": 9974,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9803,
											"end": 9974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9980,
											"end": 10346,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 9980,
											"end": 10346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10122,
											"end": 10125,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10143,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 10207,
											"end": 10209,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 10202,
											"end": 10205,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10143,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 10143,
											"end": 10210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10143,
											"end": 10210,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 10143,
											"end": 10210,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10136,
											"end": 10210,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10136,
											"end": 10210,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10219,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 10308,
											"end": 10311,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10219,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 10219,
											"end": 10312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10219,
											"end": 10312,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 10219,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10337,
											"end": 10339,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10332,
											"end": 10335,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10328,
											"end": 10340,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10321,
											"end": 10340,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10321,
											"end": 10340,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9980,
											"end": 10346,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9980,
											"end": 10346,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9980,
											"end": 10346,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9980,
											"end": 10346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10352,
											"end": 10771,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 10352,
											"end": 10771,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10518,
											"end": 10522,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10556,
											"end": 10558,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10545,
											"end": 10554,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10541,
											"end": 10559,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10533,
											"end": 10559,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10533,
											"end": 10559,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10605,
											"end": 10614,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10599,
											"end": 10603,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10595,
											"end": 10615,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10591,
											"end": 10592,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10580,
											"end": 10589,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10576,
											"end": 10593,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10569,
											"end": 10616,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10633,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 10759,
											"end": 10763,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10633,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 10633,
											"end": 10764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10633,
											"end": 10764,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 10633,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10625,
											"end": 10764,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10625,
											"end": 10764,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10352,
											"end": 10771,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10352,
											"end": 10771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10352,
											"end": 10771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10352,
											"end": 10771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10777,
											"end": 10954,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 10777,
											"end": 10954,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10917,
											"end": 10946,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C69642062656E656669636961727920616464726573730000000000"
										},
										{
											"begin": 10913,
											"end": 10914,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10905,
											"end": 10911,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10901,
											"end": 10915,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10894,
											"end": 10947,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10777,
											"end": 10954,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10777,
											"end": 10954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10960,
											"end": 11326,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 10960,
											"end": 11326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11102,
											"end": 11105,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11123,
											"end": 11190,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 11187,
											"end": 11189,
											"name": "PUSH",
											"source": 10,
											"value": "1B"
										},
										{
											"begin": 11182,
											"end": 11185,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11123,
											"end": 11190,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 11123,
											"end": 11190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11123,
											"end": 11190,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 11123,
											"end": 11190,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11116,
											"end": 11190,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11116,
											"end": 11190,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11199,
											"end": 11292,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 11288,
											"end": 11291,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11199,
											"end": 11292,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 11199,
											"end": 11292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11199,
											"end": 11292,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 11199,
											"end": 11292,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11317,
											"end": 11319,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11312,
											"end": 11315,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11308,
											"end": 11320,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11301,
											"end": 11320,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11301,
											"end": 11320,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10960,
											"end": 11326,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10960,
											"end": 11326,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10960,
											"end": 11326,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10960,
											"end": 11326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11332,
											"end": 11751,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 11332,
											"end": 11751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11498,
											"end": 11502,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11536,
											"end": 11538,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11525,
											"end": 11534,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11521,
											"end": 11539,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11513,
											"end": 11539,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11513,
											"end": 11539,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11585,
											"end": 11594,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11579,
											"end": 11583,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11575,
											"end": 11595,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11571,
											"end": 11572,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11560,
											"end": 11569,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11556,
											"end": 11573,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11549,
											"end": 11596,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11613,
											"end": 11744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 11739,
											"end": 11743,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11613,
											"end": 11744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 11613,
											"end": 11744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11613,
											"end": 11744,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 11613,
											"end": 11744,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11605,
											"end": 11744,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11605,
											"end": 11744,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11332,
											"end": 11751,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11332,
											"end": 11751,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11332,
											"end": 11751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11332,
											"end": 11751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11757,
											"end": 11979,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 11757,
											"end": 11979,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11897,
											"end": 11931,
											"name": "PUSH",
											"source": 10,
											"value": "546F74616C20616D6F756E74206D757374206265206772656174657220746861"
										},
										{
											"begin": 11893,
											"end": 11894,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11885,
											"end": 11891,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11881,
											"end": 11895,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11874,
											"end": 11932,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11966,
											"end": 11971,
											"name": "PUSH",
											"source": 10,
											"value": "6E20300000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11961,
											"end": 11963,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11953,
											"end": 11959,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11949,
											"end": 11964,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11942,
											"end": 11972,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11757,
											"end": 11979,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11757,
											"end": 11979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11985,
											"end": 12351,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 11985,
											"end": 12351,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12127,
											"end": 12130,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12148,
											"end": 12215,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 12212,
											"end": 12214,
											"name": "PUSH",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 12207,
											"end": 12210,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12148,
											"end": 12215,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 12148,
											"end": 12215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12148,
											"end": 12215,
											"name": "tag",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 12148,
											"end": 12215,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12141,
											"end": 12215,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12141,
											"end": 12215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12224,
											"end": 12317,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 12313,
											"end": 12316,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12224,
											"end": 12317,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 12224,
											"end": 12317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12224,
											"end": 12317,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 12224,
											"end": 12317,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12342,
											"end": 12344,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12337,
											"end": 12340,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12333,
											"end": 12345,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12326,
											"end": 12345,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12326,
											"end": 12345,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11985,
											"end": 12351,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11985,
											"end": 12351,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11985,
											"end": 12351,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11985,
											"end": 12351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12357,
											"end": 12776,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 12357,
											"end": 12776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12523,
											"end": 12527,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12561,
											"end": 12563,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12550,
											"end": 12559,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12546,
											"end": 12564,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12538,
											"end": 12564,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12538,
											"end": 12564,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12610,
											"end": 12619,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12604,
											"end": 12608,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12600,
											"end": 12620,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12596,
											"end": 12597,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12585,
											"end": 12594,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12581,
											"end": 12598,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12574,
											"end": 12621,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12638,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 12764,
											"end": 12768,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12638,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 12638,
											"end": 12769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12638,
											"end": 12769,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 12638,
											"end": 12769,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12630,
											"end": 12769,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12630,
											"end": 12769,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12357,
											"end": 12776,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12357,
											"end": 12776,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12357,
											"end": 12776,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12357,
											"end": 12776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12782,
											"end": 12963,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 12782,
											"end": 12963,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12922,
											"end": 12955,
											"name": "PUSH",
											"source": 10,
											"value": "4475726174696F6E206D7573742062652067726561746572207468616E203000"
										},
										{
											"begin": 12918,
											"end": 12919,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12910,
											"end": 12916,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12906,
											"end": 12920,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12899,
											"end": 12956,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12782,
											"end": 12963,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12782,
											"end": 12963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12969,
											"end": 13335,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 12969,
											"end": 13335,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13111,
											"end": 13114,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13132,
											"end": 13199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 13196,
											"end": 13198,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 13191,
											"end": 13194,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13132,
											"end": 13199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 13132,
											"end": 13199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13132,
											"end": 13199,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 13132,
											"end": 13199,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13125,
											"end": 13199,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13125,
											"end": 13199,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13208,
											"end": 13301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 13297,
											"end": 13300,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13208,
											"end": 13301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 13208,
											"end": 13301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13208,
											"end": 13301,
											"name": "tag",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 13208,
											"end": 13301,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13326,
											"end": 13328,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13321,
											"end": 13324,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13317,
											"end": 13329,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13310,
											"end": 13329,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13310,
											"end": 13329,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12969,
											"end": 13335,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12969,
											"end": 13335,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12969,
											"end": 13335,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12969,
											"end": 13335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13341,
											"end": 13760,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 13341,
											"end": 13760,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13507,
											"end": 13511,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13545,
											"end": 13547,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13534,
											"end": 13543,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13530,
											"end": 13548,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13522,
											"end": 13548,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13522,
											"end": 13548,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13594,
											"end": 13603,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13588,
											"end": 13592,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13584,
											"end": 13604,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13580,
											"end": 13581,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13569,
											"end": 13578,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13565,
											"end": 13582,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13558,
											"end": 13605,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13622,
											"end": 13753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 13748,
											"end": 13752,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13622,
											"end": 13753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 13622,
											"end": 13753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13622,
											"end": 13753,
											"name": "tag",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 13622,
											"end": 13753,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13614,
											"end": 13753,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13614,
											"end": 13753,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13341,
											"end": 13760,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13341,
											"end": 13760,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13341,
											"end": 13760,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13341,
											"end": 13760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13766,
											"end": 13944,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 13766,
											"end": 13944,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13906,
											"end": 13936,
											"name": "PUSH",
											"source": 10,
											"value": "436C6966662063616E6E6F7420657863656564206475726174696F6E00000000"
										},
										{
											"begin": 13902,
											"end": 13903,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13894,
											"end": 13900,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13890,
											"end": 13904,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13883,
											"end": 13937,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13766,
											"end": 13944,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13766,
											"end": 13944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13950,
											"end": 14316,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 13950,
											"end": 14316,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14092,
											"end": 14095,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14113,
											"end": 14180,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 14177,
											"end": 14179,
											"name": "PUSH",
											"source": 10,
											"value": "1C"
										},
										{
											"begin": 14172,
											"end": 14175,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14113,
											"end": 14180,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 14113,
											"end": 14180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14113,
											"end": 14180,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 14113,
											"end": 14180,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14106,
											"end": 14180,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14106,
											"end": 14180,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14189,
											"end": 14282,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 14278,
											"end": 14281,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14189,
											"end": 14282,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 14189,
											"end": 14282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14189,
											"end": 14282,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 14189,
											"end": 14282,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14307,
											"end": 14309,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14302,
											"end": 14305,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14298,
											"end": 14310,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14291,
											"end": 14310,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14291,
											"end": 14310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13950,
											"end": 14316,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13950,
											"end": 14316,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13950,
											"end": 14316,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13950,
											"end": 14316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14322,
											"end": 14741,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 14322,
											"end": 14741,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14488,
											"end": 14492,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14526,
											"end": 14528,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14515,
											"end": 14524,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14511,
											"end": 14529,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14503,
											"end": 14529,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14503,
											"end": 14529,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14575,
											"end": 14584,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14569,
											"end": 14573,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14565,
											"end": 14585,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14561,
											"end": 14562,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14550,
											"end": 14559,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14546,
											"end": 14563,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14539,
											"end": 14586,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14603,
											"end": 14734,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 14729,
											"end": 14733,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14603,
											"end": 14734,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 14603,
											"end": 14734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14603,
											"end": 14734,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 14603,
											"end": 14734,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14595,
											"end": 14734,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14595,
											"end": 14734,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14322,
											"end": 14741,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14322,
											"end": 14741,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14322,
											"end": 14741,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14322,
											"end": 14741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14747,
											"end": 14918,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 14747,
											"end": 14918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14887,
											"end": 14910,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C6964206F776E657220616464726573730000000000000000000000"
										},
										{
											"begin": 14883,
											"end": 14884,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14875,
											"end": 14881,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14871,
											"end": 14885,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14864,
											"end": 14911,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14747,
											"end": 14918,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14747,
											"end": 14918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14924,
											"end": 15290,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 14924,
											"end": 15290,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15066,
											"end": 15069,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15087,
											"end": 15154,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 15151,
											"end": 15153,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 15146,
											"end": 15149,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15087,
											"end": 15154,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 15087,
											"end": 15154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15087,
											"end": 15154,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 15087,
											"end": 15154,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15080,
											"end": 15154,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15080,
											"end": 15154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15163,
											"end": 15256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 15252,
											"end": 15255,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15163,
											"end": 15256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 15163,
											"end": 15256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15163,
											"end": 15256,
											"name": "tag",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 15163,
											"end": 15256,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15281,
											"end": 15283,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15276,
											"end": 15279,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15272,
											"end": 15284,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15265,
											"end": 15284,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15265,
											"end": 15284,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14924,
											"end": 15290,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14924,
											"end": 15290,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14924,
											"end": 15290,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14924,
											"end": 15290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15296,
											"end": 15715,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 15296,
											"end": 15715,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15462,
											"end": 15466,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15500,
											"end": 15502,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15489,
											"end": 15498,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15485,
											"end": 15503,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15477,
											"end": 15503,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15477,
											"end": 15503,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15549,
											"end": 15558,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15543,
											"end": 15547,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15539,
											"end": 15559,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15535,
											"end": 15536,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15524,
											"end": 15533,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15520,
											"end": 15537,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15513,
											"end": 15560,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15577,
											"end": 15708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 15703,
											"end": 15707,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15577,
											"end": 15708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 15577,
											"end": 15708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15577,
											"end": 15708,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 15577,
											"end": 15708,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15569,
											"end": 15708,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15569,
											"end": 15708,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15296,
											"end": 15715,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15296,
											"end": 15715,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15296,
											"end": 15715,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15296,
											"end": 15715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15721,
											"end": 16262,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 15721,
											"end": 16262,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15892,
											"end": 15896,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15930,
											"end": 15933,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 15919,
											"end": 15928,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15915,
											"end": 15934,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15907,
											"end": 15934,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15907,
											"end": 15934,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15944,
											"end": 16015,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 16012,
											"end": 16013,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16001,
											"end": 16010,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15997,
											"end": 16014,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15988,
											"end": 15994,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 15944,
											"end": 16015,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 15944,
											"end": 16015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15944,
											"end": 16015,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 15944,
											"end": 16015,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16025,
											"end": 16097,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 16093,
											"end": 16095,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16082,
											"end": 16091,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16078,
											"end": 16096,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16069,
											"end": 16075,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 16025,
											"end": 16097,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 16025,
											"end": 16097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16025,
											"end": 16097,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 16025,
											"end": 16097,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16107,
											"end": 16179,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 16175,
											"end": 16177,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16164,
											"end": 16173,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16160,
											"end": 16178,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16151,
											"end": 16157,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16107,
											"end": 16179,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 16107,
											"end": 16179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16107,
											"end": 16179,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 16107,
											"end": 16179,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16189,
											"end": 16255,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 16251,
											"end": 16253,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 16240,
											"end": 16249,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16236,
											"end": 16254,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16227,
											"end": 16233,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16189,
											"end": 16255,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 16189,
											"end": 16255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16189,
											"end": 16255,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 16189,
											"end": 16255,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15721,
											"end": 16262,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 15721,
											"end": 16262,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 15721,
											"end": 16262,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15721,
											"end": 16262,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15721,
											"end": 16262,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15721,
											"end": 16262,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15721,
											"end": 16262,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15721,
											"end": 16262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16268,
											"end": 16442,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 16268,
											"end": 16442,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16408,
											"end": 16434,
											"name": "PUSH",
											"source": 10,
											"value": "56657374696E6720686173206265656E207265766F6B65640000000000000000"
										},
										{
											"begin": 16404,
											"end": 16405,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16396,
											"end": 16402,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16392,
											"end": 16406,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16385,
											"end": 16435,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16268,
											"end": 16442,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16268,
											"end": 16442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16448,
											"end": 16814,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 16448,
											"end": 16814,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16590,
											"end": 16593,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16611,
											"end": 16678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 16675,
											"end": 16677,
											"name": "PUSH",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 16670,
											"end": 16673,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16611,
											"end": 16678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 16611,
											"end": 16678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16611,
											"end": 16678,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 16611,
											"end": 16678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16604,
											"end": 16678,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16604,
											"end": 16678,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16687,
											"end": 16780,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 16776,
											"end": 16779,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16687,
											"end": 16780,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 16687,
											"end": 16780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16687,
											"end": 16780,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 16687,
											"end": 16780,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16805,
											"end": 16807,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16800,
											"end": 16803,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16796,
											"end": 16808,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16789,
											"end": 16808,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16789,
											"end": 16808,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16448,
											"end": 16814,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16448,
											"end": 16814,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16448,
											"end": 16814,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16448,
											"end": 16814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16820,
											"end": 17239,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 16820,
											"end": 17239,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16986,
											"end": 16990,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17024,
											"end": 17026,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17013,
											"end": 17022,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17009,
											"end": 17027,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17001,
											"end": 17027,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17001,
											"end": 17027,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17073,
											"end": 17082,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17067,
											"end": 17071,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17063,
											"end": 17083,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17059,
											"end": 17060,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17048,
											"end": 17057,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17044,
											"end": 17061,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17037,
											"end": 17084,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17101,
											"end": 17232,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 17227,
											"end": 17231,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17101,
											"end": 17232,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 17101,
											"end": 17232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17101,
											"end": 17232,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 17101,
											"end": 17232,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17093,
											"end": 17232,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17093,
											"end": 17232,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16820,
											"end": 17239,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16820,
											"end": 17239,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16820,
											"end": 17239,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16820,
											"end": 17239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17385,
											"end": 17399,
											"name": "PUSH",
											"source": 10,
											"value": "556E617574686F72697A65640000000000000000000000000000000000000000"
										},
										{
											"begin": 17381,
											"end": 17382,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17373,
											"end": 17379,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17369,
											"end": 17383,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17362,
											"end": 17400,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17245,
											"end": 17407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17413,
											"end": 17779,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 17413,
											"end": 17779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17555,
											"end": 17558,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17576,
											"end": 17643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 17640,
											"end": 17642,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 17635,
											"end": 17638,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17576,
											"end": 17643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 17576,
											"end": 17643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17576,
											"end": 17643,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 17576,
											"end": 17643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17569,
											"end": 17643,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17569,
											"end": 17643,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17652,
											"end": 17745,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 17741,
											"end": 17744,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17652,
											"end": 17745,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 17652,
											"end": 17745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17652,
											"end": 17745,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 17652,
											"end": 17745,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17770,
											"end": 17772,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17765,
											"end": 17768,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17761,
											"end": 17773,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17754,
											"end": 17773,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17754,
											"end": 17773,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17413,
											"end": 17779,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17413,
											"end": 17779,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17413,
											"end": 17779,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17413,
											"end": 17779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17785,
											"end": 18204,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 17785,
											"end": 18204,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17951,
											"end": 17955,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17989,
											"end": 17991,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17978,
											"end": 17987,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17974,
											"end": 17992,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17966,
											"end": 17992,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17966,
											"end": 17992,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18038,
											"end": 18047,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18032,
											"end": 18036,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18028,
											"end": 18048,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18024,
											"end": 18025,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18013,
											"end": 18022,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18009,
											"end": 18026,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18002,
											"end": 18049,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18066,
											"end": 18197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 18192,
											"end": 18196,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18066,
											"end": 18197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 18066,
											"end": 18197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18066,
											"end": 18197,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 18066,
											"end": 18197,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18058,
											"end": 18197,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18058,
											"end": 18197,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17785,
											"end": 18204,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17785,
											"end": 18204,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17785,
											"end": 18204,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17785,
											"end": 18204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18210,
											"end": 18380,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 18210,
											"end": 18380,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18350,
											"end": 18372,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F20746F6B656E7320746F2072656C65617365000000000000000000000000"
										},
										{
											"begin": 18346,
											"end": 18347,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18338,
											"end": 18344,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18334,
											"end": 18348,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18327,
											"end": 18373,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18210,
											"end": 18380,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18210,
											"end": 18380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18386,
											"end": 18752,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 18386,
											"end": 18752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18528,
											"end": 18531,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18549,
											"end": 18616,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 18613,
											"end": 18615,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 18608,
											"end": 18611,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18549,
											"end": 18616,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 18549,
											"end": 18616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18549,
											"end": 18616,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 18549,
											"end": 18616,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18542,
											"end": 18616,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18542,
											"end": 18616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18625,
											"end": 18718,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 18714,
											"end": 18717,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18625,
											"end": 18718,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 18625,
											"end": 18718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18625,
											"end": 18718,
											"name": "tag",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 18625,
											"end": 18718,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18743,
											"end": 18745,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18738,
											"end": 18741,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18734,
											"end": 18746,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18727,
											"end": 18746,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18727,
											"end": 18746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18386,
											"end": 18752,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18386,
											"end": 18752,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18386,
											"end": 18752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18386,
											"end": 18752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18758,
											"end": 19177,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 18758,
											"end": 19177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18924,
											"end": 18928,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18962,
											"end": 18964,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18951,
											"end": 18960,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18947,
											"end": 18965,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18939,
											"end": 18965,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18939,
											"end": 18965,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19011,
											"end": 19020,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19005,
											"end": 19009,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19001,
											"end": 19021,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18997,
											"end": 18998,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18986,
											"end": 18995,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18982,
											"end": 18999,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18975,
											"end": 19022,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19039,
											"end": 19170,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 19165,
											"end": 19169,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19039,
											"end": 19170,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 19039,
											"end": 19170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19039,
											"end": 19170,
											"name": "tag",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 19039,
											"end": 19170,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19031,
											"end": 19170,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19031,
											"end": 19170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18758,
											"end": 19177,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18758,
											"end": 19177,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18758,
											"end": 19177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18758,
											"end": 19177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19183,
											"end": 19361,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 19183,
											"end": 19361,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19323,
											"end": 19353,
											"name": "PUSH",
											"source": 10,
											"value": "43616E6E6F74207265636F7665722076657374696E6720746F6B656E00000000"
										},
										{
											"begin": 19319,
											"end": 19320,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19311,
											"end": 19317,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19307,
											"end": 19321,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19300,
											"end": 19354,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19183,
											"end": 19361,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19183,
											"end": 19361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19367,
											"end": 19733,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 19367,
											"end": 19733,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19509,
											"end": 19512,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19530,
											"end": 19597,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 19594,
											"end": 19596,
											"name": "PUSH",
											"source": 10,
											"value": "1C"
										},
										{
											"begin": 19589,
											"end": 19592,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19530,
											"end": 19597,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 19530,
											"end": 19597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19530,
											"end": 19597,
											"name": "tag",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 19530,
											"end": 19597,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19523,
											"end": 19597,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19523,
											"end": 19597,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19606,
											"end": 19699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 19695,
											"end": 19698,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19606,
											"end": 19699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 19606,
											"end": 19699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19606,
											"end": 19699,
											"name": "tag",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 19606,
											"end": 19699,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19724,
											"end": 19726,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19719,
											"end": 19722,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19715,
											"end": 19727,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19708,
											"end": 19727,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19708,
											"end": 19727,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19367,
											"end": 19733,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19367,
											"end": 19733,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19367,
											"end": 19733,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19367,
											"end": 19733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19739,
											"end": 20158,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 19739,
											"end": 20158,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19905,
											"end": 19909,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19943,
											"end": 19945,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19932,
											"end": 19941,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19928,
											"end": 19946,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19920,
											"end": 19946,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19920,
											"end": 19946,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19992,
											"end": 20001,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19986,
											"end": 19990,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19982,
											"end": 20002,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19978,
											"end": 19979,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19967,
											"end": 19976,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19963,
											"end": 19980,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19956,
											"end": 20003,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20020,
											"end": 20151,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 20146,
											"end": 20150,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20020,
											"end": 20151,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 20020,
											"end": 20151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20020,
											"end": 20151,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 20020,
											"end": 20151,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20012,
											"end": 20151,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20012,
											"end": 20151,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19739,
											"end": 20158,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19739,
											"end": 20158,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19739,
											"end": 20158,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19739,
											"end": 20158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20164,
											"end": 20338,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 20164,
											"end": 20338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20304,
											"end": 20330,
											"name": "PUSH",
											"source": 10,
											"value": "56657374696E67206973206E6F74207265766F6361626C650000000000000000"
										},
										{
											"begin": 20300,
											"end": 20301,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20292,
											"end": 20298,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20288,
											"end": 20302,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20281,
											"end": 20331,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20164,
											"end": 20338,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20164,
											"end": 20338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20344,
											"end": 20710,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 20344,
											"end": 20710,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20486,
											"end": 20489,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20507,
											"end": 20574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 20571,
											"end": 20573,
											"name": "PUSH",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 20566,
											"end": 20569,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20507,
											"end": 20574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 20507,
											"end": 20574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20507,
											"end": 20574,
											"name": "tag",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 20507,
											"end": 20574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20500,
											"end": 20574,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20500,
											"end": 20574,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20583,
											"end": 20676,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 20672,
											"end": 20675,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20583,
											"end": 20676,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 20583,
											"end": 20676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20583,
											"end": 20676,
											"name": "tag",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 20583,
											"end": 20676,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20701,
											"end": 20703,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20696,
											"end": 20699,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20692,
											"end": 20704,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20685,
											"end": 20704,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20685,
											"end": 20704,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20344,
											"end": 20710,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20344,
											"end": 20710,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20344,
											"end": 20710,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20344,
											"end": 20710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20716,
											"end": 21135,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 20716,
											"end": 21135,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20882,
											"end": 20886,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20920,
											"end": 20922,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20909,
											"end": 20918,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20905,
											"end": 20923,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20897,
											"end": 20923,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20897,
											"end": 20923,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20969,
											"end": 20978,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20963,
											"end": 20967,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20959,
											"end": 20979,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20955,
											"end": 20956,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20944,
											"end": 20953,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20940,
											"end": 20957,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20933,
											"end": 20980,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20997,
											"end": 21128,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 21123,
											"end": 21127,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20997,
											"end": 21128,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 20997,
											"end": 21128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20997,
											"end": 21128,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 20997,
											"end": 21128,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20989,
											"end": 21128,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20989,
											"end": 21128,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20716,
											"end": 21135,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20716,
											"end": 21135,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20716,
											"end": 21135,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20716,
											"end": 21135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21141,
											"end": 21314,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 21141,
											"end": 21314,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21281,
											"end": 21306,
											"name": "PUSH",
											"source": 10,
											"value": "56657374696E6720616C7265616479207265766F6B6564000000000000000000"
										},
										{
											"begin": 21277,
											"end": 21278,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21269,
											"end": 21275,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21265,
											"end": 21279,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21258,
											"end": 21307,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21141,
											"end": 21314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21141,
											"end": 21314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21320,
											"end": 21686,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 21320,
											"end": 21686,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21462,
											"end": 21465,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21483,
											"end": 21550,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 21547,
											"end": 21549,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 21542,
											"end": 21545,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21483,
											"end": 21550,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 21483,
											"end": 21550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21483,
											"end": 21550,
											"name": "tag",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 21483,
											"end": 21550,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21476,
											"end": 21550,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21476,
											"end": 21550,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21559,
											"end": 21652,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 21648,
											"end": 21651,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21559,
											"end": 21652,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 21559,
											"end": 21652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21559,
											"end": 21652,
											"name": "tag",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 21559,
											"end": 21652,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21677,
											"end": 21679,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21672,
											"end": 21675,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21668,
											"end": 21680,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21661,
											"end": 21680,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21661,
											"end": 21680,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21320,
											"end": 21686,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21320,
											"end": 21686,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21320,
											"end": 21686,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21320,
											"end": 21686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21692,
											"end": 22111,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 21692,
											"end": 22111,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21858,
											"end": 21862,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21896,
											"end": 21898,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21885,
											"end": 21894,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21881,
											"end": 21899,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21873,
											"end": 21899,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21873,
											"end": 21899,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21945,
											"end": 21954,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21939,
											"end": 21943,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21935,
											"end": 21955,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 21931,
											"end": 21932,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21920,
											"end": 21929,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21916,
											"end": 21933,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21909,
											"end": 21956,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21973,
											"end": 22104,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 22099,
											"end": 22103,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21973,
											"end": 22104,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 21973,
											"end": 22104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21973,
											"end": 22104,
											"name": "tag",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 21973,
											"end": 22104,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21965,
											"end": 22104,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21965,
											"end": 22104,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21692,
											"end": 22111,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21692,
											"end": 22111,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21692,
											"end": 22111,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21692,
											"end": 22111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22117,
											"end": 22298,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 22117,
											"end": 22298,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22257,
											"end": 22290,
											"name": "PUSH",
											"source": 10,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 22253,
											"end": 22254,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22245,
											"end": 22251,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22241,
											"end": 22255,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22234,
											"end": 22291,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22117,
											"end": 22298,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22117,
											"end": 22298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22304,
											"end": 22670,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 22304,
											"end": 22670,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22446,
											"end": 22449,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22467,
											"end": 22534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 22531,
											"end": 22533,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 22526,
											"end": 22529,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22467,
											"end": 22534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 22467,
											"end": 22534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22467,
											"end": 22534,
											"name": "tag",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 22467,
											"end": 22534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22460,
											"end": 22534,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22460,
											"end": 22534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22543,
											"end": 22636,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 22632,
											"end": 22635,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22543,
											"end": 22636,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 22543,
											"end": 22636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22543,
											"end": 22636,
											"name": "tag",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 22543,
											"end": 22636,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22661,
											"end": 22663,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22656,
											"end": 22659,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22652,
											"end": 22664,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22645,
											"end": 22664,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22645,
											"end": 22664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22304,
											"end": 22670,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22304,
											"end": 22670,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22304,
											"end": 22670,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22304,
											"end": 22670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22676,
											"end": 23095,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 22676,
											"end": 23095,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22842,
											"end": 22846,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22880,
											"end": 22882,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22869,
											"end": 22878,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22865,
											"end": 22883,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22857,
											"end": 22883,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22857,
											"end": 22883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22929,
											"end": 22938,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22923,
											"end": 22927,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22919,
											"end": 22939,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 22915,
											"end": 22916,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22904,
											"end": 22913,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22900,
											"end": 22917,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22893,
											"end": 22940,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22957,
											"end": 23088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 23083,
											"end": 23087,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22957,
											"end": 23088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 22957,
											"end": 23088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22957,
											"end": 23088,
											"name": "tag",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 22957,
											"end": 23088,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22949,
											"end": 23088,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22949,
											"end": 23088,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22676,
											"end": 23095,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22676,
											"end": 23095,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22676,
											"end": 23095,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22676,
											"end": 23095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23101,
											"end": 23433,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 23101,
											"end": 23433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23222,
											"end": 23226,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23260,
											"end": 23262,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 23249,
											"end": 23258,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23245,
											"end": 23263,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23237,
											"end": 23263,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23237,
											"end": 23263,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23273,
											"end": 23344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 23341,
											"end": 23342,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23330,
											"end": 23339,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23326,
											"end": 23343,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23317,
											"end": 23323,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 23273,
											"end": 23344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 23273,
											"end": 23344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23273,
											"end": 23344,
											"name": "tag",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 23273,
											"end": 23344,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23354,
											"end": 23426,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 23422,
											"end": 23424,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23411,
											"end": 23420,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23407,
											"end": 23425,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23398,
											"end": 23404,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 23354,
											"end": 23426,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 23354,
											"end": 23426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23354,
											"end": 23426,
											"name": "tag",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 23354,
											"end": 23426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23101,
											"end": 23433,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 23101,
											"end": 23433,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 23101,
											"end": 23433,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23101,
											"end": 23433,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23101,
											"end": 23433,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23101,
											"end": 23433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"TokenVesting.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"beneficiary()": "38af3eed",
							"cliff()": "13d033c0",
							"cliffEnded()": "253254d6",
							"duration()": "0fb5a6b4",
							"emergencyRecover(address,uint256)": "9639011e",
							"getVestingInfo()": "dc25a300",
							"getVestingStatus()": "ee4a745c",
							"hasEnded()": "ecb70fb7",
							"hasStarted()": "44691f7e",
							"initialize(address,address,uint256,uint256,uint256,bool,address)": "841bee0d",
							"isInitialized()": "392e53cd",
							"owner()": "8da5cb5b",
							"releasableAmount()": "5b940081",
							"release()": "86d1a69f",
							"released()": "96132521",
							"renounceOwnership()": "715018a6",
							"revocable()": "872a7810",
							"revoke()": "b6549f75",
							"revoked()": "63d256ce",
							"start()": "be9a6555",
							"token()": "fc0c546a",
							"totalAmount()": "1a39d8ef",
							"transferOwnership(address)": "f2fde38b",
							"vestedAmount()": "44b1231f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cliff\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"}],\"name\":\"VestingInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unreleased\",\"type\":\"uint256\"}],\"name\":\"VestingRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cliff\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cliffEnded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"emergencyRecover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVestingInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_released\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_cliff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_revocable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_revoked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVestingStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_vestedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_releasableAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_remainingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timeElapsed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timeRemaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasEnded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasStarted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_cliff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_revocable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releasableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revocable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revoked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"cliffEnded()\":{\"details\":\"Check if cliff period has ended\",\"returns\":{\"_0\":\"True if cliff period has ended\"}},\"constructor\":{\"details\":\"Constructor for minimal proxy pattern - should not be called directly\"},\"emergencyRecover(address,uint256)\":{\"details\":\"Emergency function to recover tokens sent to this contract by mistake\",\"params\":{\"_amount\":\"Amount to recover\",\"_token\":\"Token address to recover\"}},\"getVestingInfo()\":{\"details\":\"Get vesting information\",\"returns\":{\"_beneficiary\":\"Beneficiary address\",\"_cliff\":\"Cliff duration\",\"_duration\":\"Total duration\",\"_released\":\"Released amount\",\"_revocable\":\"Whether revocable\",\"_revoked\":\"Whether revoked\",\"_start\":\"Start time\",\"_token\":\"Token address\",\"_totalAmount\":\"Total vesting amount\"}},\"getVestingStatus()\":{\"details\":\"Get current vesting status\",\"returns\":{\"_releasableAmount\":\"Releasable amount\",\"_remainingAmount\":\"Remaining amount\",\"_timeElapsed\":\"Time elapsed since start\",\"_timeRemaining\":\"Time remaining until full vesting\",\"_vestedAmount\":\"Total vested amount\"}},\"hasEnded()\":{\"details\":\"Check if vesting has ended\",\"returns\":{\"_0\":\"True if vesting has ended\"}},\"hasStarted()\":{\"details\":\"Check if vesting has started\",\"returns\":{\"_0\":\"True if vesting has started\"}},\"initialize(address,address,uint256,uint256,uint256,bool,address)\":{\"details\":\"Initialize function for minimal proxy pattern\",\"params\":{\"_beneficiary\":\"Beneficiary address\",\"_cliff\":\"Cliff duration in seconds\",\"_duration\":\"Total vesting duration in seconds\",\"_owner\":\"Owner address\",\"_revocable\":\"Whether vesting is revocable\",\"_token\":\"Token contract address\",\"_totalAmount\":\"Total vesting amount\"}},\"isInitialized()\":{\"details\":\"Check if vesting contract is initialized\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"releasableAmount()\":{\"details\":\"Calculate the amount of tokens that can be released\",\"returns\":{\"_0\":\"Amount of tokens that can be released\"}},\"release()\":{\"details\":\"Release vested tokens to beneficiary\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"revoke()\":{\"details\":\"Revoke vesting (owner only, if revocable)\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"vestedAmount()\":{\"details\":\"Calculate the total amount of tokens that have vested\",\"returns\":{\"_0\":\"Total vested amount\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TokenVesting.sol\":\"TokenVesting\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"TokenVesting.sol\":{\"keccak256\":\"0xb13677af72fe1ba63143a978b9992171b981c236ba5a9f386cb8f60beb23800b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c75d127f03a2757018891d0b8c687fa6aca307e03fe4c87c2db3873224d71d7e\",\"dweb:/ipfs/Qmcp5auqwVwteHQvcSaskFxNqSZRQZFQPRaFTa1P3DZYBR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "TokenVesting.sol:TokenVesting",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 248,
								"contract": "TokenVesting.sol:TokenVesting",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 903,
								"contract": "TokenVesting.sol:TokenVesting",
								"label": "token",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)380"
							},
							{
								"astId": 905,
								"contract": "TokenVesting.sol:TokenVesting",
								"label": "beneficiary",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 907,
								"contract": "TokenVesting.sol:TokenVesting",
								"label": "cliff",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 909,
								"contract": "TokenVesting.sol:TokenVesting",
								"label": "start",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 911,
								"contract": "TokenVesting.sol:TokenVesting",
								"label": "duration",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 913,
								"contract": "TokenVesting.sol:TokenVesting",
								"label": "totalAmount",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 915,
								"contract": "TokenVesting.sol:TokenVesting",
								"label": "released",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 917,
								"contract": "TokenVesting.sol:TokenVesting",
								"label": "revocable",
								"offset": 0,
								"slot": "9",
								"type": "t_bool"
							},
							{
								"astId": 919,
								"contract": "TokenVesting.sol:TokenVesting",
								"label": "revoked",
								"offset": 1,
								"slot": "9",
								"type": "t_bool"
							},
							{
								"astId": 921,
								"contract": "TokenVesting.sol:TokenVesting",
								"label": "_initialized",
								"offset": 2,
								"slot": "9",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)380": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							874
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 875,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 874,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 874,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								874
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 856,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							886
						],
						"IERC20": [
							380
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 886,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 380,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 886,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								886,
								380
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							886
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 887,
							"src": "133:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 886,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 381,
							"src": "132:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "140:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							302
						]
					},
					"id": 303,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 302,
							"linearizedBaseContracts": [
								302
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 243,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1676:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 241,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 242,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 246,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1723:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 244,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 245,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1767:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 247,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1811:39:4",
										"statements": [
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 251,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "1821:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 252,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "1831:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:4"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:4"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:4"
									},
									"scope": 302,
									"src": "1797:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2251:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 259,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "2261:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:4"
											},
											{
												"id": 262,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 263,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2303:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:4"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 267,
									"name": "nonReentrant",
									"nameLocation": "2236:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:4"
									},
									"src": "2227:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "2375:248:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "2468:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 272,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "2479:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:4"
											},
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 277,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2598:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 278,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "2608:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:4"
											}
										]
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:4"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:4"
									},
									"scope": 302,
									"src": "2336:287:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "2667:171:4",
										"statements": [
											{
												"expression": {
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 285,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2809:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 286,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2819:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:4"
											}
										]
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:4"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:4"
									},
									"scope": 302,
									"src": "2629:209:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "3081:43:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 296,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "3098:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 297,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "3109:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 295,
												"id": 299,
												"nodeType": "Return",
												"src": "3091:26:4"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:4"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:4"
									},
									"scope": 302,
									"src": "3017:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 303,
							"src": "888:2238:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 381,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 304,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 305,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 380,
							"linearizedBaseContracts": [
								380
							],
							"name": "IERC20",
							"nameLocation": "215:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 314,
									"name": "Transfer",
									"nameLocation": "397:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "406:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "428:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "448:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:5"
									},
									"src": "391:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 323,
									"name": "Approval",
									"nameLocation": "628:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "637:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "660:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "685:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:5"
									},
									"src": "622:78:5"
								},
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:5"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "822:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:5"
									},
									"scope": 380,
									"src": "776:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "932:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:5"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "972:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:5"
									},
									"scope": 380,
									"src": "913:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1223:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1235:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1268:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:5"
									},
									"scope": 380,
									"src": "1205:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1568:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1583:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:5"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1623:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:5"
									},
									"scope": 380,
									"src": "1549:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2327:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2344:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:5"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2377:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:5"
									},
									"scope": 380,
									"src": "2310:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2713:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2727:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2739:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:5"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2772:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:5"
									},
									"scope": 380,
									"src": "2691:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 381,
							"src": "205:2575:5",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "106:2675:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"SafeERC20": [
							844
						]
					},
					"id": 845,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 382,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 845,
							"sourceUnit": 381,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 383,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 386,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 845,
							"sourceUnit": 230,
							"src": "179:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 385,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 387,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 844,
							"linearizedBaseContracts": [
								844
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:6",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 392,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "823:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:6"
									},
									"src": "792:46:6"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 401,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "959:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "976:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1002:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:6"
									},
									"src": "920:109:6"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "1291:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "1321:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 416,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "1343:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "1343:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 418,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "1360:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 419,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 409,
																			"src": "1364:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 420,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 414,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 412,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "1301:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:6"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1241:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 404,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 403,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1241:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1241:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1255:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1267:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:6"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:6"
									},
									"scope": 844,
									"src": "1219:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "1708:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "1738:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 442,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "1760:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "1760:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 444,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 431,
																			"src": "1781:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 445,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "1787:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 446,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 435,
																			"src": "1791:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 447,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 440,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 438,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "1718:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:6"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1644:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 428,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 427,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1644:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1644:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1658:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1672:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:6"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:6"
									},
									"scope": 844,
									"src": "1618:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "2033:99:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "2074:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 469,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "2096:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "2096:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 471,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 458,
																			"src": "2113:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 472,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 460,
																			"src": "2117:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 473,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 467,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 465,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "2050:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 464,
												"id": 476,
												"nodeType": "Return",
												"src": "2043:82:6"
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:6",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1968:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 455,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 454,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1968:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1968:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1982:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1994:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:6"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "2027:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 462,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:6"
									},
									"scope": 844,
									"src": "1943:189:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "2381:109:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 494,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "2422:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 497,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 482,
																		"src": "2444:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "2444:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 499,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 484,
																			"src": "2465:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 500,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "2471:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 501,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 488,
																			"src": "2475:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 502,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 495,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 493,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "2398:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 492,
												"id": 505,
												"nodeType": "Return",
												"src": "2391:92:6"
											}
										]
									},
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:6",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2302:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 481,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 480,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "2302:6:6"
													},
													"referencedDeclaration": 380,
													"src": "2302:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2316:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2330:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2342:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:6"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2375:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 490,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:6"
									},
									"scope": 844,
									"src": "2273:217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "3232:139:6",
										"statements": [
											{
												"assignments": [
													519
												],
												"declarations": [
													{
														"constant": false,
														"id": 519,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 537,
														"src": "3242:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 518,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 528,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 524,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$844",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$844",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 522,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 526,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "3296:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 520,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "3265:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 357,
														"src": "3265:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 530,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "3327:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 531,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "3334:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 532,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "3343:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 533,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "3358:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 529,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "3314:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:6"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3177:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 510,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 509,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "3177:6:6"
													},
													"referencedDeclaration": 380,
													"src": "3177:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3191:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3208:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:6"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:6"
									},
									"scope": 844,
									"src": "3146:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "4137:370:6",
										"statements": [
											{
												"id": 579,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:6",
												"statements": [
													{
														"assignments": [
															550
														],
														"declarations": [
															{
																"constant": false,
																"id": 550,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 579,
																"src": "4171:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 549,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 559,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 555,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$844",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$844",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 553,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 557,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "4229:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 551,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "4198:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "4198:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 560,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "4255:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 561,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "4274:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 570,
														"nodeType": "IfStatement",
														"src": "4251:160:6",
														"trueBody": {
															"id": 569,
															"nodeType": "Block",
															"src": "4293:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 564,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 544,
																				"src": "4351:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 565,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 550,
																				"src": "4360:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 566,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 546,
																				"src": "4378:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 563,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "4318:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 568,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 572,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "4437:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 573,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "4444:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 574,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 550,
																		"src": "4453:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 575,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 546,
																		"src": "4472:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 571,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "4424:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 578,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4070:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 541,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 540,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "4070:6:6"
													},
													"referencedDeclaration": 380,
													"src": "4070:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4084:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4101:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:6"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:6"
									},
									"scope": 844,
									"src": "4039:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "5161:303:6",
										"statements": [
											{
												"assignments": [
													593
												],
												"declarations": [
													{
														"constant": false,
														"id": 593,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 627,
														"src": "5171:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 592,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 602,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 596,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "5214:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 367,
															"src": "5214:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 598,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "5230:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 599,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "5239:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 600,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 594,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:6"
											},
											{
												"condition": {
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 604,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "5286:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 605,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "5293:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 603,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "5262:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 626,
												"nodeType": "IfStatement",
												"src": "5257:201:6",
												"trueBody": {
													"id": 625,
													"nodeType": "Block",
													"src": "5308:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 609,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 585,
																		"src": "5342:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 612,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 585,
																					"src": "5364:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$380",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 613,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 367,
																				"src": "5364:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 614,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 587,
																						"src": "5380:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 615,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 616,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 610,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 608,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "5322:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 619,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 621,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 585,
																		"src": "5427:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 622,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 593,
																		"src": "5434:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 620,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "5407:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 624,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5106:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 584,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 583,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "5106:6:6"
													},
													"referencedDeclaration": 380,
													"src": "5106:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5120:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5137:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:6"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:6"
									},
									"scope": 844,
									"src": "5084:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "5911:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 641,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "5925:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 655,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "6034:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 656,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "6038:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 657,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "6045:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 653,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 632,
																	"src": "6012:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:6",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "6012:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 668,
													"nodeType": "IfStatement",
													"src": "6007:117:6",
													"trueBody": {
														"id": 667,
														"nodeType": "Block",
														"src": "6052:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 663,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "6106:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 662,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 661,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 660,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6073:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 666,
																"nodeType": "RevertStatement",
																"src": "6066:47:6"
															}
														]
													}
												},
												"id": 669,
												"nodeType": "IfStatement",
												"src": "5921:203:6",
												"trueBody": {
													"id": 652,
													"nodeType": "Block",
													"src": "5946:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 647,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "5973:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 648,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "5980:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 649,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "5984:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 646,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "5960:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 651,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:6",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5840:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 631,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 630,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5840:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5840:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5856:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5868:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5883:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 637,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:6"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:6"
									},
									"scope": 844,
									"src": "5808:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "6649:239:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 686,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "6663:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 701,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 677,
																	"src": "6786:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 702,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "6792:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 703,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "6796:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 704,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "6803:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 699,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "6760:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:6",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6760:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 715,
													"nodeType": "IfStatement",
													"src": "6755:127:6",
													"trueBody": {
														"id": 714,
														"nodeType": "Block",
														"src": "6810:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 710,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 675,
																					"src": "6864:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 709,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 708,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 707,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6831:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 713,
																"nodeType": "RevertStatement",
																"src": "6824:47:6"
															}
														]
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "6659:223:6",
												"trueBody": {
													"id": 698,
													"nodeType": "Block",
													"src": "6684:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 692,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 675,
																		"src": "6715:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 693,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 677,
																		"src": "6722:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 694,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 679,
																		"src": "6728:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 695,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 681,
																		"src": "6732:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 691,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "6698:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 697,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:6",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6527:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 674,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 673,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6527:8:6"
													},
													"referencedDeclaration": 229,
													"src": "6527:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6551:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6573:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6593:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6616:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 682,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:6"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:6"
									},
									"scope": 844,
									"src": "6482:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "7655:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 731,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 724,
																"src": "7669:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 745,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "7777:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 746,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 726,
																	"src": "7781:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 747,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 728,
																	"src": "7788:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 743,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 722,
																	"src": "7756:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:6",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7756:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 758,
													"nodeType": "IfStatement",
													"src": "7751:116:6",
													"trueBody": {
														"id": 757,
														"nodeType": "Block",
														"src": "7795:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 753,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 722,
																					"src": "7849:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 752,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 751,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 750,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "7816:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 756,
																"nodeType": "RevertStatement",
																"src": "7809:47:6"
															}
														]
													}
												},
												"id": 759,
												"nodeType": "IfStatement",
												"src": "7665:202:6",
												"trueBody": {
													"id": 742,
													"nodeType": "Block",
													"src": "7690:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 737,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 722,
																		"src": "7717:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 738,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "7724:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 739,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 726,
																		"src": "7728:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 736,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "7704:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 741,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:6",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7584:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 721,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 720,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "7584:8:6"
													},
													"referencedDeclaration": 229,
													"src": "7584:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7600:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7612:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7627:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 727,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:6"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:6"
									},
									"scope": 844,
									"src": "7553:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "8440:650:6",
										"statements": [
											{
												"assignments": [
													771
												],
												"declarations": [
													{
														"constant": false,
														"id": 771,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 801,
														"src": "8450:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 770,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 772,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:6"
											},
											{
												"assignments": [
													774
												],
												"declarations": [
													{
														"constant": false,
														"id": 774,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 801,
														"src": "8478:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 773,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 775,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8532:396:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:6"
																	},
																	{
																		"name": "token",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8561:60:6"
															},
															"variables": [
																{
																	"name": "success",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8682:157:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:6",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:6"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:6"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:6"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8666:15:6"
															},
															"nodeType": "YulIf",
															"src": "8663:176:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8852:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8866:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8895:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8910:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 767,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:6",
														"valueSize": 1
													},
													{
														"declaration": 767,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:6",
														"valueSize": 1
													},
													{
														"declaration": 771,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:6",
														"valueSize": 1
													},
													{
														"declaration": 774,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:6",
														"valueSize": 1
													},
													{
														"declaration": 765,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 776,
												"nodeType": "InlineAssembly",
												"src": "8507:421:6"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 777,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "8942:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 788,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "8994:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 782,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 765,
																			"src": "8968:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 780,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 800,
												"nodeType": "IfStatement",
												"src": "8938:146:6",
												"trueBody": {
													"id": 799,
													"nodeType": "Block",
													"src": "9012:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 795,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 765,
																				"src": "9066:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 793,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 792,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "9033:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 798,
															"nodeType": "RevertStatement",
															"src": "9026:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "8399:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 764,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 763,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "8399:6:6"
													},
													"referencedDeclaration": 380,
													"src": "8399:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "8413:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 766,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:6"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:6"
									},
									"scope": 844,
									"src": "8370:720:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "9681:391:6",
										"statements": [
											{
												"assignments": [
													814
												],
												"declarations": [
													{
														"constant": false,
														"id": 814,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9691:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 813,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 815,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:6"
											},
											{
												"assignments": [
													817
												],
												"declarations": [
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9713:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 816,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 818,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:6"
											},
											{
												"assignments": [
													820
												],
												"declarations": [
													{
														"constant": false,
														"id": 820,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9741:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 819,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 821,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9795:174:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9809:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:6"
																	},
																	{
																		"name": "token",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9820:60:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9893:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9907:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9936:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9951:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 808,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:6",
														"valueSize": 1
													},
													{
														"declaration": 808,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:6",
														"valueSize": 1
													},
													{
														"declaration": 817,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:6",
														"valueSize": 1
													},
													{
														"declaration": 820,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:6",
														"valueSize": 1
													},
													{
														"declaration": 814,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:6",
														"valueSize": 1
													},
													{
														"declaration": 806,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 822,
												"nodeType": "InlineAssembly",
												"src": "9770:199:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 823,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "9985:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 824,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 817,
																		"src": "9997:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 835,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "10048:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:6",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 829,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 806,
																						"src": "10023:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 828,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 827,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 830,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 831,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 839,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 812,
												"id": 841,
												"nodeType": "Return",
												"src": "9978:87:6"
											}
										]
									},
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9625:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 805,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 804,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "9625:6:6"
													},
													"referencedDeclaration": 380,
													"src": "9625:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9639:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 807,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:6"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9675:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 810,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:6"
									},
									"scope": 844,
									"src": "9592:480:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 845,
							"src": "698:9376:6",
							"usedErrors": [
								392,
								401
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							874
						]
					},
					"id": 875,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 846,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 847,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 874,
							"linearizedBaseContracts": [
								874
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 852,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 851,
												"id": 854,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 874,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 861,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 860,
												"id": 863,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 858,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 874,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 869,
												"id": 871,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 874,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 875,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							886
						]
					},
					"id": 887,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 876,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 877,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:8",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 886,
							"linearizedBaseContracts": [
								886
							],
							"name": "IERC165",
							"nameLocation": "433:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 885,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "819:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 879,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:8"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "862:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 882,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:8"
									},
									"scope": 886,
									"src": "792:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 887,
							"src": "423:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:8"
				},
				"id": 8
			},
			"TokenVesting.sol": {
				"ast": {
					"absolutePath": "TokenVesting.sol",
					"exportedSymbols": {
						"Context": [
							874
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							302
						],
						"SafeERC20": [
							844
						],
						"TokenVesting": [
							1440
						]
					},
					"id": 1441,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 888,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 889,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1441,
							"sourceUnit": 381,
							"src": "58:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 890,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1441,
							"sourceUnit": 845,
							"src": "115:65:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 891,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1441,
							"sourceUnit": 148,
							"src": "181:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 892,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1441,
							"sourceUnit": 303,
							"src": "234:62:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 893,
										"name": "Ownable",
										"nameLocations": [
											"323:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "323:7:9"
									},
									"id": 894,
									"nodeType": "InheritanceSpecifier",
									"src": "323:7:9"
								},
								{
									"baseName": {
										"id": 895,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"332:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 302,
										"src": "332:15:9"
									},
									"id": 896,
									"nodeType": "InheritanceSpecifier",
									"src": "332:15:9"
								}
							],
							"canonicalName": "TokenVesting",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1440,
							"linearizedBaseContracts": [
								1440,
								302,
								147,
								874
							],
							"name": "TokenVesting",
							"nameLocation": "307:12:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 900,
									"libraryName": {
										"id": 897,
										"name": "SafeERC20",
										"nameLocations": [
											"360:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 844,
										"src": "360:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "354:27:9",
									"typeName": {
										"id": 899,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 898,
											"name": "IERC20",
											"nameLocations": [
												"374:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "374:6:9"
										},
										"referencedDeclaration": 380,
										"src": "374:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 903,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "427:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 1440,
									"src": "413:19:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$380",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 902,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 901,
											"name": "IERC20",
											"nameLocations": [
												"413:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "413:6:9"
										},
										"referencedDeclaration": 380,
										"src": "413:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "38af3eed",
									"id": 905,
									"mutability": "mutable",
									"name": "beneficiary",
									"nameLocation": "453:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1440,
									"src": "438:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 904,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "438:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "13d033c0",
									"id": 907,
									"mutability": "mutable",
									"name": "cliff",
									"nameLocation": "485:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 1440,
									"src": "470:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 906,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "470:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "be9a6555",
									"id": 909,
									"mutability": "mutable",
									"name": "start",
									"nameLocation": "511:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 1440,
									"src": "496:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 908,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "496:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0fb5a6b4",
									"id": 911,
									"mutability": "mutable",
									"name": "duration",
									"nameLocation": "537:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 1440,
									"src": "522:23:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 910,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "522:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1a39d8ef",
									"id": 913,
									"mutability": "mutable",
									"name": "totalAmount",
									"nameLocation": "566:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1440,
									"src": "551:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 912,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "551:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "96132521",
									"id": 915,
									"mutability": "mutable",
									"name": "released",
									"nameLocation": "598:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 1440,
									"src": "583:23:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 914,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "583:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "872a7810",
									"id": 917,
									"mutability": "mutable",
									"name": "revocable",
									"nameLocation": "624:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 1440,
									"src": "612:21:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 916,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "612:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "63d256ce",
									"id": 919,
									"mutability": "mutable",
									"name": "revoked",
									"nameLocation": "651:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1440,
									"src": "639:19:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 918,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "639:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 921,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "723:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1440,
									"src": "710:25:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 920,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "710:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "c7798891864187665ac6dd119286e44ec13f014527aeeb2b8eb3fd413df93179",
									"id": 927,
									"name": "TokensReleased",
									"nameLocation": "762:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "793:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "777:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "814:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "806:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "806:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:45:9"
									},
									"src": "756:66:9"
								},
								{
									"anonymous": false,
									"eventSelector": "57c76f5e278bfbd4eeb5207d287aa5a1a9e1113c65f7eefa540e379a2774d13b",
									"id": 933,
									"name": "VestingRevoked",
									"nameLocation": "833:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "864:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "848:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"indexed": false,
												"mutability": "mutable",
												"name": "unreleased",
												"nameLocation": "885:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "877:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "847:49:9"
									},
									"src": "827:70:9"
								},
								{
									"anonymous": false,
									"eventSelector": "14fc8ad8c19c2f708dda1e872c93f682d7a3cae234bdc2712270269f8e1d00c2",
									"id": 947,
									"name": "VestingInitialized",
									"nameLocation": "908:18:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "952:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "936:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "936:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "983:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "967:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "967:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalAmount",
												"nameLocation": "1012:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "1004:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"indexed": false,
												"mutability": "mutable",
												"name": "cliff",
												"nameLocation": "1041:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "1033:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1033:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"indexed": false,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "1064:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "1056:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"indexed": false,
												"mutability": "mutable",
												"name": "revocable",
												"nameLocation": "1087:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "1082:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 944,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1082:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "926:176:9"
									},
									"src": "902:201:9"
								},
								{
									"body": {
										"id": 955,
										"nodeType": "Block",
										"src": "1241:141:9",
										"statements": []
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "1109:93:9",
										"text": " @dev Constructor for minimal proxy pattern - should not be called directly"
									},
									"id": 956,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 951,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1229:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1233:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1229:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 953,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 950,
												"name": "Ownable",
												"nameLocations": [
													"1221:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1221:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1221:19:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1218:2:9"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1241:0:9"
									},
									"scope": 1440,
									"src": "1207:175:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1087,
										"nodeType": "Block",
										"src": "2014:997:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2032:13:9",
															"subExpression": {
																"id": 975,
																"name": "_initialized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "2033:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920696e697469616c697a6564",
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2047:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
																"typeString": "literal_string \"Already initialized\""
															},
															"value": "Already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
																"typeString": "literal_string \"Already initialized\""
															}
														],
														"id": 974,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2024:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2024:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 979,
												"nodeType": "ExpressionStatement",
												"src": "2024:45:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 981,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 959,
																"src": "2087:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2105:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2097:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 982,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2097:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2097:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2087:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2061646472657373",
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2109:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															},
															"value": "Invalid token address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															}
														],
														"id": 980,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2079:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2079:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 989,
												"nodeType": "ExpressionStatement",
												"src": "2079:54:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 991,
																"name": "_beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "2151:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2175:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2167:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 992,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2167:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2167:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2151:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642062656e65666963696172792061646472657373",
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2179:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89",
																"typeString": "literal_string \"Invalid beneficiary address\""
															},
															"value": "Invalid beneficiary address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89",
																"typeString": "literal_string \"Invalid beneficiary address\""
															}
														],
														"id": 990,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2143:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2143:66:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "2143:66:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1001,
																"name": "_totalAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "2227:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2242:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2227:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f74616c20616d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2245:37:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6543fbb0dac0cbc68b2805e7af1fbb4a9b84ff4a026c815f0d89c077167d5ffc",
																"typeString": "literal_string \"Total amount must be greater than 0\""
															},
															"value": "Total amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6543fbb0dac0cbc68b2805e7af1fbb4a9b84ff4a026c815f0d89c077167d5ffc",
																"typeString": "literal_string \"Total amount must be greater than 0\""
															}
														],
														"id": 1000,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2219:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2219:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "2219:64:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1008,
																"name": "_duration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "2301:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2313:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2301:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4475726174696f6e206d7573742062652067726561746572207468616e2030",
															"id": 1011,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2316:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0",
																"typeString": "literal_string \"Duration must be greater than 0\""
															},
															"value": "Duration must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0",
																"typeString": "literal_string \"Duration must be greater than 0\""
															}
														],
														"id": 1007,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2293:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2293:57:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1013,
												"nodeType": "ExpressionStatement",
												"src": "2293:57:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1015,
																"name": "_cliff",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "2368:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1016,
																"name": "_duration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "2378:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2368:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436c6966662063616e6e6f7420657863656564206475726174696f6e",
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2389:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_978309526168c60a0dd3a591311247928d7ff465a9ba0b899d45188a786a7316",
																"typeString": "literal_string \"Cliff cannot exceed duration\""
															},
															"value": "Cliff cannot exceed duration"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_978309526168c60a0dd3a591311247928d7ff465a9ba0b899d45188a786a7316",
																"typeString": "literal_string \"Cliff cannot exceed duration\""
															}
														],
														"id": 1014,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2360:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2360:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "2360:60:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1022,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 971,
																"src": "2438:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1025,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2456:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2448:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1023,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2448:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2448:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2438:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206f776e65722061646472657373",
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2460:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3",
																"typeString": "literal_string \"Invalid owner address\""
															},
															"value": "Invalid owner address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3",
																"typeString": "literal_string \"Invalid owner address\""
															}
														],
														"id": 1021,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2430:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2430:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1030,
												"nodeType": "ExpressionStatement",
												"src": "2430:54:9"
											},
											{
												"expression": {
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1031,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "2495:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1033,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 959,
																"src": "2510:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1032,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "2503:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1034,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2503:14:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"src": "2495:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "2495:22:9"
											},
											{
												"expression": {
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1037,
														"name": "beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "2527:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1038,
														"name": "_beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "2541:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2527:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1040,
												"nodeType": "ExpressionStatement",
												"src": "2527:26:9"
											},
											{
												"expression": {
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1041,
														"name": "totalAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "2563:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1042,
														"name": "_totalAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "2577:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2563:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1044,
												"nodeType": "ExpressionStatement",
												"src": "2563:26:9"
											},
											{
												"expression": {
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1045,
														"name": "cliff",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "2599:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1046,
														"name": "_cliff",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "2607:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2599:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1048,
												"nodeType": "ExpressionStatement",
												"src": "2599:14:9"
											},
											{
												"expression": {
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1049,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "2623:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1050,
														"name": "_duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "2634:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2623:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1052,
												"nodeType": "ExpressionStatement",
												"src": "2623:20:9"
											},
											{
												"expression": {
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1053,
														"name": "revocable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "2653:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1054,
														"name": "_revocable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "2665:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2653:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1056,
												"nodeType": "ExpressionStatement",
												"src": "2653:22:9"
											},
											{
												"expression": {
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1057,
														"name": "start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "2685:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1058,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2693:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1059,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2699:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2693:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2685:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1061,
												"nodeType": "ExpressionStatement",
												"src": "2685:23:9"
											},
											{
												"expression": {
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1062,
														"name": "released",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "2718:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1063,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2729:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2718:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1065,
												"nodeType": "ExpressionStatement",
												"src": "2718:12:9"
											},
											{
												"expression": {
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1066,
														"name": "revoked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "2740:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1067,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2750:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2740:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "2740:15:9"
											},
											{
												"expression": {
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1070,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "2765:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2780:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2765:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1073,
												"nodeType": "ExpressionStatement",
												"src": "2765:19:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1075,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "2814:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1074,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2795:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2795:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "2795:26:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1079,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "2869:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1080,
															"name": "_beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "2889:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1081,
															"name": "_totalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "2915:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1082,
															"name": "_cliff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "2941:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1083,
															"name": "_duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "2961:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1084,
															"name": "_revocable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "2984:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1078,
														"name": "VestingInitialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "2837:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint256,bool)"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2837:167:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1086,
												"nodeType": "EmitStatement",
												"src": "2832:172:9"
											}
										]
									},
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "1388:402:9",
										"text": " @dev Initialize function for minimal proxy pattern\n @param _token Token contract address\n @param _beneficiary Beneficiary address\n @param _totalAmount Total vesting amount\n @param _cliff Cliff duration in seconds\n @param _duration Total vesting duration in seconds\n @param _revocable Whether vesting is revocable\n @param _owner Owner address"
									},
									"functionSelector": "841bee0d",
									"id": 1088,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "1804:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1832:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "1824:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1824:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "_beneficiary",
												"nameLocation": "1856:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "1848:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1848:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "_totalAmount",
												"nameLocation": "1886:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "1878:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "_cliff",
												"nameLocation": "1916:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "1908:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1908:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "_duration",
												"nameLocation": "1940:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "1932:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1932:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "_revocable",
												"nameLocation": "1964:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "1959:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 968,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1959:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1992:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "1984:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1984:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1814:190:9"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2014:0:9"
									},
									"scope": 1440,
									"src": "1795:1216:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1096,
										"nodeType": "Block",
										"src": "3140:36:9",
										"statements": [
											{
												"expression": {
													"id": 1094,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 921,
													"src": "3157:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1093,
												"id": 1095,
												"nodeType": "Return",
												"src": "3150:19:9"
											}
										]
									},
									"documentation": {
										"id": 1089,
										"nodeType": "StructuredDocumentation",
										"src": "3017:64:9",
										"text": " @dev Check if vesting contract is initialized"
									},
									"functionSelector": "392e53cd",
									"id": 1097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isInitialized",
									"nameLocation": "3095:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3108:2:9"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "3134:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1091,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3134:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3133:6:9"
									},
									"scope": 1440,
									"src": "3086:90:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1151,
										"nodeType": "Block",
										"src": "3288:395:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3306:8:9",
															"subExpression": {
																"id": 1104,
																"name": "revoked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 919,
																"src": "3307:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "56657374696e6720686173206265656e207265766f6b6564",
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3316:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01a7a611bc9062f34f75663bda41092866c264ca4d6493eae41caf32588ac159",
																"typeString": "literal_string \"Vesting has been revoked\""
															},
															"value": "Vesting has been revoked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01a7a611bc9062f34f75663bda41092866c264ca4d6493eae41caf32588ac159",
																"typeString": "literal_string \"Vesting has been revoked\""
															}
														],
														"id": 1103,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3298:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3298:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "3298:45:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1110,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3361:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3365:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3361:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1112,
																	"name": "beneficiary",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "3375:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3361:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1114,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3390:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3394:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3390:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1116,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "3404:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3404:7:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3390:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3361:50:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e617574686f72697a6564",
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3413:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
																"typeString": "literal_string \"Unauthorized\""
															},
															"value": "Unauthorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
																"typeString": "literal_string \"Unauthorized\""
															}
														],
														"id": 1109,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3353:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3353:75:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1122,
												"nodeType": "ExpressionStatement",
												"src": "3353:75:9"
											},
											{
												"assignments": [
													1124
												],
												"declarations": [
													{
														"constant": false,
														"id": 1124,
														"mutability": "mutable",
														"name": "unreleased",
														"nameLocation": "3447:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1151,
														"src": "3439:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1123,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3439:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1127,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1125,
														"name": "releasableAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1215,
														"src": "3460:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3460:18:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3439:39:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1129,
																"name": "unreleased",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1124,
																"src": "3496:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3496:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e7320746f2072656c65617365",
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3512:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914",
																"typeString": "literal_string \"No tokens to release\""
															},
															"value": "No tokens to release"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914",
																"typeString": "literal_string \"No tokens to release\""
															}
														],
														"id": 1128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3488:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3488:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "3488:47:9"
											},
											{
												"expression": {
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1135,
														"name": "released",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3546:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1136,
														"name": "unreleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "3558:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3546:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1138,
												"nodeType": "ExpressionStatement",
												"src": "3546:22:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1142,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "3597:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1143,
															"name": "unreleased",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "3610:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1139,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "3578:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3584:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 425,
														"src": "3578:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3578:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1145,
												"nodeType": "ExpressionStatement",
												"src": "3578:43:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1147,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "3652:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1148,
															"name": "unreleased",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "3665:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1146,
														"name": "TokensReleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "3637:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3637:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1150,
												"nodeType": "EmitStatement",
												"src": "3632:44:9"
											}
										]
									},
									"documentation": {
										"id": 1098,
										"nodeType": "StructuredDocumentation",
										"src": "3182:60:9",
										"text": " @dev Release vested tokens to beneficiary"
									},
									"functionSelector": "86d1a69f",
									"id": 1152,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1101,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1100,
												"name": "nonReentrant",
												"nameLocations": [
													"3275:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "3275:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3275:12:9"
										}
									],
									"name": "release",
									"nameLocation": "3256:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3263:2:9"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3288:0:9"
									},
									"scope": 1440,
									"src": "3247:436:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1202,
										"nodeType": "Block",
										"src": "3796:464:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1159,
															"name": "revocable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "3814:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "56657374696e67206973206e6f74207265766f6361626c65",
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3825:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5950fe1df8a349aec718570d3ca1732b2af340c81930e187be30755660fa4ecb",
																"typeString": "literal_string \"Vesting is not revocable\""
															},
															"value": "Vesting is not revocable"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5950fe1df8a349aec718570d3ca1732b2af340c81930e187be30755660fa4ecb",
																"typeString": "literal_string \"Vesting is not revocable\""
															}
														],
														"id": 1158,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3806:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3806:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1162,
												"nodeType": "ExpressionStatement",
												"src": "3806:46:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3870:8:9",
															"subExpression": {
																"id": 1164,
																"name": "revoked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 919,
																"src": "3871:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "56657374696e6720616c7265616479207265766f6b6564",
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3880:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9702fe77c8ad7920939f14d593a75d4b7597fd9ba27692e37b232b0efa62ae17",
																"typeString": "literal_string \"Vesting already revoked\""
															},
															"value": "Vesting already revoked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9702fe77c8ad7920939f14d593a75d4b7597fd9ba27692e37b232b0efa62ae17",
																"typeString": "literal_string \"Vesting already revoked\""
															}
														],
														"id": 1163,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3862:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1168,
												"nodeType": "ExpressionStatement",
												"src": "3862:44:9"
											},
											{
												"expression": {
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1169,
														"name": "revoked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "3917:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1170,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3927:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3917:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1172,
												"nodeType": "ExpressionStatement",
												"src": "3917:14:9"
											},
											{
												"assignments": [
													1174
												],
												"declarations": [
													{
														"constant": false,
														"id": 1174,
														"mutability": "mutable",
														"name": "vested",
														"nameLocation": "4030:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1202,
														"src": "4022:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1173,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4022:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1177,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1175,
														"name": "vestedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "4039:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4039:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4022:31:9"
											},
											{
												"assignments": [
													1179
												],
												"declarations": [
													{
														"constant": false,
														"id": 1179,
														"mutability": "mutable",
														"name": "unvested",
														"nameLocation": "4071:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 1202,
														"src": "4063:16:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1178,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4063:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1183,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1180,
														"name": "totalAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "4082:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1181,
														"name": "vested",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "4096:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4082:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4063:39:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1184,
														"name": "unvested",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "4125:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4136:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4125:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1196,
												"nodeType": "IfStatement",
												"src": "4121:80:9",
												"trueBody": {
													"id": 1195,
													"nodeType": "Block",
													"src": "4139:62:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1190,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 67,
																			"src": "4172:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4172:7:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1192,
																		"name": "unvested",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1179,
																		"src": "4181:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1187,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 903,
																		"src": "4153:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4159:12:9",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 425,
																	"src": "4153:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4153:37:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1194,
															"nodeType": "ExpressionStatement",
															"src": "4153:37:9"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1198,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "4231:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1199,
															"name": "unvested",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "4244:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1197,
														"name": "VestingRevoked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "4216:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4216:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1201,
												"nodeType": "EmitStatement",
												"src": "4211:42:9"
											}
										]
									},
									"documentation": {
										"id": 1153,
										"nodeType": "StructuredDocumentation",
										"src": "3689:65:9",
										"text": " @dev Revoke vesting (owner only, if revocable)"
									},
									"functionSelector": "b6549f75",
									"id": 1203,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1156,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1155,
												"name": "onlyOwner",
												"nameLocations": [
													"3786:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3786:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3786:9:9"
										}
									],
									"name": "revoke",
									"nameLocation": "3768:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3774:2:9"
									},
									"returnParameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3796:0:9"
									},
									"scope": 1440,
									"src": "3759:501:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1214,
										"nodeType": "Block",
										"src": "4457:49:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1209,
															"name": "vestedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "4474:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4474:14:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1211,
														"name": "released",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4491:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4474:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1208,
												"id": 1213,
												"nodeType": "Return",
												"src": "4467:32:9"
											}
										]
									},
									"documentation": {
										"id": 1204,
										"nodeType": "StructuredDocumentation",
										"src": "4266:128:9",
										"text": " @dev Calculate the amount of tokens that can be released\n @return Amount of tokens that can be released"
									},
									"functionSelector": "5b940081",
									"id": 1215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "releasableAmount",
									"nameLocation": "4408:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4424:2:9"
									},
									"returnParameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "4448:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4448:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4447:9:9"
									},
									"scope": 1440,
									"src": "4399:107:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "4683:789:9",
										"statements": [
											{
												"condition": {
													"id": 1221,
													"name": "revoked",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 919,
													"src": "4697:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1225,
												"nodeType": "IfStatement",
												"src": "4693:46:9",
												"trueBody": {
													"id": 1224,
													"nodeType": "Block",
													"src": "4706:33:9",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4727:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1220,
															"id": 1223,
															"nodeType": "Return",
															"src": "4720:8:9"
														}
													]
												}
											},
											{
												"assignments": [
													1227
												],
												"declarations": [
													{
														"constant": false,
														"id": 1227,
														"mutability": "mutable",
														"name": "currentTime",
														"nameLocation": "4757:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1274,
														"src": "4749:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1226,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4749:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1230,
												"initialValue": {
													"expression": {
														"id": 1228,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "4771:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4777:9:9",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "4771:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4749:37:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1231,
														"name": "currentTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1227,
														"src": "4860:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1232,
															"name": "start",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "4874:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1233,
															"name": "cliff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "4882:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4874:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4860:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1239,
												"nodeType": "IfStatement",
												"src": "4856:66:9",
												"trueBody": {
													"id": 1238,
													"nodeType": "Block",
													"src": "4889:33:9",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4910:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1220,
															"id": 1237,
															"nodeType": "Return",
															"src": "4903:8:9"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1240,
														"name": "currentTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1227,
														"src": "4993:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1241,
															"name": "start",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "5008:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1242,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "5016:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5008:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4993:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1248,
												"nodeType": "IfStatement",
												"src": "4989:80:9",
												"trueBody": {
													"id": 1247,
													"nodeType": "Block",
													"src": "5026:43:9",
													"statements": [
														{
															"expression": {
																"id": 1245,
																"name": "totalAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "5047:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1220,
															"id": 1246,
															"nodeType": "Return",
															"src": "5040:18:9"
														}
													]
												}
											},
											{
												"assignments": [
													1250
												],
												"declarations": [
													{
														"constant": false,
														"id": 1250,
														"mutability": "mutable",
														"name": "timeElapsed",
														"nameLocation": "5164:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1274,
														"src": "5156:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5156:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1256,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1251,
															"name": "currentTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1227,
															"src": "5178:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1252,
															"name": "start",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "5192:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5178:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1254,
														"name": "cliff",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "5200:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5178:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5156:49:9"
											},
											{
												"assignments": [
													1258
												],
												"declarations": [
													{
														"constant": false,
														"id": 1258,
														"mutability": "mutable",
														"name": "vestingDuration",
														"nameLocation": "5223:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 1274,
														"src": "5215:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1257,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5215:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1262,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1259,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "5241:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1260,
														"name": "cliff",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "5252:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5241:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5215:42:9"
											},
											{
												"assignments": [
													1264
												],
												"declarations": [
													{
														"constant": false,
														"id": 1264,
														"mutability": "mutable",
														"name": "linearAmount",
														"nameLocation": "5367:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1274,
														"src": "5359:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1263,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5359:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1271,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1265,
																	"name": "totalAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "5383:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1266,
																	"name": "timeElapsed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1250,
																	"src": "5397:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5383:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1268,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5382:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1269,
														"name": "vestingDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1258,
														"src": "5412:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5382:45:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5359:68:9"
											},
											{
												"expression": {
													"id": 1272,
													"name": "linearAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1264,
													"src": "5453:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1220,
												"id": 1273,
												"nodeType": "Return",
												"src": "5446:19:9"
											}
										]
									},
									"documentation": {
										"id": 1216,
										"nodeType": "StructuredDocumentation",
										"src": "4512:112:9",
										"text": " @dev Calculate the total amount of tokens that have vested\n @return Total vested amount"
									},
									"functionSelector": "44b1231f",
									"id": 1275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vestedAmount",
									"nameLocation": "4638:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4650:2:9"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "4674:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4674:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4673:9:9"
									},
									"scope": 1440,
									"src": "4629:843:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1311,
										"nodeType": "Block",
										"src": "6187:238:9",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 1299,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "6226:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6218:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1297,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6218:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6218:14:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1301,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "6246:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1302,
															"name": "totalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "6271:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1303,
															"name": "released",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "6296:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1304,
															"name": "cliff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "6318:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1305,
															"name": "start",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "6337:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1306,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "6356:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1307,
															"name": "revocable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "6378:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1308,
															"name": "revoked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "6401:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1309,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6204:214:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_bool_$",
														"typeString": "tuple(address,address,uint256,uint256,uint256,uint256,uint256,bool,bool)"
													}
												},
												"functionReturnParameters": 1296,
												"id": 1310,
												"nodeType": "Return",
												"src": "6197:221:9"
											}
										]
									},
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "5478:415:9",
										"text": " @dev Get vesting information\n @return _token Token address\n @return _beneficiary Beneficiary address\n @return _totalAmount Total vesting amount\n @return _released Released amount\n @return _cliff Cliff duration\n @return _start Start time\n @return _duration Total duration\n @return _revocable Whether revocable\n @return _revoked Whether revoked"
									},
									"functionSelector": "dc25a300",
									"id": 1312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVestingInfo",
									"nameLocation": "5907:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5921:2:9"
									},
									"returnParameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "5964:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "5956:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5956:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "_beneficiary",
												"nameLocation": "5988:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "5980:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5980:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "_totalAmount",
												"nameLocation": "6018:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "6010:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6010:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "_released",
												"nameLocation": "6048:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "6040:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6040:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "_cliff",
												"nameLocation": "6075:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "6067:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6067:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "_start",
												"nameLocation": "6099:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "6091:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6091:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "_duration",
												"nameLocation": "6123:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "6115:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6115:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "_revocable",
												"nameLocation": "6147:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "6142:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1292,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6142:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "_revoked",
												"nameLocation": "6172:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "6167:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1294,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6167:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5946:240:9"
									},
									"scope": 1440,
									"src": "5898:527:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1368,
										"nodeType": "Block",
										"src": "6971:416:9",
										"statements": [
											{
												"assignments": [
													1327
												],
												"declarations": [
													{
														"constant": false,
														"id": 1327,
														"mutability": "mutable",
														"name": "currentTime",
														"nameLocation": "6989:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1368,
														"src": "6981:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1326,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6981:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1330,
												"initialValue": {
													"expression": {
														"id": 1328,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "7003:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7009:9:9",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "7003:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6981:37:9"
											},
											{
												"assignments": [
													1332
												],
												"declarations": [
													{
														"constant": false,
														"id": 1332,
														"mutability": "mutable",
														"name": "timeElapsed",
														"nameLocation": "7036:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1368,
														"src": "7028:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1331,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7028:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1341,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1335,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1333,
															"name": "currentTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "7050:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1334,
															"name": "start",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "7064:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7050:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 1339,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7094:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "7050:45:9",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1336,
															"name": "currentTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "7072:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1337,
															"name": "start",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "7086:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7072:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7028:67:9"
											},
											{
												"assignments": [
													1343
												],
												"declarations": [
													{
														"constant": false,
														"id": 1343,
														"mutability": "mutable",
														"name": "timeRemaining",
														"nameLocation": "7113:13:9",
														"nodeType": "VariableDeclaration",
														"scope": 1368,
														"src": "7105:21:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1342,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7105:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1356,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1344,
															"name": "currentTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "7129:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1345,
																"name": "start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 909,
																"src": "7143:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1346,
																"name": "duration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 911,
																"src": "7151:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7143:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7129:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 1354,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7195:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "7129:67:9",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1349,
																"name": "start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 909,
																"src": "7162:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1350,
																"name": "duration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 911,
																"src": "7170:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7162:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1352,
															"name": "currentTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "7181:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7162:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7105:91:9"
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1357,
																"name": "vestedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "7236:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7236:14:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1359,
																"name": "releasableAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1215,
																"src": "7264:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7264:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1361,
																"name": "totalAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "7296:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1362,
																"name": "released",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "7310:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7296:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1364,
															"name": "timeElapsed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "7332:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1365,
															"name": "timeRemaining",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1343,
															"src": "7357:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1366,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7222:158:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 1325,
												"id": 1367,
												"nodeType": "Return",
												"src": "7215:165:9"
											}
										]
									},
									"documentation": {
										"id": 1313,
										"nodeType": "StructuredDocumentation",
										"src": "6431:316:9",
										"text": " @dev Get current vesting status\n @return _vestedAmount Total vested amount\n @return _releasableAmount Releasable amount\n @return _remainingAmount Remaining amount\n @return _timeElapsed Time elapsed since start\n @return _timeRemaining Time remaining until full vesting"
									},
									"functionSelector": "ee4a745c",
									"id": 1369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVestingStatus",
									"nameLocation": "6761:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6777:2:9"
									},
									"returnParameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "_vestedAmount",
												"nameLocation": "6820:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "6812:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6812:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "_releasableAmount",
												"nameLocation": "6851:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "6843:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6843:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "_remainingAmount",
												"nameLocation": "6886:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "6878:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6878:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "_timeElapsed",
												"nameLocation": "6920:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "6912:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6912:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "_timeRemaining",
												"nameLocation": "6950:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "6942:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6942:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6802:168:9"
									},
									"scope": 1440,
									"src": "6752:635:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1380,
										"nodeType": "Block",
										"src": "7544:48:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1375,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7561:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7567:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7561:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1377,
														"name": "start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "7580:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7561:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1374,
												"id": 1379,
												"nodeType": "Return",
												"src": "7554:31:9"
											}
										]
									},
									"documentation": {
										"id": 1370,
										"nodeType": "StructuredDocumentation",
										"src": "7393:95:9",
										"text": " @dev Check if vesting has started\n @return True if vesting has started"
									},
									"functionSelector": "44691f7e",
									"id": 1381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasStarted",
									"nameLocation": "7502:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7512:2:9"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "7538:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1372,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7538:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7537:6:9"
									},
									"scope": 1440,
									"src": "7493:99:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1394,
										"nodeType": "Block",
										"src": "7755:56:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1387,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7772:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7778:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7772:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1389,
															"name": "start",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "7791:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1390,
															"name": "cliff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "7799:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7791:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7772:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1386,
												"id": 1393,
												"nodeType": "Return",
												"src": "7765:39:9"
											}
										]
									},
									"documentation": {
										"id": 1382,
										"nodeType": "StructuredDocumentation",
										"src": "7598:101:9",
										"text": " @dev Check if cliff period has ended\n @return True if cliff period has ended"
									},
									"functionSelector": "253254d6",
									"id": 1395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cliffEnded",
									"nameLocation": "7713:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7723:2:9"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "7749:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1384,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7749:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7748:6:9"
									},
									"scope": 1440,
									"src": "7704:107:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1408,
										"nodeType": "Block",
										"src": "7962:59:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1401,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7979:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7985:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7979:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1403,
															"name": "start",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "7998:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1404,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "8006:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7998:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7979:35:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1400,
												"id": 1407,
												"nodeType": "Return",
												"src": "7972:42:9"
											}
										]
									},
									"documentation": {
										"id": 1396,
										"nodeType": "StructuredDocumentation",
										"src": "7817:91:9",
										"text": " @dev Check if vesting has ended\n @return True if vesting has ended"
									},
									"functionSelector": "ecb70fb7",
									"id": 1409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasEnded",
									"nameLocation": "7922:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7930:2:9"
									},
									"returnParameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "7956:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1398,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7956:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7955:6:9"
									},
									"scope": 1440,
									"src": "7913:108:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1438,
										"nodeType": "Block",
										"src": "8289:137:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1420,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1412,
																"src": "8307:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1423,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 903,
																		"src": "8325:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8317:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1421,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8317:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8317:14:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8307:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207265636f7665722076657374696e6720746f6b656e",
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8333:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4221c9f1cf6016d1dc194caf7e44a3291af146cc6529a1440a478135cd625fb2",
																"typeString": "literal_string \"Cannot recover vesting token\""
															},
															"value": "Cannot recover vesting token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4221c9f1cf6016d1dc194caf7e44a3291af146cc6529a1440a478135cd625fb2",
																"typeString": "literal_string \"Cannot recover vesting token\""
															}
														],
														"id": 1419,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8299:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8299:65:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1428,
												"nodeType": "ExpressionStatement",
												"src": "8299:65:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1433,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "8402:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8402:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1435,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1414,
															"src": "8411:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1430,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1412,
																	"src": "8381:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1429,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "8374:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8374:14:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8389:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 425,
														"src": "8374:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8374:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1437,
												"nodeType": "ExpressionStatement",
												"src": "8374:45:9"
											}
										]
									},
									"documentation": {
										"id": 1410,
										"nodeType": "StructuredDocumentation",
										"src": "8027:179:9",
										"text": " @dev Emergency function to recover tokens sent to this contract by mistake\n @param _token Token address to recover\n @param _amount Amount to recover"
									},
									"functionSelector": "9639011e",
									"id": 1439,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1417,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1416,
												"name": "onlyOwner",
												"nameLocations": [
													"8279:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "8279:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8279:9:9"
										}
									],
									"name": "emergencyRecover",
									"nameLocation": "8220:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "8245:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "8237:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8237:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "8261:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "8253:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8253:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8236:33:9"
									},
									"returnParameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8289:0:9"
									},
									"scope": 1440,
									"src": "8211:215:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1441,
							"src": "298:8130:9",
							"usedErrors": [
								13,
								18,
								392
							],
							"usedEvents": [
								24,
								927,
								933,
								947
							]
						}
					],
					"src": "32:8397:9"
				},
				"id": 9
			}
		}
	}
}