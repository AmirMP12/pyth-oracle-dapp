{
	"id": "a15a45ad3cbbdf26d24f6e1cea6f3295",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"./VestedToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\n\ncontract VestedToken is ERC20, Ownable, Pausable {\n    // Token metadata\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    // Vesting tracking\n    mapping(address => uint256) public vestedBalances;\n    mapping(address => bool) public vestingContracts;\n\n    // Allocation management\n    mapping(string => uint256) public categoryAllocations;\n    mapping(address => string) public beneficiaryCategories;\n\n    // Initialization flag for minimal proxy\n    bool private _initialized;\n\n    // Events\n    event VestingContractAdded(address indexed vestingContract);\n    event VestingContractRemoved(address indexed vestingContract);\n    event CategoryAllocationSet(string category, uint256 amount);\n    event BeneficiaryCategorySet(address indexed beneficiary, string category);\n    event TokenInitialized(string name, string symbol, uint256 totalSupply, address owner);\n\n    /**\n     * @dev Constructor for minimal proxy pattern - should not be called directly\n     */\n    constructor() ERC20(\"\", \"\") Ownable(msg.sender) {\n        // This constructor is only for the implementation contract\n        // Actual initialization happens in initialize() function\n    }\n\n    /**\n     * @dev Initialize function for minimal proxy pattern\n     * @param name_ Token name\n     * @param symbol_ Token symbol\n     * @param totalSupply_ Total token supply\n     * @param owner_ Token owner address\n     */\n    function initialize(\n        string memory name_,\n        string memory symbol_,\n        uint256 totalSupply_,\n        address owner_\n    ) external {\n        require(!_initialized, \"Already initialized\");\n        require(bytes(name_).length > 0, \"Name cannot be empty\");\n        require(bytes(symbol_).length > 0, \"Symbol cannot be empty\");\n        require(totalSupply_ > 0, \"Total supply must be greater than 0\");\n        require(owner_ != address(0), \"Invalid owner address\");\n\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = 18;\n\n        _transferOwnership(owner_);\n        _mint(owner_, totalSupply_);\n        _initialized = true;\n\n        emit TokenInitialized(name_, symbol_, totalSupply_, owner_);\n    }\n\n    /**\n     * @dev Returns the name of the token\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev Check if token is initialized\n     */\n    function isInitialized() external view returns (bool) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Add a vesting contract address\n     * @param vestingContract Address of the vesting contract\n     */\n    function addVestingContract(address vestingContract) external onlyOwner {\n        require(vestingContract != address(0), \"Invalid vesting contract\");\n        require(!vestingContracts[vestingContract], \"Vesting contract already added\");\n\n        vestingContracts[vestingContract] = true;\n        emit VestingContractAdded(vestingContract);\n    }\n\n    /**\n     * @dev Remove a vesting contract address\n     * @param vestingContract Address of the vesting contract\n     */\n    function removeVestingContract(address vestingContract) external onlyOwner {\n        require(vestingContracts[vestingContract], \"Vesting contract not found\");\n\n        vestingContracts[vestingContract] = false;\n        emit VestingContractRemoved(vestingContract);\n    }\n\n    /**\n     * @dev Set allocation for a category\n     * @param category Category name\n     * @param amount Allocation amount\n     */\n    function setCategoryAllocation(string memory category, uint256 amount) external onlyOwner {\n        require(bytes(category).length > 0, \"Category cannot be empty\");\n        require(amount > 0, \"Amount must be greater than 0\");\n\n        categoryAllocations[category] = amount;\n        emit CategoryAllocationSet(category, amount);\n    }\n\n    /**\n     * @dev Set beneficiary category\n     * @param beneficiary Beneficiary address\n     * @param category Category name\n     */\n    function setBeneficiaryCategory(address beneficiary, string memory category) external onlyOwner {\n        require(beneficiary != address(0), \"Invalid beneficiary address\");\n        require(bytes(category).length > 0, \"Category cannot be empty\");\n\n        beneficiaryCategories[beneficiary] = category;\n        emit BeneficiaryCategorySet(beneficiary, category);\n    }\n\n    /**\n     * @dev Mint tokens with vesting allocation\n     * @param to Recipient address\n     * @param amount Token amount\n     * @param vestingContract Vesting contract address\n     */\n    function mintWithVesting(\n        address to,\n        uint256 amount,\n        address vestingContract\n    ) external onlyOwner {\n        require(to != address(0), \"Invalid recipient\");\n        require(amount > 0, \"Amount must be greater than 0\");\n        require(vestingContracts[vestingContract], \"Invalid vesting contract\");\n\n        vestedBalances[to] += amount;\n        _mint(vestingContract, amount);\n    }\n\n    /**\n     * @dev Get vested balance for an address\n     * @param account Address to check\n     * @return Vested balance amount\n     */\n    function getVestedBalance(address account) external view returns (uint256) {\n        return vestedBalances[account];\n    }\n\n    /**\n     * @dev Get category allocation\n     * @param category Category name\n     * @return Allocation amount\n     */\n    function getCategoryAllocation(string memory category) external view returns (uint256) {\n        return categoryAllocations[category];\n    }\n\n    /**\n     * @dev Get beneficiary category\n     * @param beneficiary Beneficiary address\n     * @return Category name\n     */\n    function getBeneficiaryCategory(address beneficiary) external view returns (string memory) {\n        return beneficiaryCategories[beneficiary];\n    }\n\n    /**\n     * @dev Pause token transfers\n     */\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    /**\n     * @dev Unpause token transfers\n     */\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    /**\n     * @dev Burn tokens (owner only)\n     * @param amount Amount to burn\n     */\n    function burn(uint256 amount) external onlyOwner {\n        _burn(msg.sender, amount);\n    }\n\n    /**\n     * @dev Burn tokens from specific address (owner only)\n     * @param from Address to burn from\n     * @param amount Amount to burn\n     */\n    function burnFrom(address from, uint256 amount) external onlyOwner {\n        _burn(from, amount);\n    }\n}"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"./VestedToken.sol": {
				"VestedToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "category",
									"type": "string"
								}
							],
							"name": "BeneficiaryCategorySet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "category",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "CategoryAllocationSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalSupply",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "TokenInitialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "vestingContract",
									"type": "address"
								}
							],
							"name": "VestingContractAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "vestingContract",
									"type": "address"
								}
							],
							"name": "VestingContractRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "vestingContract",
									"type": "address"
								}
							],
							"name": "addVestingContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "beneficiaryCategories",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "categoryAllocations",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "getBeneficiaryCategory",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "category",
									"type": "string"
								}
							],
							"name": "getCategoryAllocation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getVestedBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "totalSupply_",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isInitialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "vestingContract",
									"type": "address"
								}
							],
							"name": "mintWithVesting",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "vestingContract",
									"type": "address"
								}
							],
							"name": "removeVestingContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "category",
									"type": "string"
								}
							],
							"name": "setBeneficiaryCategory",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "category",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "setCategoryAllocation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "vestedBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "vestingContracts",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"addVestingContract(address)": {
								"details": "Add a vesting contract address",
								"params": {
									"vestingContract": "Address of the vesting contract"
								}
							},
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"burn(uint256)": {
								"details": "Burn tokens (owner only)",
								"params": {
									"amount": "Amount to burn"
								}
							},
							"burnFrom(address,uint256)": {
								"details": "Burn tokens from specific address (owner only)",
								"params": {
									"amount": "Amount to burn",
									"from": "Address to burn from"
								}
							},
							"constructor": {
								"details": "Constructor for minimal proxy pattern - should not be called directly"
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation"
							},
							"getBeneficiaryCategory(address)": {
								"details": "Get beneficiary category",
								"params": {
									"beneficiary": "Beneficiary address"
								},
								"returns": {
									"_0": "Category name"
								}
							},
							"getCategoryAllocation(string)": {
								"details": "Get category allocation",
								"params": {
									"category": "Category name"
								},
								"returns": {
									"_0": "Allocation amount"
								}
							},
							"getVestedBalance(address)": {
								"details": "Get vested balance for an address",
								"params": {
									"account": "Address to check"
								},
								"returns": {
									"_0": "Vested balance amount"
								}
							},
							"initialize(string,string,uint256,address)": {
								"details": "Initialize function for minimal proxy pattern",
								"params": {
									"name_": "Token name",
									"owner_": "Token owner address",
									"symbol_": "Token symbol",
									"totalSupply_": "Total token supply"
								}
							},
							"isInitialized()": {
								"details": "Check if token is initialized"
							},
							"mintWithVesting(address,uint256,address)": {
								"details": "Mint tokens with vesting allocation",
								"params": {
									"amount": "Token amount",
									"to": "Recipient address",
									"vestingContract": "Vesting contract address"
								}
							},
							"name()": {
								"details": "Returns the name of the token"
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pause()": {
								"details": "Pause token transfers"
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"removeVestingContract(address)": {
								"details": "Remove a vesting contract address",
								"params": {
									"vestingContract": "Address of the vesting contract"
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setBeneficiaryCategory(address,string)": {
								"details": "Set beneficiary category",
								"params": {
									"beneficiary": "Beneficiary address",
									"category": "Category name"
								}
							},
							"setCategoryAllocation(string,uint256)": {
								"details": "Set allocation for a category",
								"params": {
									"amount": "Allocation amount",
									"category": "Category name"
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token"
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"unpause()": {
								"details": "Unpause token transfers"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"./VestedToken.sol\":224:7033  contract VestedToken is ERC20, Ownable, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"./VestedToken.sol\":1229:1418  constructor() ERC20(\"\", \"\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"./VestedToken.sol\":1265:1275  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_14\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  0x05\n  0x14\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"./VestedToken.sol\":224:7033  contract VestedToken is ERC20, Ownable, Pausable {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_20:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_21:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_22:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_23:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_48\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_48:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_49\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_50\n  tag_22\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":714:798   */\ntag_49:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_24:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_25:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_26:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_27:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_55\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_26\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1429:1468   */\n  tag_56\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_26\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_28:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_29:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_30:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_60\n    /* \"#utility.yul\":1818:1852   */\n  tag_61\n    /* \"#utility.yul\":1827:1851   */\n  tag_62\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_28\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1818:1852   */\n  tag_29\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1800:1853   */\n  tag_28\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_31:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_32:\n    /* \"#utility.yul\":2056:2095   */\n  tag_65\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_30\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2117:2208   */\n  tag_66\n    /* \"#utility.yul\":2166:2207   */\n  tag_67\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_31\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_27\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_33:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_34:\n    /* \"#utility.yul\":2377:2409   */\n  tag_70\n  tag_33\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2418:2483   */\n  tag_71\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_32\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_35:\n    /* \"#utility.yul\":2555:2675   */\ntag_73:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_76\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_34\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_73)\ntag_75:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_36:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_79\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_24\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2906:2935   */\n  tag_80\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_25\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_81:\n    /* \"#utility.yul\":3133:3213   */\n  tag_82\n    /* \"#utility.yul\":3189:3211   */\n  tag_83\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_25\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_35\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_78:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_37:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_38:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_86\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_37\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_39:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_88\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_38\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_8:\n    /* \"#utility.yul\":3950:3987   */\n  tag_90\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_20\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_92\n  tag_21\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":4038:4094   */\ntag_91:\n    /* \"#utility.yul\":4118:4156   */\n  tag_93\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_23\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4203:4270   */\n  tag_94\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_36\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_96\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_97:\n    /* \"#utility.yul\":5144:5211   */\n  tag_98\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_39\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_95)\n    /* \"#utility.yul\":4365:4983   */\ntag_96:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_99\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_24\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_100:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_100)\ntag_102:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_104\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_38\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_103:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_95:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_40:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_41:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_107\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_40\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_42:\n    /* \"#utility.yul\":5555:5579   */\n  tag_109\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_41\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_13:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_111\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_42\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"./VestedToken.sol\":224:7033  contract VestedToken is ERC20, Ownable, Pausable {... */\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"./VestedToken.sol\":224:7033  contract VestedToken is ERC20, Ownable, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xd6458285\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xd6458285\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xecbc5095\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_33\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0xa9059cbb\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xbc3bea5e\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xbd3a13f6\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xcb3fdb61\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x8456cb59\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xa00686f1\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x715018a6\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x7f58b9d3\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x7fb36099\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x392e53cd\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x4ebc47f8\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x4ebc47f8\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x66368fb6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x392e53cd\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x4cf590b0\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x19eccdfd\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x19eccdfd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x37915874\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"./VestedToken.sol\":2448:2546  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"./VestedToken.sol\":4556:4923  function setBeneficiaryCategory(address beneficiary, string memory category) external onlyOwner {... */\n    tag_6:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"./VestedToken.sol\":2815:2913  function decimals() public view virtual override returns (uint8) {... */\n    tag_8:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"./VestedToken.sol\":464:512  mapping(address => bool) public vestingContracts */\n    tag_9:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"./VestedToken.sol\":2977:3067  function isInitialized() external view returns (bool) {... */\n    tag_10:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"./VestedToken.sol\":6520:6585  function unpause() external onlyOwner {... */\n    tag_11:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      stop\n        /* \"./VestedToken.sol\":6680:6771  function burn(uint256 amount) external onlyOwner {... */\n    tag_12:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      stop\n        /* \"./VestedToken.sol\":6196:6345  function getBeneficiaryCategory(address beneficiary) external view returns (string memory) {... */\n    tag_13:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"./VestedToken.sol\":607:662  mapping(address => string) public beneficiaryCategories */\n    tag_14:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_15:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"./VestedToken.sol\":548:601  mapping(string => uint256) public categoryAllocations */\n    tag_16:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_17:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_18:\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      stop\n        /* \"./VestedToken.sol\":6928:7031  function burnFrom(address from, uint256 amount) external onlyOwner {... */\n    tag_19:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n    tag_104:\n      stop\n        /* \"./VestedToken.sol\":5672:5794  function getVestedBalance(address account) external view returns (uint256) {... */\n    tag_20:\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"./VestedToken.sol\":5922:6062  function getCategoryAllocation(string memory category) external view returns (uint256) {... */\n    tag_21:\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"./VestedToken.sol\":6401:6462  function pause() external onlyOwner {... */\n    tag_22:\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_23:\n      tag_117\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"./VestedToken.sol\":2612:2714  function symbol() public view virtual override returns (string memory) {... */\n    tag_24:\n      tag_121\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      tag_123\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"./VestedToken.sol\":3194:3539  function addVestingContract(address vestingContract) external onlyOwner {... */\n    tag_25:\n      tag_124\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_125\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_125:\n      tag_126\n      jump\t// in\n    tag_124:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_26:\n      tag_127\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      tag_130\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"./VestedToken.sol\":3669:3939  function removeVestingContract(address vestingContract) external onlyOwner {... */\n    tag_27:\n      tag_131\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n    tag_131:\n      stop\n        /* \"./VestedToken.sol\":1651:2384  function initialize(... */\n    tag_28:\n      tag_134\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      tag_137\n      jump\t// in\n    tag_134:\n      stop\n        /* \"./VestedToken.sol\":409:458  mapping(address => uint256) public vestedBalances */\n    tag_29:\n      tag_138\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_139\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_139:\n      tag_140\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      tag_141\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"./VestedToken.sol\":4079:4414  function setCategoryAllocation(string memory category, uint256 amount) external onlyOwner {... */\n    tag_30:\n      tag_142\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_143\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      tag_145\n      jump\t// in\n    tag_142:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_31:\n      tag_146\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_147\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      tag_149\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      tag_150\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"./VestedToken.sol\":5117:5528  function mintWithVesting(... */\n    tag_32:\n      tag_151\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_152\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      tag_154\n      jump\t// in\n    tag_151:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_33:\n      tag_155\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_156:\n      tag_157\n      jump\t// in\n    tag_155:\n      stop\n        /* \"./VestedToken.sol\":2448:2546  function name() public view virtual override returns (string memory) {... */\n    tag_42:\n        /* \"./VestedToken.sol\":2502:2515  string memory */\n      0x60\n        /* \"./VestedToken.sol\":2534:2539  _name */\n      0x06\n        /* \"./VestedToken.sol\":2527:2539  return _name */\n      dup1\n      sload\n      tag_159\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_161\n      swap1\n      tag_160\n      jump\t// in\n    tag_161:\n      dup1\n      iszero\n      tag_162\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_163\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_162)\n    tag_163:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_164:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_164\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_162:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"./VestedToken.sol\":2448:2546  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3975:3979  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3991:4004  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4017  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3991:4019  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4038:4043  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4045:4052  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4054:4059  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4037  _approve */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4077:4081  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4070:4081  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2855:2862  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2881:2893  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2874:2893  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"./VestedToken.sol\":4556:4923  function setBeneficiaryCategory(address beneficiary, string memory category) external onlyOwner {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_172\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_172:\n        /* \"./VestedToken.sol\":4693:4694  0 */\n      0x00\n        /* \"./VestedToken.sol\":4670:4695  beneficiary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"./VestedToken.sol\":4670:4681  beneficiary */\n      dup3\n        /* \"./VestedToken.sol\":4670:4695  beneficiary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"./VestedToken.sol\":4662:4727  require(beneficiary != address(0), \"Invalid beneficiary address\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n        /* \"./VestedToken.sol\":4770:4771  0 */\n      0x00\n        /* \"./VestedToken.sol\":4751:4759  category */\n      dup2\n        /* \"./VestedToken.sol\":4745:4767  bytes(category).length */\n      mload\n        /* \"./VestedToken.sol\":4745:4771  bytes(category).length > 0 */\n      gt\n        /* \"./VestedToken.sol\":4737:4800  require(bytes(category).length > 0, \"Category cannot be empty\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"./VestedToken.sol\":4848:4856  category */\n      dup1\n        /* \"./VestedToken.sol\":4811:4832  beneficiaryCategories */\n      0x0c\n        /* \"./VestedToken.sol\":4811:4845  beneficiaryCategories[beneficiary] */\n      0x00\n        /* \"./VestedToken.sol\":4833:4844  beneficiary */\n      dup5\n        /* \"./VestedToken.sol\":4811:4845  beneficiaryCategories[beneficiary] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"./VestedToken.sol\":4811:4856  beneficiaryCategories[beneficiary] = category */\n      swap1\n      dup2\n      tag_181\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      pop\n        /* \"./VestedToken.sol\":4894:4905  beneficiary */\n      dup2\n        /* \"./VestedToken.sol\":4871:4916  BeneficiaryCategorySet(beneficiary, category) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa110b2daa9b9328e235e98c75405f18d092b0d0edd4574cc8d80a41908fbf0bf\n        /* \"./VestedToken.sol\":4907:4915  category */\n      dup3\n        /* \"./VestedToken.sol\":4871:4916  BeneficiaryCategorySet(beneficiary, category) */\n      mload(0x40)\n      tag_183\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"./VestedToken.sol\":4556:4923  function setBeneficiaryCategory(address beneficiary, string memory category) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4767:4771  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4783:4798  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4813  _msgSender() */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4811  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4813  _msgSender() */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4783:4813  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4839:4843  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4845:4852  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4854:4859  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4838  _spendAllowance */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      tag_188\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4880:4884  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4886:4888  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4890:4895  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4879  _transfer */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4913:4917  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4906:4917  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"./VestedToken.sol\":2815:2913  function decimals() public view virtual override returns (uint8) {... */\n    tag_65:\n        /* \"./VestedToken.sol\":2873:2878  uint8 */\n      0x00\n        /* \"./VestedToken.sol\":2897:2906  _decimals */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"./VestedToken.sol\":2890:2906  return _decimals */\n      swap1\n      pop\n        /* \"./VestedToken.sol\":2815:2913  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"./VestedToken.sol\":464:512  mapping(address => bool) public vestingContracts */\n    tag_71:\n      mstore(0x20, 0x0a)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"./VestedToken.sol\":2977:3067  function isInitialized() external view returns (bool) {... */\n    tag_74:\n        /* \"./VestedToken.sol\":3025:3029  bool */\n      0x00\n        /* \"./VestedToken.sol\":3048:3060  _initialized */\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"./VestedToken.sol\":3041:3060  return _initialized */\n      swap1\n      pop\n        /* \"./VestedToken.sol\":2977:3067  function isInitialized() external view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"./VestedToken.sol\":6520:6585  function unpause() external onlyOwner {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_193\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_193:\n        /* \"./VestedToken.sol\":6568:6578  _unpause() */\n      tag_195\n        /* \"./VestedToken.sol\":6568:6576  _unpause */\n      tag_196\n        /* \"./VestedToken.sol\":6568:6578  _unpause() */\n      jump\t// in\n    tag_195:\n        /* \"./VestedToken.sol\":6520:6585  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"./VestedToken.sol\":6680:6771  function burn(uint256 amount) external onlyOwner {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_198\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_198:\n        /* \"./VestedToken.sol\":6739:6764  _burn(msg.sender, amount) */\n      tag_200\n        /* \"./VestedToken.sol\":6745:6755  msg.sender */\n      caller\n        /* \"./VestedToken.sol\":6757:6763  amount */\n      dup3\n        /* \"./VestedToken.sol\":6739:6744  _burn */\n      tag_201\n        /* \"./VestedToken.sol\":6739:6764  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_200:\n        /* \"./VestedToken.sol\":6680:6771  function burn(uint256 amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"./VestedToken.sol\":6196:6345  function getBeneficiaryCategory(address beneficiary) external view returns (string memory) {... */\n    tag_84:\n        /* \"./VestedToken.sol\":6272:6285  string memory */\n      0x60\n        /* \"./VestedToken.sol\":6304:6325  beneficiaryCategories */\n      0x0c\n        /* \"./VestedToken.sol\":6304:6338  beneficiaryCategories[beneficiary] */\n      0x00\n        /* \"./VestedToken.sol\":6326:6337  beneficiary */\n      dup4\n        /* \"./VestedToken.sol\":6304:6338  beneficiaryCategories[beneficiary] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"./VestedToken.sol\":6297:6338  return beneficiaryCategories[beneficiary] */\n      dup1\n      sload\n      tag_203\n      swap1\n      tag_160\n      jump\t// in\n    tag_203:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_204\n      swap1\n      tag_160\n      jump\t// in\n    tag_204:\n      dup1\n      iszero\n      tag_205\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_206\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_205)\n    tag_206:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_207:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_207\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_205:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"./VestedToken.sol\":6196:6345  function getBeneficiaryCategory(address beneficiary) external view returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"./VestedToken.sol\":607:662  mapping(address => string) public beneficiaryCategories */\n    tag_88:\n      mstore(0x20, 0x0c)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      sload\n      tag_208\n      swap1\n      tag_160\n      jump\t// in\n    tag_208:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_209\n      swap1\n      tag_160\n      jump\t// in\n    tag_209:\n      dup1\n      iszero\n      tag_210\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_211\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_210)\n    tag_211:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_212:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_212\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_210:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x05\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1678:1692  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"./VestedToken.sol\":548:601  mapping(string => uint256) public categoryAllocations */\n    tag_96:\n      0x0b\n      dup2\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      dup3\n      add\n      dup1\n      mload\n      dup5\n      dup3\n      mstore\n      0x20\n      dup4\n      add\n      0x20\n      dup6\n      add\n      keccak256\n      dup2\n      dup4\n      mstore\n      dup1\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2998:3005  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3033  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3034:3041  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3017:3042  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_216\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_218\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"./VestedToken.sol\":6928:7031  function burnFrom(address from, uint256 amount) external onlyOwner {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_221\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_221:\n        /* \"./VestedToken.sol\":7005:7024  _burn(from, amount) */\n      tag_223\n        /* \"./VestedToken.sol\":7011:7015  from */\n      dup3\n        /* \"./VestedToken.sol\":7017:7023  amount */\n      dup3\n        /* \"./VestedToken.sol\":7005:7010  _burn */\n      tag_201\n        /* \"./VestedToken.sol\":7005:7024  _burn(from, amount) */\n      jump\t// in\n    tag_223:\n        /* \"./VestedToken.sol\":6928:7031  function burnFrom(address from, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"./VestedToken.sol\":5672:5794  function getVestedBalance(address account) external view returns (uint256) {... */\n    tag_109:\n        /* \"./VestedToken.sol\":5738:5745  uint256 */\n      0x00\n        /* \"./VestedToken.sol\":5764:5778  vestedBalances */\n      0x09\n        /* \"./VestedToken.sol\":5764:5787  vestedBalances[account] */\n      0x00\n        /* \"./VestedToken.sol\":5779:5786  account */\n      dup4\n        /* \"./VestedToken.sol\":5764:5787  vestedBalances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"./VestedToken.sol\":5757:5787  return vestedBalances[account] */\n      swap1\n      pop\n        /* \"./VestedToken.sol\":5672:5794  function getVestedBalance(address account) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"./VestedToken.sol\":5922:6062  function getCategoryAllocation(string memory category) external view returns (uint256) {... */\n    tag_113:\n        /* \"./VestedToken.sol\":6000:6007  uint256 */\n      0x00\n        /* \"./VestedToken.sol\":6026:6045  categoryAllocations */\n      0x0b\n        /* \"./VestedToken.sol\":6046:6054  category */\n      dup3\n        /* \"./VestedToken.sol\":6026:6055  categoryAllocations[category] */\n      mload(0x40)\n      tag_226\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_226:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"./VestedToken.sol\":6019:6055  return categoryAllocations[category] */\n      swap1\n      pop\n        /* \"./VestedToken.sol\":5922:6062  function getCategoryAllocation(string memory category) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"./VestedToken.sol\":6401:6462  function pause() external onlyOwner {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_229\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_229:\n        /* \"./VestedToken.sol\":6447:6455  _pause() */\n      tag_231\n        /* \"./VestedToken.sol\":6447:6453  _pause */\n      tag_232\n        /* \"./VestedToken.sol\":6447:6455  _pause() */\n      jump\t// in\n    tag_231:\n        /* \"./VestedToken.sol\":6401:6462  function pause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"./VestedToken.sol\":2612:2714  function symbol() public view virtual override returns (string memory) {... */\n    tag_122:\n        /* \"./VestedToken.sol\":2668:2681  string memory */\n      0x60\n        /* \"./VestedToken.sol\":2700:2707  _symbol */\n      0x07\n        /* \"./VestedToken.sol\":2693:2707  return _symbol */\n      dup1\n      sload\n      tag_235\n      swap1\n      tag_160\n      jump\t// in\n    tag_235:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_236\n      swap1\n      tag_160\n      jump\t// in\n    tag_236:\n      dup1\n      iszero\n      tag_237\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_238\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_237)\n    tag_238:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_239:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_239\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_237:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"./VestedToken.sol\":2612:2714  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"./VestedToken.sol\":3194:3539  function addVestingContract(address vestingContract) external onlyOwner {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_241\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_241:\n        /* \"./VestedToken.sol\":3311:3312  0 */\n      0x00\n        /* \"./VestedToken.sol\":3284:3313  vestingContract != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"./VestedToken.sol\":3284:3299  vestingContract */\n      dup2\n        /* \"./VestedToken.sol\":3284:3313  vestingContract != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"./VestedToken.sol\":3276:3342  require(vestingContract != address(0), \"Invalid vesting contract\") */\n      tag_243\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_244\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_243:\n        /* \"./VestedToken.sol\":3361:3377  vestingContracts */\n      0x0a\n        /* \"./VestedToken.sol\":3361:3394  vestingContracts[vestingContract] */\n      0x00\n        /* \"./VestedToken.sol\":3378:3393  vestingContract */\n      dup3\n        /* \"./VestedToken.sol\":3361:3394  vestingContracts[vestingContract] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"./VestedToken.sol\":3360:3394  !vestingContracts[vestingContract] */\n      iszero\n        /* \"./VestedToken.sol\":3352:3429  require(!vestingContracts[vestingContract], \"Vesting contract already added\") */\n      tag_246\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_247\n      swap1\n      tag_248\n      jump\t// in\n    tag_247:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_246:\n        /* \"./VestedToken.sol\":3476:3480  true */\n      0x01\n        /* \"./VestedToken.sol\":3440:3456  vestingContracts */\n      0x0a\n        /* \"./VestedToken.sol\":3440:3473  vestingContracts[vestingContract] */\n      0x00\n        /* \"./VestedToken.sol\":3457:3472  vestingContract */\n      dup4\n        /* \"./VestedToken.sol\":3440:3473  vestingContracts[vestingContract] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"./VestedToken.sol\":3440:3480  vestingContracts[vestingContract] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"./VestedToken.sol\":3516:3531  vestingContract */\n      dup1\n        /* \"./VestedToken.sol\":3495:3532  VestingContractAdded(vestingContract) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6a45208724d4b6f6774a21924d8ada0231f197811681096d5fd6b5f22e6e73d3\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"./VestedToken.sol\":3194:3539  function addVestingContract(address vestingContract) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3313:3317  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3342  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      tag_250\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3355  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      jump\t// in\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3357  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3377:3382  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3386  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3388:3393  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3376  _transfer */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3411:3415  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3404:3415  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"./VestedToken.sol\":3669:3939  function removeVestingContract(address vestingContract) external onlyOwner {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_253\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_253:\n        /* \"./VestedToken.sol\":3762:3778  vestingContracts */\n      0x0a\n        /* \"./VestedToken.sol\":3762:3795  vestingContracts[vestingContract] */\n      0x00\n        /* \"./VestedToken.sol\":3779:3794  vestingContract */\n      dup3\n        /* \"./VestedToken.sol\":3762:3795  vestingContracts[vestingContract] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"./VestedToken.sol\":3754:3826  require(vestingContracts[vestingContract], \"Vesting contract not found\") */\n      tag_255\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_256\n      swap1\n      tag_257\n      jump\t// in\n    tag_256:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_255:\n        /* \"./VestedToken.sol\":3873:3878  false */\n      0x00\n        /* \"./VestedToken.sol\":3837:3853  vestingContracts */\n      0x0a\n        /* \"./VestedToken.sol\":3837:3870  vestingContracts[vestingContract] */\n      0x00\n        /* \"./VestedToken.sol\":3854:3869  vestingContract */\n      dup4\n        /* \"./VestedToken.sol\":3837:3870  vestingContracts[vestingContract] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"./VestedToken.sol\":3837:3878  vestingContracts[vestingContract] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"./VestedToken.sol\":3916:3931  vestingContract */\n      dup1\n        /* \"./VestedToken.sol\":3893:3932  VestingContractRemoved(vestingContract) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x93c4daca93fe23045ea63d803db724ccff33790f1b2434276479f728a4e38f99\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"./VestedToken.sol\":3669:3939  function removeVestingContract(address vestingContract) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"./VestedToken.sol\":1651:2384  function initialize(... */\n    tag_137:\n        /* \"./VestedToken.sol\":1819:1831  _initialized */\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"./VestedToken.sol\":1818:1831  !_initialized */\n      iszero\n        /* \"./VestedToken.sol\":1810:1855  require(!_initialized, \"Already initialized\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_261\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_259:\n        /* \"./VestedToken.sol\":1895:1896  0 */\n      0x00\n        /* \"./VestedToken.sol\":1879:1884  name_ */\n      dup5\n        /* \"./VestedToken.sol\":1873:1892  bytes(name_).length */\n      mload\n        /* \"./VestedToken.sol\":1873:1896  bytes(name_).length > 0 */\n      gt\n        /* \"./VestedToken.sol\":1865:1921  require(bytes(name_).length > 0, \"Name cannot be empty\") */\n      tag_262\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_263\n      swap1\n      tag_264\n      jump\t// in\n    tag_263:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_262:\n        /* \"./VestedToken.sol\":1963:1964  0 */\n      0x00\n        /* \"./VestedToken.sol\":1945:1952  symbol_ */\n      dup4\n        /* \"./VestedToken.sol\":1939:1960  bytes(symbol_).length */\n      mload\n        /* \"./VestedToken.sol\":1939:1964  bytes(symbol_).length > 0 */\n      gt\n        /* \"./VestedToken.sol\":1931:1991  require(bytes(symbol_).length > 0, \"Symbol cannot be empty\") */\n      tag_265\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap1\n      tag_267\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_265:\n        /* \"./VestedToken.sol\":2024:2025  0 */\n      0x00\n        /* \"./VestedToken.sol\":2009:2021  totalSupply_ */\n      dup3\n        /* \"./VestedToken.sol\":2009:2025  totalSupply_ > 0 */\n      gt\n        /* \"./VestedToken.sol\":2001:2065  require(totalSupply_ > 0, \"Total supply must be greater than 0\") */\n      tag_268\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap1\n      tag_270\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_268:\n        /* \"./VestedToken.sol\":2101:2102  0 */\n      0x00\n        /* \"./VestedToken.sol\":2083:2103  owner_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"./VestedToken.sol\":2083:2089  owner_ */\n      dup2\n        /* \"./VestedToken.sol\":2083:2103  owner_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"./VestedToken.sol\":2075:2129  require(owner_ != address(0), \"Invalid owner address\") */\n      tag_271\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_272\n      swap1\n      tag_273\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_271:\n        /* \"./VestedToken.sol\":2148:2153  name_ */\n      dup4\n        /* \"./VestedToken.sol\":2140:2145  _name */\n      0x06\n        /* \"./VestedToken.sol\":2140:2153  _name = name_ */\n      swap1\n      dup2\n      tag_274\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_274:\n      pop\n        /* \"./VestedToken.sol\":2173:2180  symbol_ */\n      dup3\n        /* \"./VestedToken.sol\":2163:2170  _symbol */\n      0x07\n        /* \"./VestedToken.sol\":2163:2180  _symbol = symbol_ */\n      swap1\n      dup2\n      tag_275\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_275:\n      pop\n        /* \"./VestedToken.sol\":2202:2204  18 */\n      0x12\n        /* \"./VestedToken.sol\":2190:2199  _decimals */\n      0x08\n      0x00\n        /* \"./VestedToken.sol\":2190:2204  _decimals = 18 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"./VestedToken.sol\":2215:2241  _transferOwnership(owner_) */\n      tag_276\n        /* \"./VestedToken.sol\":2234:2240  owner_ */\n      dup2\n        /* \"./VestedToken.sol\":2215:2233  _transferOwnership */\n      tag_219\n        /* \"./VestedToken.sol\":2215:2241  _transferOwnership(owner_) */\n      jump\t// in\n    tag_276:\n        /* \"./VestedToken.sol\":2251:2278  _mint(owner_, totalSupply_) */\n      tag_277\n        /* \"./VestedToken.sol\":2257:2263  owner_ */\n      dup2\n        /* \"./VestedToken.sol\":2265:2277  totalSupply_ */\n      dup4\n        /* \"./VestedToken.sol\":2251:2256  _mint */\n      tag_278\n        /* \"./VestedToken.sol\":2251:2278  _mint(owner_, totalSupply_) */\n      jump\t// in\n    tag_277:\n        /* \"./VestedToken.sol\":2303:2307  true */\n      0x01\n        /* \"./VestedToken.sol\":2288:2300  _initialized */\n      0x0d\n      0x00\n        /* \"./VestedToken.sol\":2288:2307  _initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"./VestedToken.sol\":2323:2377  TokenInitialized(name_, symbol_, totalSupply_, owner_) */\n      0x12bdfd2f29cf0194cd626fbd8a4b8fd1de36748d1a1b936eac39fe35845c585a\n        /* \"./VestedToken.sol\":2340:2345  name_ */\n      dup5\n        /* \"./VestedToken.sol\":2347:2354  symbol_ */\n      dup5\n        /* \"./VestedToken.sol\":2356:2368  totalSupply_ */\n      dup5\n        /* \"./VestedToken.sol\":2370:2376  owner_ */\n      dup5\n        /* \"./VestedToken.sol\":2323:2377  TokenInitialized(name_, symbol_, totalSupply_, owner_) */\n      mload(0x40)\n      tag_279\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_280\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"./VestedToken.sol\":1651:2384  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"./VestedToken.sol\":409:458  mapping(address => uint256) public vestedBalances */\n    tag_140:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"./VestedToken.sol\":4079:4414  function setCategoryAllocation(string memory category, uint256 amount) external onlyOwner {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_282\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_282:\n        /* \"./VestedToken.sol\":4212:4213  0 */\n      0x00\n        /* \"./VestedToken.sol\":4193:4201  category */\n      dup3\n        /* \"./VestedToken.sol\":4187:4209  bytes(category).length */\n      mload\n        /* \"./VestedToken.sol\":4187:4213  bytes(category).length > 0 */\n      gt\n        /* \"./VestedToken.sol\":4179:4242  require(bytes(category).length > 0, \"Category cannot be empty\") */\n      tag_284\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_285\n      swap1\n      tag_180\n      jump\t// in\n    tag_285:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_284:\n        /* \"./VestedToken.sol\":4269:4270  0 */\n      0x00\n        /* \"./VestedToken.sol\":4260:4266  amount */\n      dup2\n        /* \"./VestedToken.sol\":4260:4270  amount > 0 */\n      gt\n        /* \"./VestedToken.sol\":4252:4304  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_286\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_287\n      swap1\n      tag_288\n      jump\t// in\n    tag_287:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_286:\n        /* \"./VestedToken.sol\":4347:4353  amount */\n      dup1\n        /* \"./VestedToken.sol\":4315:4334  categoryAllocations */\n      0x0b\n        /* \"./VestedToken.sol\":4335:4343  category */\n      dup4\n        /* \"./VestedToken.sol\":4315:4344  categoryAllocations[category] */\n      mload(0x40)\n      tag_289\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_289:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"./VestedToken.sol\":4315:4353  categoryAllocations[category] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"./VestedToken.sol\":4368:4407  CategoryAllocationSet(category, amount) */\n      0x40595e4d22661278feeff293e3de4334b9132b0bf1c2aac89a8ec5aedb2c11a4\n        /* \"./VestedToken.sol\":4390:4398  category */\n      dup3\n        /* \"./VestedToken.sol\":4400:4406  amount */\n      dup3\n        /* \"./VestedToken.sol\":4368:4407  CategoryAllocationSet(category, amount) */\n      mload(0x40)\n      tag_290\n      swap3\n      swap2\n      swap1\n      tag_291\n      jump\t// in\n    tag_290:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"./VestedToken.sol\":4079:4414  function setCategoryAllocation(string memory category, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3535:3542  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3572  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3573:3578  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3580:3587  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3554:3588  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"./VestedToken.sol\":5117:5528  function mintWithVesting(... */\n    tag_154:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_294\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_294:\n        /* \"./VestedToken.sol\":5276:5277  0 */\n      0x00\n        /* \"./VestedToken.sol\":5262:5278  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"./VestedToken.sol\":5262:5264  to */\n      dup4\n        /* \"./VestedToken.sol\":5262:5278  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"./VestedToken.sol\":5254:5300  require(to != address(0), \"Invalid recipient\") */\n      tag_296\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_297\n      swap1\n      tag_298\n      jump\t// in\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_296:\n        /* \"./VestedToken.sol\":5327:5328  0 */\n      0x00\n        /* \"./VestedToken.sol\":5318:5324  amount */\n      dup3\n        /* \"./VestedToken.sol\":5318:5328  amount > 0 */\n      gt\n        /* \"./VestedToken.sol\":5310:5362  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_299\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_300\n      swap1\n      tag_288\n      jump\t// in\n    tag_300:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_299:\n        /* \"./VestedToken.sol\":5380:5396  vestingContracts */\n      0x0a\n        /* \"./VestedToken.sol\":5380:5413  vestingContracts[vestingContract] */\n      0x00\n        /* \"./VestedToken.sol\":5397:5412  vestingContract */\n      dup3\n        /* \"./VestedToken.sol\":5380:5413  vestingContracts[vestingContract] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"./VestedToken.sol\":5372:5442  require(vestingContracts[vestingContract], \"Invalid vesting contract\") */\n      tag_301\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_302\n      swap1\n      tag_245\n      jump\t// in\n    tag_302:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_301:\n        /* \"./VestedToken.sol\":5475:5481  amount */\n      dup2\n        /* \"./VestedToken.sol\":5453:5467  vestedBalances */\n      0x09\n        /* \"./VestedToken.sol\":5453:5471  vestedBalances[to] */\n      0x00\n        /* \"./VestedToken.sol\":5468:5470  to */\n      dup6\n        /* \"./VestedToken.sol\":5453:5471  vestedBalances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"./VestedToken.sol\":5453:5481  vestedBalances[to] += amount */\n      dup3\n      dup3\n      sload\n      tag_303\n      swap2\n      swap1\n      tag_304\n      jump\t// in\n    tag_303:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"./VestedToken.sol\":5491:5521  _mint(vestingContract, amount) */\n      tag_305\n        /* \"./VestedToken.sol\":5497:5512  vestingContract */\n      dup2\n        /* \"./VestedToken.sol\":5514:5520  amount */\n      dup4\n        /* \"./VestedToken.sol\":5491:5496  _mint */\n      tag_278\n        /* \"./VestedToken.sol\":5491:5521  _mint(vestingContract, amount) */\n      jump\t// in\n    tag_305:\n        /* \"./VestedToken.sol\":5117:5528  function mintWithVesting(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_307\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_307:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_309\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_310\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_310:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_309:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_311\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_311:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      tag_314\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8723:8728  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8730:8737  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8739:8744  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8746:8750  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8722  _approve */\n      tag_315\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_317\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_317:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_318\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_318:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_319\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_320\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_320:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_321\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_321:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_319:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10442  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      tag_323\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10455:10460  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10462:10469  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10454  allowance */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      jump\t// in\n    tag_323:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10470  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10503:10520  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10500  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10520  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_324\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10559:10564  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10556  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10564  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n      iszero\n      tag_325\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10618:10625  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10643  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10645:10650  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10591:10651  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_326\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_327\n      jump\t// in\n    tag_326:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n    tag_325:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      tag_328\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10716:10721  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10730  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10751:10756  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10748  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10756  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10763  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10715  _approve */\n      tag_315\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_328:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n    tag_324:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10408:10795  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5396:5397  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5384  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n      tag_330\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5448:5449  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5451  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_331\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_331:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n    tag_330:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5489:5490  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5477  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n      tag_332\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5543:5544  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5514:5546  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_333\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_333:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n    tag_332:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      tag_334\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5574:5578  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5580:5582  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5584:5589  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5573  _update */\n      tag_335\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      jump\t// in\n    tag_334:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_337\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_338\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_337:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2501:2506  false */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2498  _paused */\n      0x05\n      0x14\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      tag_340\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2540  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      jump\t// in\n    tag_340:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_341\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_341:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7888:8094  function _burn(address account, uint256 value) internal {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7977:7978  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7958:7979  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7958:7965  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7958:7979  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7954:8043  if (account == address(0)) {... */\n      tag_343\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8029:8030  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8002:8032  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_344\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_344:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7954:8043  if (account == address(0)) {... */\n    tag_343:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8087  _update(account, address(0), value) */\n      tag_345\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8060:8067  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8077:8078  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8081:8086  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8059  _update */\n      tag_335\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8087  _update(account, address(0), value) */\n      jump\t// in\n    tag_345:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7888:8094  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_232:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_348\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_349\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_348:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x05\n      0x14\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_351\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2291  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      jump\t// in\n    tag_351:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      mload(0x40)\n      tag_352\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_352:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7451:7452  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7439  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n      tag_354\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7506  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_355:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n    tag_354:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n      tag_356\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7548:7555  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7557:7562  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  _update */\n      tag_335\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n      jump\t// in\n    tag_356:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_315:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9734:9735  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9722  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n      tag_358\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9788:9789  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9759:9791  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_359\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_359:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n    tag_358:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9834:9835  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9822  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n      tag_360\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9887:9888  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9859:9890  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_361\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_361:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n    tag_360:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9940:9945  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9921  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9922:9927  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9929:9936  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9945  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9959:9968  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n      iszero\n      tag_362\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10005:10012  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9998:10003  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10014:10019  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_363\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_363:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n    tag_362:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_335:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6017:6018  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6005  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      tag_365\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_366\n      swap2\n      swap1\n      tag_304\n      jump\t// in\n    tag_366:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      jump(tag_367)\n    tag_365:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6220  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6221:6225  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6226  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6258:6263  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6255  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n      iszero\n      tag_368\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6319  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6334:6339  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_369\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_327\n      jump\t// in\n    tag_369:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n    tag_368:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6507:6512  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6504  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6485:6489  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6175:6537  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n    tag_367:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6565:6566  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6553  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      tag_370\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6730:6735  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      jump(tag_371)\n    tag_370:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6942:6947  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6935:6937  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n    tag_371:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      mload(0x40)\n      tag_372\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_372:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_338:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      tag_374\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2017  paused */\n      tag_91\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      jump\t// in\n    tag_374:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_375\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_376\n      swap1\n      tag_377\n      jump\t// in\n    tag_376:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_375:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_349:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      tag_379\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1843  paused */\n      tag_91\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      jump\t// in\n    tag_379:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_380\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_381\n      swap1\n      tag_382\n      jump\t// in\n    tag_381:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_380:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_383:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_384:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_385:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_464:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_464)\n    tag_466:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_386:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_387:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_469\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_383\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":818:889   */\n      tag_470\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_384\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_471\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_385\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":988:1017   */\n      tag_472\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_386\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_44:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_474\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_387\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1349:1424   */\n    tag_388:\n        /* \"#utility.yul\":1382:1388   */\n      0x00\n        /* \"#utility.yul\":1415:1417   */\n      0x40\n        /* \"#utility.yul\":1409:1418   */\n      mload\n        /* \"#utility.yul\":1399:1418   */\n      swap1\n      pop\n        /* \"#utility.yul\":1349:1424   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_389:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1553:1670   */\n    tag_390:\n        /* \"#utility.yul\":1662:1663   */\n      0x00\n        /* \"#utility.yul\":1659:1660   */\n      dup1\n        /* \"#utility.yul\":1652:1664   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_391:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_392:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_480\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_391\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_393:\n        /* \"#utility.yul\":1983:2007   */\n      tag_482\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_392\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_483\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_483:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_394:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_485\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_393\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_395:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_396:\n        /* \"#utility.yul\":2339:2363   */\n      tag_488\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_395\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_489\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_489:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_397:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_491\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_396\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_47:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_494\n      tag_389\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":2632:2751   */\n    tag_493:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_495\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_394\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_496\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_397\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_398:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_399:\n        /* \"#utility.yul\":3196:3217   */\n      tag_499\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_398\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_50:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_501\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_399\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_400:\n        /* \"#utility.yul\":3533:3557   */\n      tag_503\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_395\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_54:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_505\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_400\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:3915   */\n    tag_401:\n        /* \"#utility.yul\":3907:3908   */\n      0x00\n        /* \"#utility.yul\":3904:3905   */\n      dup1\n        /* \"#utility.yul\":3897:3909   */\n      revert\n        /* \"#utility.yul\":3921:4038   */\n    tag_402:\n        /* \"#utility.yul\":4030:4031   */\n      0x00\n        /* \"#utility.yul\":4027:4028   */\n      dup1\n        /* \"#utility.yul\":4020:4032   */\n      revert\n        /* \"#utility.yul\":4044:4224   */\n    tag_403:\n        /* \"#utility.yul\":4092:4169   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4089:4090   */\n      0x00\n        /* \"#utility.yul\":4082:4170   */\n      mstore\n        /* \"#utility.yul\":4189:4193   */\n      0x41\n        /* \"#utility.yul\":4186:4187   */\n      0x04\n        /* \"#utility.yul\":4179:4194   */\n      mstore\n        /* \"#utility.yul\":4213:4217   */\n      0x24\n        /* \"#utility.yul\":4210:4211   */\n      0x00\n        /* \"#utility.yul\":4203:4218   */\n      revert\n        /* \"#utility.yul\":4230:4511   */\n    tag_404:\n        /* \"#utility.yul\":4313:4340   */\n      tag_510\n        /* \"#utility.yul\":4335:4339   */\n      dup3\n        /* \"#utility.yul\":4313:4340   */\n      tag_386\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":4305:4311   */\n      dup2\n        /* \"#utility.yul\":4301:4341   */\n      add\n        /* \"#utility.yul\":4443:4449   */\n      dup2\n        /* \"#utility.yul\":4431:4441   */\n      dup2\n        /* \"#utility.yul\":4428:4450   */\n      lt\n        /* \"#utility.yul\":4407:4425   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4395:4405   */\n      dup3\n        /* \"#utility.yul\":4392:4426   */\n      gt\n        /* \"#utility.yul\":4389:4451   */\n      or\n        /* \"#utility.yul\":4386:4474   */\n      iszero\n      tag_511\n      jumpi\n        /* \"#utility.yul\":4454:4472   */\n      tag_512\n      tag_403\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":4386:4474   */\n    tag_511:\n        /* \"#utility.yul\":4494:4504   */\n      dup1\n        /* \"#utility.yul\":4490:4492   */\n      0x40\n        /* \"#utility.yul\":4483:4505   */\n      mstore\n        /* \"#utility.yul\":4273:4511   */\n      pop\n        /* \"#utility.yul\":4230:4511   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4517:4646   */\n    tag_405:\n        /* \"#utility.yul\":4551:4557   */\n      0x00\n        /* \"#utility.yul\":4578:4598   */\n      tag_514\n      tag_388\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":4568:4598   */\n      swap1\n      pop\n        /* \"#utility.yul\":4607:4640   */\n      tag_515\n        /* \"#utility.yul\":4635:4639   */\n      dup3\n        /* \"#utility.yul\":4627:4633   */\n      dup3\n        /* \"#utility.yul\":4607:4640   */\n      tag_404\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":4517:4646   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4652:4960   */\n    tag_406:\n        /* \"#utility.yul\":4714:4718   */\n      0x00\n        /* \"#utility.yul\":4804:4822   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4796:4802   */\n      dup3\n        /* \"#utility.yul\":4793:4823   */\n      gt\n        /* \"#utility.yul\":4790:4846   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":4826:4844   */\n      tag_518\n      tag_403\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":4790:4846   */\n    tag_517:\n        /* \"#utility.yul\":4864:4893   */\n      tag_519\n        /* \"#utility.yul\":4886:4892   */\n      dup3\n        /* \"#utility.yul\":4864:4893   */\n      tag_386\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":4856:4893   */\n      swap1\n      pop\n        /* \"#utility.yul\":4948:4952   */\n      0x20\n        /* \"#utility.yul\":4942:4946   */\n      dup2\n        /* \"#utility.yul\":4938:4953   */\n      add\n        /* \"#utility.yul\":4930:4953   */\n      swap1\n      pop\n        /* \"#utility.yul\":4652:4960   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4966:5112   */\n    tag_407:\n        /* \"#utility.yul\":5063:5069   */\n      dup3\n        /* \"#utility.yul\":5058:5061   */\n      dup2\n        /* \"#utility.yul\":5053:5056   */\n      dup4\n        /* \"#utility.yul\":5040:5070   */\n      calldatacopy\n        /* \"#utility.yul\":5104:5105   */\n      0x00\n        /* \"#utility.yul\":5095:5101   */\n      dup4\n        /* \"#utility.yul\":5090:5093   */\n      dup4\n        /* \"#utility.yul\":5086:5102   */\n      add\n        /* \"#utility.yul\":5079:5106   */\n      mstore\n        /* \"#utility.yul\":4966:5112   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5118:5543   */\n    tag_408:\n        /* \"#utility.yul\":5196:5201   */\n      0x00\n        /* \"#utility.yul\":5221:5287   */\n      tag_522\n        /* \"#utility.yul\":5237:5286   */\n      tag_523\n        /* \"#utility.yul\":5279:5285   */\n      dup5\n        /* \"#utility.yul\":5237:5286   */\n      tag_406\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":5221:5287   */\n      tag_405\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":5212:5287   */\n      swap1\n      pop\n        /* \"#utility.yul\":5310:5316   */\n      dup3\n        /* \"#utility.yul\":5303:5308   */\n      dup2\n        /* \"#utility.yul\":5296:5317   */\n      mstore\n        /* \"#utility.yul\":5348:5352   */\n      0x20\n        /* \"#utility.yul\":5341:5346   */\n      dup2\n        /* \"#utility.yul\":5337:5353   */\n      add\n        /* \"#utility.yul\":5386:5389   */\n      dup5\n        /* \"#utility.yul\":5377:5383   */\n      dup5\n        /* \"#utility.yul\":5372:5375   */\n      dup5\n        /* \"#utility.yul\":5368:5384   */\n      add\n        /* \"#utility.yul\":5365:5390   */\n      gt\n        /* \"#utility.yul\":5362:5474   */\n      iszero\n      tag_524\n      jumpi\n        /* \"#utility.yul\":5393:5472   */\n      tag_525\n      tag_402\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":5362:5474   */\n    tag_524:\n        /* \"#utility.yul\":5483:5537   */\n      tag_526\n        /* \"#utility.yul\":5530:5536   */\n      dup5\n        /* \"#utility.yul\":5525:5528   */\n      dup3\n        /* \"#utility.yul\":5520:5523   */\n      dup6\n        /* \"#utility.yul\":5483:5537   */\n      tag_407\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":5202:5543   */\n      pop\n        /* \"#utility.yul\":5118:5543   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5563:5903   */\n    tag_409:\n        /* \"#utility.yul\":5619:5624   */\n      0x00\n        /* \"#utility.yul\":5668:5671   */\n      dup3\n        /* \"#utility.yul\":5661:5665   */\n      0x1f\n        /* \"#utility.yul\":5653:5659   */\n      dup4\n        /* \"#utility.yul\":5649:5666   */\n      add\n        /* \"#utility.yul\":5645:5672   */\n      slt\n        /* \"#utility.yul\":5635:5757   */\n      tag_528\n      jumpi\n        /* \"#utility.yul\":5676:5755   */\n      tag_529\n      tag_401\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":5635:5757   */\n    tag_528:\n        /* \"#utility.yul\":5793:5799   */\n      dup2\n        /* \"#utility.yul\":5780:5800   */\n      calldataload\n        /* \"#utility.yul\":5818:5897   */\n      tag_530\n        /* \"#utility.yul\":5893:5896   */\n      dup5\n        /* \"#utility.yul\":5885:5891   */\n      dup3\n        /* \"#utility.yul\":5878:5882   */\n      0x20\n        /* \"#utility.yul\":5870:5876   */\n      dup7\n        /* \"#utility.yul\":5866:5883   */\n      add\n        /* \"#utility.yul\":5818:5897   */\n      tag_408\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":5809:5897   */\n      swap2\n      pop\n        /* \"#utility.yul\":5625:5903   */\n      pop\n        /* \"#utility.yul\":5563:5903   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5909:6563   */\n    tag_57:\n        /* \"#utility.yul\":5987:5993   */\n      0x00\n        /* \"#utility.yul\":5995:6001   */\n      dup1\n        /* \"#utility.yul\":6044:6046   */\n      0x40\n        /* \"#utility.yul\":6032:6041   */\n      dup4\n        /* \"#utility.yul\":6023:6030   */\n      dup6\n        /* \"#utility.yul\":6019:6042   */\n      sub\n        /* \"#utility.yul\":6015:6047   */\n      slt\n        /* \"#utility.yul\":6012:6131   */\n      iszero\n      tag_532\n      jumpi\n        /* \"#utility.yul\":6050:6129   */\n      tag_533\n      tag_389\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":6012:6131   */\n    tag_532:\n        /* \"#utility.yul\":6170:6171   */\n      0x00\n        /* \"#utility.yul\":6195:6248   */\n      tag_534\n        /* \"#utility.yul\":6240:6247   */\n      dup6\n        /* \"#utility.yul\":6231:6237   */\n      dup3\n        /* \"#utility.yul\":6220:6229   */\n      dup7\n        /* \"#utility.yul\":6216:6238   */\n      add\n        /* \"#utility.yul\":6195:6248   */\n      tag_394\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":6185:6248   */\n      swap3\n      pop\n        /* \"#utility.yul\":6141:6258   */\n      pop\n        /* \"#utility.yul\":6325:6327   */\n      0x20\n        /* \"#utility.yul\":6314:6323   */\n      dup4\n        /* \"#utility.yul\":6310:6328   */\n      add\n        /* \"#utility.yul\":6297:6329   */\n      calldataload\n        /* \"#utility.yul\":6356:6374   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6348:6354   */\n      dup2\n        /* \"#utility.yul\":6345:6375   */\n      gt\n        /* \"#utility.yul\":6342:6459   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":6378:6457   */\n      tag_536\n      tag_390\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":6342:6459   */\n    tag_535:\n        /* \"#utility.yul\":6483:6546   */\n      tag_537\n        /* \"#utility.yul\":6538:6545   */\n      dup6\n        /* \"#utility.yul\":6529:6535   */\n      dup3\n        /* \"#utility.yul\":6518:6527   */\n      dup7\n        /* \"#utility.yul\":6514:6536   */\n      add\n        /* \"#utility.yul\":6483:6546   */\n      tag_409\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":6473:6546   */\n      swap2\n      pop\n        /* \"#utility.yul\":6268:6556   */\n      pop\n        /* \"#utility.yul\":5909:6563   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6569:7188   */\n    tag_61:\n        /* \"#utility.yul\":6646:6652   */\n      0x00\n        /* \"#utility.yul\":6654:6660   */\n      dup1\n        /* \"#utility.yul\":6662:6668   */\n      0x00\n        /* \"#utility.yul\":6711:6713   */\n      0x60\n        /* \"#utility.yul\":6699:6708   */\n      dup5\n        /* \"#utility.yul\":6690:6697   */\n      dup7\n        /* \"#utility.yul\":6686:6709   */\n      sub\n        /* \"#utility.yul\":6682:6714   */\n      slt\n        /* \"#utility.yul\":6679:6798   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":6717:6796   */\n      tag_540\n      tag_389\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":6679:6798   */\n    tag_539:\n        /* \"#utility.yul\":6837:6838   */\n      0x00\n        /* \"#utility.yul\":6862:6915   */\n      tag_541\n        /* \"#utility.yul\":6907:6914   */\n      dup7\n        /* \"#utility.yul\":6898:6904   */\n      dup3\n        /* \"#utility.yul\":6887:6896   */\n      dup8\n        /* \"#utility.yul\":6883:6905   */\n      add\n        /* \"#utility.yul\":6862:6915   */\n      tag_394\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":6852:6915   */\n      swap4\n      pop\n        /* \"#utility.yul\":6808:6925   */\n      pop\n        /* \"#utility.yul\":6964:6966   */\n      0x20\n        /* \"#utility.yul\":6990:7043   */\n      tag_542\n        /* \"#utility.yul\":7035:7042   */\n      dup7\n        /* \"#utility.yul\":7026:7032   */\n      dup3\n        /* \"#utility.yul\":7015:7024   */\n      dup8\n        /* \"#utility.yul\":7011:7033   */\n      add\n        /* \"#utility.yul\":6990:7043   */\n      tag_394\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":6980:7043   */\n      swap3\n      pop\n        /* \"#utility.yul\":6935:7053   */\n      pop\n        /* \"#utility.yul\":7092:7094   */\n      0x40\n        /* \"#utility.yul\":7118:7171   */\n      tag_543\n        /* \"#utility.yul\":7163:7170   */\n      dup7\n        /* \"#utility.yul\":7154:7160   */\n      dup3\n        /* \"#utility.yul\":7143:7152   */\n      dup8\n        /* \"#utility.yul\":7139:7161   */\n      add\n        /* \"#utility.yul\":7118:7171   */\n      tag_397\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":7108:7171   */\n      swap2\n      pop\n        /* \"#utility.yul\":7063:7181   */\n      pop\n        /* \"#utility.yul\":6569:7188   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7194:7280   */\n    tag_410:\n        /* \"#utility.yul\":7229:7236   */\n      0x00\n        /* \"#utility.yul\":7269:7273   */\n      0xff\n        /* \"#utility.yul\":7262:7267   */\n      dup3\n        /* \"#utility.yul\":7258:7274   */\n      and\n        /* \"#utility.yul\":7247:7274   */\n      swap1\n      pop\n        /* \"#utility.yul\":7194:7280   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7286:7398   */\n    tag_411:\n        /* \"#utility.yul\":7369:7391   */\n      tag_546\n        /* \"#utility.yul\":7385:7390   */\n      dup2\n        /* \"#utility.yul\":7369:7391   */\n      tag_410\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":7364:7367   */\n      dup3\n        /* \"#utility.yul\":7357:7392   */\n      mstore\n        /* \"#utility.yul\":7286:7398   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7404:7618   */\n    tag_67:\n        /* \"#utility.yul\":7493:7497   */\n      0x00\n        /* \"#utility.yul\":7531:7533   */\n      0x20\n        /* \"#utility.yul\":7520:7529   */\n      dup3\n        /* \"#utility.yul\":7516:7534   */\n      add\n        /* \"#utility.yul\":7508:7534   */\n      swap1\n      pop\n        /* \"#utility.yul\":7544:7611   */\n      tag_548\n        /* \"#utility.yul\":7608:7609   */\n      0x00\n        /* \"#utility.yul\":7597:7606   */\n      dup4\n        /* \"#utility.yul\":7593:7610   */\n      add\n        /* \"#utility.yul\":7584:7590   */\n      dup5\n        /* \"#utility.yul\":7544:7611   */\n      tag_411\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":7404:7618   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7624:7953   */\n    tag_70:\n        /* \"#utility.yul\":7683:7689   */\n      0x00\n        /* \"#utility.yul\":7732:7734   */\n      0x20\n        /* \"#utility.yul\":7720:7729   */\n      dup3\n        /* \"#utility.yul\":7711:7718   */\n      dup5\n        /* \"#utility.yul\":7707:7730   */\n      sub\n        /* \"#utility.yul\":7703:7735   */\n      slt\n        /* \"#utility.yul\":7700:7819   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":7738:7817   */\n      tag_551\n      tag_389\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":7700:7819   */\n    tag_550:\n        /* \"#utility.yul\":7858:7859   */\n      0x00\n        /* \"#utility.yul\":7883:7936   */\n      tag_552\n        /* \"#utility.yul\":7928:7935   */\n      dup5\n        /* \"#utility.yul\":7919:7925   */\n      dup3\n        /* \"#utility.yul\":7908:7917   */\n      dup6\n        /* \"#utility.yul\":7904:7926   */\n      add\n        /* \"#utility.yul\":7883:7936   */\n      tag_394\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":7873:7936   */\n      swap2\n      pop\n        /* \"#utility.yul\":7829:7946   */\n      pop\n        /* \"#utility.yul\":7624:7953   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7959:8288   */\n    tag_80:\n        /* \"#utility.yul\":8018:8024   */\n      0x00\n        /* \"#utility.yul\":8067:8069   */\n      0x20\n        /* \"#utility.yul\":8055:8064   */\n      dup3\n        /* \"#utility.yul\":8046:8053   */\n      dup5\n        /* \"#utility.yul\":8042:8065   */\n      sub\n        /* \"#utility.yul\":8038:8070   */\n      slt\n        /* \"#utility.yul\":8035:8154   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":8073:8152   */\n      tag_555\n      tag_389\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":8035:8154   */\n    tag_554:\n        /* \"#utility.yul\":8193:8194   */\n      0x00\n        /* \"#utility.yul\":8218:8271   */\n      tag_556\n        /* \"#utility.yul\":8263:8270   */\n      dup5\n        /* \"#utility.yul\":8254:8260   */\n      dup3\n        /* \"#utility.yul\":8243:8252   */\n      dup6\n        /* \"#utility.yul\":8239:8261   */\n      add\n        /* \"#utility.yul\":8218:8271   */\n      tag_397\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":8208:8271   */\n      swap2\n      pop\n        /* \"#utility.yul\":8164:8281   */\n      pop\n        /* \"#utility.yul\":7959:8288   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8294:8803   */\n    tag_95:\n        /* \"#utility.yul\":8363:8369   */\n      0x00\n        /* \"#utility.yul\":8412:8414   */\n      0x20\n        /* \"#utility.yul\":8400:8409   */\n      dup3\n        /* \"#utility.yul\":8391:8398   */\n      dup5\n        /* \"#utility.yul\":8387:8410   */\n      sub\n        /* \"#utility.yul\":8383:8415   */\n      slt\n        /* \"#utility.yul\":8380:8499   */\n      iszero\n      tag_558\n      jumpi\n        /* \"#utility.yul\":8418:8497   */\n      tag_559\n      tag_389\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":8380:8499   */\n    tag_558:\n        /* \"#utility.yul\":8566:8567   */\n      0x00\n        /* \"#utility.yul\":8555:8564   */\n      dup3\n        /* \"#utility.yul\":8551:8568   */\n      add\n        /* \"#utility.yul\":8538:8569   */\n      calldataload\n        /* \"#utility.yul\":8596:8614   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8588:8594   */\n      dup2\n        /* \"#utility.yul\":8585:8615   */\n      gt\n        /* \"#utility.yul\":8582:8699   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":8618:8697   */\n      tag_561\n      tag_390\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":8582:8699   */\n    tag_560:\n        /* \"#utility.yul\":8723:8786   */\n      tag_562\n        /* \"#utility.yul\":8778:8785   */\n      dup5\n        /* \"#utility.yul\":8769:8775   */\n      dup3\n        /* \"#utility.yul\":8758:8767   */\n      dup6\n        /* \"#utility.yul\":8754:8776   */\n      add\n        /* \"#utility.yul\":8723:8786   */\n      tag_409\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":8713:8786   */\n      swap2\n      pop\n        /* \"#utility.yul\":8509:8796   */\n      pop\n        /* \"#utility.yul\":8294:8803   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8809:8927   */\n    tag_412:\n        /* \"#utility.yul\":8896:8920   */\n      tag_564\n        /* \"#utility.yul\":8914:8919   */\n      dup2\n        /* \"#utility.yul\":8896:8920   */\n      tag_392\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":8891:8894   */\n      dup3\n        /* \"#utility.yul\":8884:8921   */\n      mstore\n        /* \"#utility.yul\":8809:8927   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8933:9155   */\n    tag_120:\n        /* \"#utility.yul\":9026:9030   */\n      0x00\n        /* \"#utility.yul\":9064:9066   */\n      0x20\n        /* \"#utility.yul\":9053:9062   */\n      dup3\n        /* \"#utility.yul\":9049:9067   */\n      add\n        /* \"#utility.yul\":9041:9067   */\n      swap1\n      pop\n        /* \"#utility.yul\":9077:9148   */\n      tag_566\n        /* \"#utility.yul\":9145:9146   */\n      0x00\n        /* \"#utility.yul\":9134:9143   */\n      dup4\n        /* \"#utility.yul\":9130:9147   */\n      add\n        /* \"#utility.yul\":9121:9127   */\n      dup5\n        /* \"#utility.yul\":9077:9148   */\n      tag_412\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":8933:9155   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9161:10286   */\n    tag_136:\n        /* \"#utility.yul\":9267:9273   */\n      0x00\n        /* \"#utility.yul\":9275:9281   */\n      dup1\n        /* \"#utility.yul\":9283:9289   */\n      0x00\n        /* \"#utility.yul\":9291:9297   */\n      dup1\n        /* \"#utility.yul\":9340:9343   */\n      0x80\n        /* \"#utility.yul\":9328:9337   */\n      dup6\n        /* \"#utility.yul\":9319:9326   */\n      dup8\n        /* \"#utility.yul\":9315:9338   */\n      sub\n        /* \"#utility.yul\":9311:9344   */\n      slt\n        /* \"#utility.yul\":9308:9428   */\n      iszero\n      tag_568\n      jumpi\n        /* \"#utility.yul\":9347:9426   */\n      tag_569\n      tag_389\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":9308:9428   */\n    tag_568:\n        /* \"#utility.yul\":9495:9496   */\n      0x00\n        /* \"#utility.yul\":9484:9493   */\n      dup6\n        /* \"#utility.yul\":9480:9497   */\n      add\n        /* \"#utility.yul\":9467:9498   */\n      calldataload\n        /* \"#utility.yul\":9525:9543   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9517:9523   */\n      dup2\n        /* \"#utility.yul\":9514:9544   */\n      gt\n        /* \"#utility.yul\":9511:9628   */\n      iszero\n      tag_570\n      jumpi\n        /* \"#utility.yul\":9547:9626   */\n      tag_571\n      tag_390\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":9511:9628   */\n    tag_570:\n        /* \"#utility.yul\":9652:9715   */\n      tag_572\n        /* \"#utility.yul\":9707:9714   */\n      dup8\n        /* \"#utility.yul\":9698:9704   */\n      dup3\n        /* \"#utility.yul\":9687:9696   */\n      dup9\n        /* \"#utility.yul\":9683:9705   */\n      add\n        /* \"#utility.yul\":9652:9715   */\n      tag_409\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":9642:9715   */\n      swap5\n      pop\n        /* \"#utility.yul\":9438:9725   */\n      pop\n        /* \"#utility.yul\":9792:9794   */\n      0x20\n        /* \"#utility.yul\":9781:9790   */\n      dup6\n        /* \"#utility.yul\":9777:9795   */\n      add\n        /* \"#utility.yul\":9764:9796   */\n      calldataload\n        /* \"#utility.yul\":9823:9841   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9815:9821   */\n      dup2\n        /* \"#utility.yul\":9812:9842   */\n      gt\n        /* \"#utility.yul\":9809:9926   */\n      iszero\n      tag_573\n      jumpi\n        /* \"#utility.yul\":9845:9924   */\n      tag_574\n      tag_390\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":9809:9926   */\n    tag_573:\n        /* \"#utility.yul\":9950:10013   */\n      tag_575\n        /* \"#utility.yul\":10005:10012   */\n      dup8\n        /* \"#utility.yul\":9996:10002   */\n      dup3\n        /* \"#utility.yul\":9985:9994   */\n      dup9\n        /* \"#utility.yul\":9981:10003   */\n      add\n        /* \"#utility.yul\":9950:10013   */\n      tag_409\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":9940:10013   */\n      swap4\n      pop\n        /* \"#utility.yul\":9735:10023   */\n      pop\n        /* \"#utility.yul\":10062:10064   */\n      0x40\n        /* \"#utility.yul\":10088:10141   */\n      tag_576\n        /* \"#utility.yul\":10133:10140   */\n      dup8\n        /* \"#utility.yul\":10124:10130   */\n      dup3\n        /* \"#utility.yul\":10113:10122   */\n      dup9\n        /* \"#utility.yul\":10109:10131   */\n      add\n        /* \"#utility.yul\":10088:10141   */\n      tag_397\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":10078:10141   */\n      swap3\n      pop\n        /* \"#utility.yul\":10033:10151   */\n      pop\n        /* \"#utility.yul\":10190:10192   */\n      0x60\n        /* \"#utility.yul\":10216:10269   */\n      tag_577\n        /* \"#utility.yul\":10261:10268   */\n      dup8\n        /* \"#utility.yul\":10252:10258   */\n      dup3\n        /* \"#utility.yul\":10241:10250   */\n      dup9\n        /* \"#utility.yul\":10237:10259   */\n      add\n        /* \"#utility.yul\":10216:10269   */\n      tag_394\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":10206:10269   */\n      swap2\n      pop\n        /* \"#utility.yul\":10161:10279   */\n      pop\n        /* \"#utility.yul\":9161:10286   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10292:10946   */\n    tag_144:\n        /* \"#utility.yul\":10370:10376   */\n      0x00\n        /* \"#utility.yul\":10378:10384   */\n      dup1\n        /* \"#utility.yul\":10427:10429   */\n      0x40\n        /* \"#utility.yul\":10415:10424   */\n      dup4\n        /* \"#utility.yul\":10406:10413   */\n      dup6\n        /* \"#utility.yul\":10402:10425   */\n      sub\n        /* \"#utility.yul\":10398:10430   */\n      slt\n        /* \"#utility.yul\":10395:10514   */\n      iszero\n      tag_579\n      jumpi\n        /* \"#utility.yul\":10433:10512   */\n      tag_580\n      tag_389\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":10395:10514   */\n    tag_579:\n        /* \"#utility.yul\":10581:10582   */\n      0x00\n        /* \"#utility.yul\":10570:10579   */\n      dup4\n        /* \"#utility.yul\":10566:10583   */\n      add\n        /* \"#utility.yul\":10553:10584   */\n      calldataload\n        /* \"#utility.yul\":10611:10629   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10603:10609   */\n      dup2\n        /* \"#utility.yul\":10600:10630   */\n      gt\n        /* \"#utility.yul\":10597:10714   */\n      iszero\n      tag_581\n      jumpi\n        /* \"#utility.yul\":10633:10712   */\n      tag_582\n      tag_390\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":10597:10714   */\n    tag_581:\n        /* \"#utility.yul\":10738:10801   */\n      tag_583\n        /* \"#utility.yul\":10793:10800   */\n      dup6\n        /* \"#utility.yul\":10784:10790   */\n      dup3\n        /* \"#utility.yul\":10773:10782   */\n      dup7\n        /* \"#utility.yul\":10769:10791   */\n      add\n        /* \"#utility.yul\":10738:10801   */\n      tag_409\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":10728:10801   */\n      swap3\n      pop\n        /* \"#utility.yul\":10524:10811   */\n      pop\n        /* \"#utility.yul\":10850:10852   */\n      0x20\n        /* \"#utility.yul\":10876:10929   */\n      tag_584\n        /* \"#utility.yul\":10921:10928   */\n      dup6\n        /* \"#utility.yul\":10912:10918   */\n      dup3\n        /* \"#utility.yul\":10901:10910   */\n      dup7\n        /* \"#utility.yul\":10897:10919   */\n      add\n        /* \"#utility.yul\":10876:10929   */\n      tag_397\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":10866:10929   */\n      swap2\n      pop\n        /* \"#utility.yul\":10821:10939   */\n      pop\n        /* \"#utility.yul\":10292:10946   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10952:11426   */\n    tag_148:\n        /* \"#utility.yul\":11020:11026   */\n      0x00\n        /* \"#utility.yul\":11028:11034   */\n      dup1\n        /* \"#utility.yul\":11077:11079   */\n      0x40\n        /* \"#utility.yul\":11065:11074   */\n      dup4\n        /* \"#utility.yul\":11056:11063   */\n      dup6\n        /* \"#utility.yul\":11052:11075   */\n      sub\n        /* \"#utility.yul\":11048:11080   */\n      slt\n        /* \"#utility.yul\":11045:11164   */\n      iszero\n      tag_586\n      jumpi\n        /* \"#utility.yul\":11083:11162   */\n      tag_587\n      tag_389\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":11045:11164   */\n    tag_586:\n        /* \"#utility.yul\":11203:11204   */\n      0x00\n        /* \"#utility.yul\":11228:11281   */\n      tag_588\n        /* \"#utility.yul\":11273:11280   */\n      dup6\n        /* \"#utility.yul\":11264:11270   */\n      dup3\n        /* \"#utility.yul\":11253:11262   */\n      dup7\n        /* \"#utility.yul\":11249:11271   */\n      add\n        /* \"#utility.yul\":11228:11281   */\n      tag_394\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":11218:11281   */\n      swap3\n      pop\n        /* \"#utility.yul\":11174:11291   */\n      pop\n        /* \"#utility.yul\":11330:11332   */\n      0x20\n        /* \"#utility.yul\":11356:11409   */\n      tag_589\n        /* \"#utility.yul\":11401:11408   */\n      dup6\n        /* \"#utility.yul\":11392:11398   */\n      dup3\n        /* \"#utility.yul\":11381:11390   */\n      dup7\n        /* \"#utility.yul\":11377:11399   */\n      add\n        /* \"#utility.yul\":11356:11409   */\n      tag_394\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":11346:11409   */\n      swap2\n      pop\n        /* \"#utility.yul\":11301:11419   */\n      pop\n        /* \"#utility.yul\":10952:11426   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11432:12051   */\n    tag_153:\n        /* \"#utility.yul\":11509:11515   */\n      0x00\n        /* \"#utility.yul\":11517:11523   */\n      dup1\n        /* \"#utility.yul\":11525:11531   */\n      0x00\n        /* \"#utility.yul\":11574:11576   */\n      0x60\n        /* \"#utility.yul\":11562:11571   */\n      dup5\n        /* \"#utility.yul\":11553:11560   */\n      dup7\n        /* \"#utility.yul\":11549:11572   */\n      sub\n        /* \"#utility.yul\":11545:11577   */\n      slt\n        /* \"#utility.yul\":11542:11661   */\n      iszero\n      tag_591\n      jumpi\n        /* \"#utility.yul\":11580:11659   */\n      tag_592\n      tag_389\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":11542:11661   */\n    tag_591:\n        /* \"#utility.yul\":11700:11701   */\n      0x00\n        /* \"#utility.yul\":11725:11778   */\n      tag_593\n        /* \"#utility.yul\":11770:11777   */\n      dup7\n        /* \"#utility.yul\":11761:11767   */\n      dup3\n        /* \"#utility.yul\":11750:11759   */\n      dup8\n        /* \"#utility.yul\":11746:11768   */\n      add\n        /* \"#utility.yul\":11725:11778   */\n      tag_394\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":11715:11778   */\n      swap4\n      pop\n        /* \"#utility.yul\":11671:11788   */\n      pop\n        /* \"#utility.yul\":11827:11829   */\n      0x20\n        /* \"#utility.yul\":11853:11906   */\n      tag_594\n        /* \"#utility.yul\":11898:11905   */\n      dup7\n        /* \"#utility.yul\":11889:11895   */\n      dup3\n        /* \"#utility.yul\":11878:11887   */\n      dup8\n        /* \"#utility.yul\":11874:11896   */\n      add\n        /* \"#utility.yul\":11853:11906   */\n      tag_397\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":11843:11906   */\n      swap3\n      pop\n        /* \"#utility.yul\":11798:11916   */\n      pop\n        /* \"#utility.yul\":11955:11957   */\n      0x40\n        /* \"#utility.yul\":11981:12034   */\n      tag_595\n        /* \"#utility.yul\":12026:12033   */\n      dup7\n        /* \"#utility.yul\":12017:12023   */\n      dup3\n        /* \"#utility.yul\":12006:12015   */\n      dup8\n        /* \"#utility.yul\":12002:12024   */\n      add\n        /* \"#utility.yul\":11981:12034   */\n      tag_394\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":11971:12034   */\n      swap2\n      pop\n        /* \"#utility.yul\":11926:12044   */\n      pop\n        /* \"#utility.yul\":11432:12051   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":12057:12237   */\n    tag_413:\n        /* \"#utility.yul\":12105:12182   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12102:12103   */\n      0x00\n        /* \"#utility.yul\":12095:12183   */\n      mstore\n        /* \"#utility.yul\":12202:12206   */\n      0x22\n        /* \"#utility.yul\":12199:12200   */\n      0x04\n        /* \"#utility.yul\":12192:12207   */\n      mstore\n        /* \"#utility.yul\":12226:12230   */\n      0x24\n        /* \"#utility.yul\":12223:12224   */\n      0x00\n        /* \"#utility.yul\":12216:12231   */\n      revert\n        /* \"#utility.yul\":12243:12563   */\n    tag_160:\n        /* \"#utility.yul\":12287:12293   */\n      0x00\n        /* \"#utility.yul\":12324:12325   */\n      0x02\n        /* \"#utility.yul\":12318:12322   */\n      dup3\n        /* \"#utility.yul\":12314:12326   */\n      div\n        /* \"#utility.yul\":12304:12326   */\n      swap1\n      pop\n        /* \"#utility.yul\":12371:12372   */\n      0x01\n        /* \"#utility.yul\":12365:12369   */\n      dup3\n        /* \"#utility.yul\":12361:12373   */\n      and\n        /* \"#utility.yul\":12392:12410   */\n      dup1\n        /* \"#utility.yul\":12382:12463   */\n      tag_598\n      jumpi\n        /* \"#utility.yul\":12448:12452   */\n      0x7f\n        /* \"#utility.yul\":12440:12446   */\n      dup3\n        /* \"#utility.yul\":12436:12453   */\n      and\n        /* \"#utility.yul\":12426:12453   */\n      swap2\n      pop\n        /* \"#utility.yul\":12382:12463   */\n    tag_598:\n        /* \"#utility.yul\":12510:12512   */\n      0x20\n        /* \"#utility.yul\":12502:12508   */\n      dup3\n        /* \"#utility.yul\":12499:12513   */\n      lt\n        /* \"#utility.yul\":12479:12497   */\n      dup2\n        /* \"#utility.yul\":12476:12514   */\n      sub\n        /* \"#utility.yul\":12473:12557   */\n      tag_599\n      jumpi\n        /* \"#utility.yul\":12529:12547   */\n      tag_600\n      tag_413\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":12473:12557   */\n    tag_599:\n        /* \"#utility.yul\":12294:12563   */\n      pop\n        /* \"#utility.yul\":12243:12563   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12569:12746   */\n    tag_414:\n        /* \"#utility.yul\":12709:12738   */\n      0x496e76616c69642062656e656669636961727920616464726573730000000000\n        /* \"#utility.yul\":12705:12706   */\n      0x00\n        /* \"#utility.yul\":12697:12703   */\n      dup3\n        /* \"#utility.yul\":12693:12707   */\n      add\n        /* \"#utility.yul\":12686:12739   */\n      mstore\n        /* \"#utility.yul\":12569:12746   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12752:13118   */\n    tag_415:\n        /* \"#utility.yul\":12894:12897   */\n      0x00\n        /* \"#utility.yul\":12915:12982   */\n      tag_603\n        /* \"#utility.yul\":12979:12981   */\n      0x1b\n        /* \"#utility.yul\":12974:12977   */\n      dup4\n        /* \"#utility.yul\":12915:12982   */\n      tag_384\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":12908:12982   */\n      swap2\n      pop\n        /* \"#utility.yul\":12991:13084   */\n      tag_604\n        /* \"#utility.yul\":13080:13083   */\n      dup3\n        /* \"#utility.yul\":12991:13084   */\n      tag_414\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":13109:13111   */\n      0x20\n        /* \"#utility.yul\":13104:13107   */\n      dup3\n        /* \"#utility.yul\":13100:13112   */\n      add\n        /* \"#utility.yul\":13093:13112   */\n      swap1\n      pop\n        /* \"#utility.yul\":12752:13118   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13124:13543   */\n    tag_177:\n        /* \"#utility.yul\":13290:13294   */\n      0x00\n        /* \"#utility.yul\":13328:13330   */\n      0x20\n        /* \"#utility.yul\":13317:13326   */\n      dup3\n        /* \"#utility.yul\":13313:13331   */\n      add\n        /* \"#utility.yul\":13305:13331   */\n      swap1\n      pop\n        /* \"#utility.yul\":13377:13386   */\n      dup2\n        /* \"#utility.yul\":13371:13375   */\n      dup2\n        /* \"#utility.yul\":13367:13387   */\n      sub\n        /* \"#utility.yul\":13363:13364   */\n      0x00\n        /* \"#utility.yul\":13352:13361   */\n      dup4\n        /* \"#utility.yul\":13348:13365   */\n      add\n        /* \"#utility.yul\":13341:13388   */\n      mstore\n        /* \"#utility.yul\":13405:13536   */\n      tag_606\n        /* \"#utility.yul\":13531:13535   */\n      dup2\n        /* \"#utility.yul\":13405:13536   */\n      tag_415\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":13397:13536   */\n      swap1\n      pop\n        /* \"#utility.yul\":13124:13543   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13549:13723   */\n    tag_416:\n        /* \"#utility.yul\":13689:13715   */\n      0x43617465676f72792063616e6e6f7420626520656d7074790000000000000000\n        /* \"#utility.yul\":13685:13686   */\n      0x00\n        /* \"#utility.yul\":13677:13683   */\n      dup3\n        /* \"#utility.yul\":13673:13687   */\n      add\n        /* \"#utility.yul\":13666:13716   */\n      mstore\n        /* \"#utility.yul\":13549:13723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13729:14095   */\n    tag_417:\n        /* \"#utility.yul\":13871:13874   */\n      0x00\n        /* \"#utility.yul\":13892:13959   */\n      tag_609\n        /* \"#utility.yul\":13956:13958   */\n      0x18\n        /* \"#utility.yul\":13951:13954   */\n      dup4\n        /* \"#utility.yul\":13892:13959   */\n      tag_384\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":13885:13959   */\n      swap2\n      pop\n        /* \"#utility.yul\":13968:14061   */\n      tag_610\n        /* \"#utility.yul\":14057:14060   */\n      dup3\n        /* \"#utility.yul\":13968:14061   */\n      tag_416\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":14086:14088   */\n      0x20\n        /* \"#utility.yul\":14081:14084   */\n      dup3\n        /* \"#utility.yul\":14077:14089   */\n      add\n        /* \"#utility.yul\":14070:14089   */\n      swap1\n      pop\n        /* \"#utility.yul\":13729:14095   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14101:14520   */\n    tag_180:\n        /* \"#utility.yul\":14267:14271   */\n      0x00\n        /* \"#utility.yul\":14305:14307   */\n      0x20\n        /* \"#utility.yul\":14294:14303   */\n      dup3\n        /* \"#utility.yul\":14290:14308   */\n      add\n        /* \"#utility.yul\":14282:14308   */\n      swap1\n      pop\n        /* \"#utility.yul\":14354:14363   */\n      dup2\n        /* \"#utility.yul\":14348:14352   */\n      dup2\n        /* \"#utility.yul\":14344:14364   */\n      sub\n        /* \"#utility.yul\":14340:14341   */\n      0x00\n        /* \"#utility.yul\":14329:14338   */\n      dup4\n        /* \"#utility.yul\":14325:14342   */\n      add\n        /* \"#utility.yul\":14318:14365   */\n      mstore\n        /* \"#utility.yul\":14382:14513   */\n      tag_612\n        /* \"#utility.yul\":14508:14512   */\n      dup2\n        /* \"#utility.yul\":14382:14513   */\n      tag_417\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":14374:14513   */\n      swap1\n      pop\n        /* \"#utility.yul\":14101:14520   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14526:14667   */\n    tag_418:\n        /* \"#utility.yul\":14575:14579   */\n      0x00\n        /* \"#utility.yul\":14598:14601   */\n      dup2\n        /* \"#utility.yul\":14590:14601   */\n      swap1\n      pop\n        /* \"#utility.yul\":14621:14624   */\n      dup2\n        /* \"#utility.yul\":14618:14619   */\n      0x00\n        /* \"#utility.yul\":14611:14625   */\n      mstore\n        /* \"#utility.yul\":14655:14659   */\n      0x20\n        /* \"#utility.yul\":14652:14653   */\n      0x00\n        /* \"#utility.yul\":14642:14660   */\n      keccak256\n        /* \"#utility.yul\":14634:14660   */\n      swap1\n      pop\n        /* \"#utility.yul\":14526:14667   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14673:14766   */\n    tag_419:\n        /* \"#utility.yul\":14710:14716   */\n      0x00\n        /* \"#utility.yul\":14757:14759   */\n      0x20\n        /* \"#utility.yul\":14752:14754   */\n      0x1f\n        /* \"#utility.yul\":14745:14750   */\n      dup4\n        /* \"#utility.yul\":14741:14755   */\n      add\n        /* \"#utility.yul\":14737:14760   */\n      div\n        /* \"#utility.yul\":14727:14760   */\n      swap1\n      pop\n        /* \"#utility.yul\":14673:14766   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14772:14879   */\n    tag_420:\n        /* \"#utility.yul\":14816:14824   */\n      0x00\n        /* \"#utility.yul\":14866:14871   */\n      dup3\n        /* \"#utility.yul\":14860:14864   */\n      dup3\n        /* \"#utility.yul\":14856:14872   */\n      shl\n        /* \"#utility.yul\":14835:14872   */\n      swap1\n      pop\n        /* \"#utility.yul\":14772:14879   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14885:15278   */\n    tag_421:\n        /* \"#utility.yul\":14954:14960   */\n      0x00\n        /* \"#utility.yul\":15004:15005   */\n      0x08\n        /* \"#utility.yul\":14992:15002   */\n      dup4\n        /* \"#utility.yul\":14988:15006   */\n      mul\n        /* \"#utility.yul\":15027:15124   */\n      tag_617\n        /* \"#utility.yul\":15057:15123   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15046:15055   */\n      dup3\n        /* \"#utility.yul\":15027:15124   */\n      tag_420\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":15145:15184   */\n      tag_618\n        /* \"#utility.yul\":15175:15183   */\n      dup7\n        /* \"#utility.yul\":15164:15173   */\n      dup4\n        /* \"#utility.yul\":15145:15184   */\n      tag_420\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":15133:15184   */\n      swap6\n      pop\n        /* \"#utility.yul\":15217:15221   */\n      dup1\n        /* \"#utility.yul\":15213:15222   */\n      not\n        /* \"#utility.yul\":15206:15211   */\n      dup5\n        /* \"#utility.yul\":15202:15223   */\n      and\n        /* \"#utility.yul\":15193:15223   */\n      swap4\n      pop\n        /* \"#utility.yul\":15266:15270   */\n      dup1\n        /* \"#utility.yul\":15256:15264   */\n      dup7\n        /* \"#utility.yul\":15252:15271   */\n      and\n        /* \"#utility.yul\":15245:15250   */\n      dup5\n        /* \"#utility.yul\":15242:15272   */\n      or\n        /* \"#utility.yul\":15232:15272   */\n      swap3\n      pop\n        /* \"#utility.yul\":14961:15278   */\n      pop\n      pop\n        /* \"#utility.yul\":14885:15278   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15284:15344   */\n    tag_422:\n        /* \"#utility.yul\":15312:15315   */\n      0x00\n        /* \"#utility.yul\":15333:15338   */\n      dup2\n        /* \"#utility.yul\":15326:15338   */\n      swap1\n      pop\n        /* \"#utility.yul\":15284:15344   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15350:15492   */\n    tag_423:\n        /* \"#utility.yul\":15400:15409   */\n      0x00\n        /* \"#utility.yul\":15433:15486   */\n      tag_621\n        /* \"#utility.yul\":15451:15485   */\n      tag_622\n        /* \"#utility.yul\":15460:15484   */\n      tag_623\n        /* \"#utility.yul\":15478:15483   */\n      dup5\n        /* \"#utility.yul\":15460:15484   */\n      tag_395\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":15451:15485   */\n      tag_422\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":15433:15486   */\n      tag_395\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":15420:15486   */\n      swap1\n      pop\n        /* \"#utility.yul\":15350:15492   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15498:15573   */\n    tag_424:\n        /* \"#utility.yul\":15541:15544   */\n      0x00\n        /* \"#utility.yul\":15562:15567   */\n      dup2\n        /* \"#utility.yul\":15555:15567   */\n      swap1\n      pop\n        /* \"#utility.yul\":15498:15573   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15579:15848   */\n    tag_425:\n        /* \"#utility.yul\":15689:15728   */\n      tag_626\n        /* \"#utility.yul\":15720:15727   */\n      dup4\n        /* \"#utility.yul\":15689:15728   */\n      tag_423\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":15750:15841   */\n      tag_627\n        /* \"#utility.yul\":15799:15840   */\n      tag_628\n        /* \"#utility.yul\":15823:15839   */\n      dup3\n        /* \"#utility.yul\":15799:15840   */\n      tag_424\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":15791:15797   */\n      dup5\n        /* \"#utility.yul\":15784:15788   */\n      dup5\n        /* \"#utility.yul\":15778:15789   */\n      sload\n        /* \"#utility.yul\":15750:15841   */\n      tag_421\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":15744:15748   */\n      dup3\n        /* \"#utility.yul\":15737:15842   */\n      sstore\n        /* \"#utility.yul\":15655:15848   */\n      pop\n        /* \"#utility.yul\":15579:15848   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15854:15927   */\n    tag_426:\n        /* \"#utility.yul\":15899:15902   */\n      0x00\n        /* \"#utility.yul\":15854:15927   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15933:16122   */\n    tag_427:\n        /* \"#utility.yul\":16010:16042   */\n      tag_631\n      tag_426\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":16051:16116   */\n      tag_632\n        /* \"#utility.yul\":16109:16115   */\n      dup2\n        /* \"#utility.yul\":16101:16107   */\n      dup5\n        /* \"#utility.yul\":16095:16099   */\n      dup5\n        /* \"#utility.yul\":16051:16116   */\n      tag_425\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":15986:16122   */\n      pop\n        /* \"#utility.yul\":15933:16122   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16128:16314   */\n    tag_428:\n        /* \"#utility.yul\":16188:16308   */\n    tag_634:\n        /* \"#utility.yul\":16205:16208   */\n      dup2\n        /* \"#utility.yul\":16198:16203   */\n      dup2\n        /* \"#utility.yul\":16195:16209   */\n      lt\n        /* \"#utility.yul\":16188:16308   */\n      iszero\n      tag_636\n      jumpi\n        /* \"#utility.yul\":16259:16298   */\n      tag_637\n        /* \"#utility.yul\":16296:16297   */\n      0x00\n        /* \"#utility.yul\":16289:16294   */\n      dup3\n        /* \"#utility.yul\":16259:16298   */\n      tag_427\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":16232:16233   */\n      0x01\n        /* \"#utility.yul\":16225:16230   */\n      dup2\n        /* \"#utility.yul\":16221:16234   */\n      add\n        /* \"#utility.yul\":16212:16234   */\n      swap1\n      pop\n        /* \"#utility.yul\":16188:16308   */\n      jump(tag_634)\n    tag_636:\n        /* \"#utility.yul\":16128:16314   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16320:16863   */\n    tag_429:\n        /* \"#utility.yul\":16421:16423   */\n      0x1f\n        /* \"#utility.yul\":16416:16419   */\n      dup3\n        /* \"#utility.yul\":16413:16424   */\n      gt\n        /* \"#utility.yul\":16410:16856   */\n      iszero\n      tag_639\n      jumpi\n        /* \"#utility.yul\":16455:16493   */\n      tag_640\n        /* \"#utility.yul\":16487:16492   */\n      dup2\n        /* \"#utility.yul\":16455:16493   */\n      tag_418\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":16539:16568   */\n      tag_641\n        /* \"#utility.yul\":16557:16567   */\n      dup5\n        /* \"#utility.yul\":16539:16568   */\n      tag_419\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":16529:16537   */\n      dup2\n        /* \"#utility.yul\":16525:16569   */\n      add\n        /* \"#utility.yul\":16722:16724   */\n      0x20\n        /* \"#utility.yul\":16710:16720   */\n      dup6\n        /* \"#utility.yul\":16707:16725   */\n      lt\n        /* \"#utility.yul\":16704:16753   */\n      iszero\n      tag_642\n      jumpi\n        /* \"#utility.yul\":16743:16751   */\n      dup2\n        /* \"#utility.yul\":16728:16751   */\n      swap1\n      pop\n        /* \"#utility.yul\":16704:16753   */\n    tag_642:\n        /* \"#utility.yul\":16766:16846   */\n      tag_643\n        /* \"#utility.yul\":16822:16844   */\n      tag_644\n        /* \"#utility.yul\":16840:16843   */\n      dup6\n        /* \"#utility.yul\":16822:16844   */\n      tag_419\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":16812:16820   */\n      dup4\n        /* \"#utility.yul\":16808:16845   */\n      add\n        /* \"#utility.yul\":16795:16806   */\n      dup3\n        /* \"#utility.yul\":16766:16846   */\n      tag_428\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":16425:16856   */\n      pop\n      pop\n        /* \"#utility.yul\":16410:16856   */\n    tag_639:\n        /* \"#utility.yul\":16320:16863   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16869:16986   */\n    tag_430:\n        /* \"#utility.yul\":16923:16931   */\n      0x00\n        /* \"#utility.yul\":16973:16978   */\n      dup3\n        /* \"#utility.yul\":16967:16971   */\n      dup3\n        /* \"#utility.yul\":16963:16979   */\n      shr\n        /* \"#utility.yul\":16942:16979   */\n      swap1\n      pop\n        /* \"#utility.yul\":16869:16986   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16992:17161   */\n    tag_431:\n        /* \"#utility.yul\":17036:17042   */\n      0x00\n        /* \"#utility.yul\":17069:17120   */\n      tag_647\n        /* \"#utility.yul\":17117:17118   */\n      0x00\n        /* \"#utility.yul\":17113:17119   */\n      not\n        /* \"#utility.yul\":17105:17110   */\n      dup5\n        /* \"#utility.yul\":17102:17103   */\n      0x08\n        /* \"#utility.yul\":17098:17111   */\n      mul\n        /* \"#utility.yul\":17069:17120   */\n      tag_430\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":17065:17121   */\n      not\n        /* \"#utility.yul\":17150:17154   */\n      dup1\n        /* \"#utility.yul\":17144:17148   */\n      dup4\n        /* \"#utility.yul\":17140:17155   */\n      and\n        /* \"#utility.yul\":17130:17155   */\n      swap2\n      pop\n        /* \"#utility.yul\":17043:17161   */\n      pop\n        /* \"#utility.yul\":16992:17161   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17166:17461   */\n    tag_432:\n        /* \"#utility.yul\":17242:17246   */\n      0x00\n        /* \"#utility.yul\":17388:17417   */\n      tag_649\n        /* \"#utility.yul\":17413:17416   */\n      dup4\n        /* \"#utility.yul\":17407:17411   */\n      dup4\n        /* \"#utility.yul\":17388:17417   */\n      tag_431\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":17380:17417   */\n      swap2\n      pop\n        /* \"#utility.yul\":17450:17453   */\n      dup3\n        /* \"#utility.yul\":17447:17448   */\n      0x02\n        /* \"#utility.yul\":17443:17454   */\n      mul\n        /* \"#utility.yul\":17437:17441   */\n      dup3\n        /* \"#utility.yul\":17434:17455   */\n      or\n        /* \"#utility.yul\":17426:17455   */\n      swap1\n      pop\n        /* \"#utility.yul\":17166:17461   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17466:18861   */\n    tag_182:\n        /* \"#utility.yul\":17583:17620   */\n      tag_651\n        /* \"#utility.yul\":17616:17619   */\n      dup3\n        /* \"#utility.yul\":17583:17620   */\n      tag_383\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":17685:17703   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17677:17683   */\n      dup2\n        /* \"#utility.yul\":17674:17704   */\n      gt\n        /* \"#utility.yul\":17671:17727   */\n      iszero\n      tag_652\n      jumpi\n        /* \"#utility.yul\":17707:17725   */\n      tag_653\n      tag_403\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":17671:17727   */\n    tag_652:\n        /* \"#utility.yul\":17751:17789   */\n      tag_654\n        /* \"#utility.yul\":17783:17787   */\n      dup3\n        /* \"#utility.yul\":17777:17788   */\n      sload\n        /* \"#utility.yul\":17751:17789   */\n      tag_160\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":17836:17903   */\n      tag_655\n        /* \"#utility.yul\":17896:17902   */\n      dup3\n        /* \"#utility.yul\":17888:17894   */\n      dup3\n        /* \"#utility.yul\":17882:17886   */\n      dup6\n        /* \"#utility.yul\":17836:17903   */\n      tag_429\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":17930:17931   */\n      0x00\n        /* \"#utility.yul\":17954:17958   */\n      0x20\n        /* \"#utility.yul\":17941:17958   */\n      swap1\n      pop\n        /* \"#utility.yul\":17986:17988   */\n      0x1f\n        /* \"#utility.yul\":17978:17984   */\n      dup4\n        /* \"#utility.yul\":17975:17989   */\n      gt\n        /* \"#utility.yul\":18003:18004   */\n      0x01\n        /* \"#utility.yul\":17998:18616   */\n      dup2\n      eq\n      tag_657\n      jumpi\n        /* \"#utility.yul\":18660:18661   */\n      0x00\n        /* \"#utility.yul\":18677:18683   */\n      dup5\n        /* \"#utility.yul\":18674:18751   */\n      iszero\n      tag_658\n      jumpi\n        /* \"#utility.yul\":18726:18735   */\n      dup3\n        /* \"#utility.yul\":18721:18724   */\n      dup8\n        /* \"#utility.yul\":18717:18736   */\n      add\n        /* \"#utility.yul\":18711:18737   */\n      mload\n        /* \"#utility.yul\":18702:18737   */\n      swap1\n      pop\n        /* \"#utility.yul\":18674:18751   */\n    tag_658:\n        /* \"#utility.yul\":18777:18844   */\n      tag_659\n        /* \"#utility.yul\":18837:18843   */\n      dup6\n        /* \"#utility.yul\":18830:18835   */\n      dup3\n        /* \"#utility.yul\":18777:18844   */\n      tag_432\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":18771:18775   */\n      dup7\n        /* \"#utility.yul\":18764:18845   */\n      sstore\n        /* \"#utility.yul\":18633:18855   */\n      pop\n        /* \"#utility.yul\":17968:18855   */\n      jump(tag_656)\n        /* \"#utility.yul\":17998:18616   */\n    tag_657:\n        /* \"#utility.yul\":18050:18054   */\n      0x1f\n        /* \"#utility.yul\":18046:18055   */\n      not\n        /* \"#utility.yul\":18038:18044   */\n      dup5\n        /* \"#utility.yul\":18034:18056   */\n      and\n        /* \"#utility.yul\":18084:18121   */\n      tag_660\n        /* \"#utility.yul\":18116:18120   */\n      dup7\n        /* \"#utility.yul\":18084:18121   */\n      tag_418\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":18143:18144   */\n      0x00\n        /* \"#utility.yul\":18157:18365   */\n    tag_661:\n        /* \"#utility.yul\":18171:18178   */\n      dup3\n        /* \"#utility.yul\":18168:18169   */\n      dup2\n        /* \"#utility.yul\":18165:18179   */\n      lt\n        /* \"#utility.yul\":18157:18365   */\n      iszero\n      tag_663\n      jumpi\n        /* \"#utility.yul\":18250:18259   */\n      dup5\n        /* \"#utility.yul\":18245:18248   */\n      dup10\n        /* \"#utility.yul\":18241:18260   */\n      add\n        /* \"#utility.yul\":18235:18261   */\n      mload\n        /* \"#utility.yul\":18227:18233   */\n      dup3\n        /* \"#utility.yul\":18220:18262   */\n      sstore\n        /* \"#utility.yul\":18301:18302   */\n      0x01\n        /* \"#utility.yul\":18293:18299   */\n      dup3\n        /* \"#utility.yul\":18289:18303   */\n      add\n        /* \"#utility.yul\":18279:18303   */\n      swap2\n      pop\n        /* \"#utility.yul\":18348:18350   */\n      0x20\n        /* \"#utility.yul\":18337:18346   */\n      dup6\n        /* \"#utility.yul\":18333:18351   */\n      add\n        /* \"#utility.yul\":18320:18351   */\n      swap5\n      pop\n        /* \"#utility.yul\":18194:18198   */\n      0x20\n        /* \"#utility.yul\":18191:18192   */\n      dup2\n        /* \"#utility.yul\":18187:18199   */\n      add\n        /* \"#utility.yul\":18182:18199   */\n      swap1\n      pop\n        /* \"#utility.yul\":18157:18365   */\n      jump(tag_661)\n    tag_663:\n        /* \"#utility.yul\":18393:18399   */\n      dup7\n        /* \"#utility.yul\":18384:18391   */\n      dup4\n        /* \"#utility.yul\":18381:18400   */\n      lt\n        /* \"#utility.yul\":18378:18557   */\n      iszero\n      tag_664\n      jumpi\n        /* \"#utility.yul\":18451:18460   */\n      dup5\n        /* \"#utility.yul\":18446:18449   */\n      dup10\n        /* \"#utility.yul\":18442:18461   */\n      add\n        /* \"#utility.yul\":18436:18462   */\n      mload\n        /* \"#utility.yul\":18494:18542   */\n      tag_665\n        /* \"#utility.yul\":18536:18540   */\n      0x1f\n        /* \"#utility.yul\":18528:18534   */\n      dup10\n        /* \"#utility.yul\":18524:18541   */\n      and\n        /* \"#utility.yul\":18513:18522   */\n      dup3\n        /* \"#utility.yul\":18494:18542   */\n      tag_431\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":18486:18492   */\n      dup4\n        /* \"#utility.yul\":18479:18543   */\n      sstore\n        /* \"#utility.yul\":18401:18557   */\n      pop\n        /* \"#utility.yul\":18378:18557   */\n    tag_664:\n        /* \"#utility.yul\":18603:18604   */\n      0x01\n        /* \"#utility.yul\":18599:18600   */\n      0x02\n        /* \"#utility.yul\":18591:18597   */\n      dup9\n        /* \"#utility.yul\":18587:18601   */\n      mul\n        /* \"#utility.yul\":18583:18605   */\n      add\n        /* \"#utility.yul\":18577:18581   */\n      dup9\n        /* \"#utility.yul\":18570:18606   */\n      sstore\n        /* \"#utility.yul\":18005:18616   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17968:18855   */\n    tag_656:\n      pop\n        /* \"#utility.yul\":17558:18861   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17466:18861   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18867:19015   */\n    tag_433:\n        /* \"#utility.yul\":18969:18980   */\n      0x00\n        /* \"#utility.yul\":19006:19009   */\n      dup2\n        /* \"#utility.yul\":18991:19009   */\n      swap1\n      pop\n        /* \"#utility.yul\":18867:19015   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19021:19411   */\n    tag_434:\n        /* \"#utility.yul\":19127:19130   */\n      0x00\n        /* \"#utility.yul\":19155:19194   */\n      tag_668\n        /* \"#utility.yul\":19188:19193   */\n      dup3\n        /* \"#utility.yul\":19155:19194   */\n      tag_383\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":19210:19299   */\n      tag_669\n        /* \"#utility.yul\":19292:19298   */\n      dup2\n        /* \"#utility.yul\":19287:19290   */\n      dup6\n        /* \"#utility.yul\":19210:19299   */\n      tag_433\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":19203:19299   */\n      swap4\n      pop\n        /* \"#utility.yul\":19308:19373   */\n      tag_670\n        /* \"#utility.yul\":19366:19372   */\n      dup2\n        /* \"#utility.yul\":19361:19364   */\n      dup6\n        /* \"#utility.yul\":19354:19358   */\n      0x20\n        /* \"#utility.yul\":19347:19352   */\n      dup7\n        /* \"#utility.yul\":19343:19359   */\n      add\n        /* \"#utility.yul\":19308:19373   */\n      tag_385\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":19398:19404   */\n      dup1\n        /* \"#utility.yul\":19393:19396   */\n      dup5\n        /* \"#utility.yul\":19389:19405   */\n      add\n        /* \"#utility.yul\":19382:19405   */\n      swap2\n      pop\n        /* \"#utility.yul\":19131:19411   */\n      pop\n        /* \"#utility.yul\":19021:19411   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19417:19692   */\n    tag_227:\n        /* \"#utility.yul\":19549:19552   */\n      0x00\n        /* \"#utility.yul\":19571:19666   */\n      tag_672\n        /* \"#utility.yul\":19662:19665   */\n      dup3\n        /* \"#utility.yul\":19653:19659   */\n      dup5\n        /* \"#utility.yul\":19571:19666   */\n      tag_434\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":19564:19666   */\n      swap2\n      pop\n        /* \"#utility.yul\":19683:19686   */\n      dup2\n        /* \"#utility.yul\":19676:19686   */\n      swap1\n      pop\n        /* \"#utility.yul\":19417:19692   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19698:19872   */\n    tag_435:\n        /* \"#utility.yul\":19838:19864   */\n      0x496e76616c69642076657374696e6720636f6e74726163740000000000000000\n        /* \"#utility.yul\":19834:19835   */\n      0x00\n        /* \"#utility.yul\":19826:19832   */\n      dup3\n        /* \"#utility.yul\":19822:19836   */\n      add\n        /* \"#utility.yul\":19815:19865   */\n      mstore\n        /* \"#utility.yul\":19698:19872   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19878:20244   */\n    tag_436:\n        /* \"#utility.yul\":20020:20023   */\n      0x00\n        /* \"#utility.yul\":20041:20108   */\n      tag_675\n        /* \"#utility.yul\":20105:20107   */\n      0x18\n        /* \"#utility.yul\":20100:20103   */\n      dup4\n        /* \"#utility.yul\":20041:20108   */\n      tag_384\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":20034:20108   */\n      swap2\n      pop\n        /* \"#utility.yul\":20117:20210   */\n      tag_676\n        /* \"#utility.yul\":20206:20209   */\n      dup3\n        /* \"#utility.yul\":20117:20210   */\n      tag_435\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":20235:20237   */\n      0x20\n        /* \"#utility.yul\":20230:20233   */\n      dup3\n        /* \"#utility.yul\":20226:20238   */\n      add\n        /* \"#utility.yul\":20219:20238   */\n      swap1\n      pop\n        /* \"#utility.yul\":19878:20244   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20250:20669   */\n    tag_245:\n        /* \"#utility.yul\":20416:20420   */\n      0x00\n        /* \"#utility.yul\":20454:20456   */\n      0x20\n        /* \"#utility.yul\":20443:20452   */\n      dup3\n        /* \"#utility.yul\":20439:20457   */\n      add\n        /* \"#utility.yul\":20431:20457   */\n      swap1\n      pop\n        /* \"#utility.yul\":20503:20512   */\n      dup2\n        /* \"#utility.yul\":20497:20501   */\n      dup2\n        /* \"#utility.yul\":20493:20513   */\n      sub\n        /* \"#utility.yul\":20489:20490   */\n      0x00\n        /* \"#utility.yul\":20478:20487   */\n      dup4\n        /* \"#utility.yul\":20474:20491   */\n      add\n        /* \"#utility.yul\":20467:20514   */\n      mstore\n        /* \"#utility.yul\":20531:20662   */\n      tag_678\n        /* \"#utility.yul\":20657:20661   */\n      dup2\n        /* \"#utility.yul\":20531:20662   */\n      tag_436\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":20523:20662   */\n      swap1\n      pop\n        /* \"#utility.yul\":20250:20669   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20675:20855   */\n    tag_437:\n        /* \"#utility.yul\":20815:20847   */\n      0x56657374696e6720636f6e747261637420616c72656164792061646465640000\n        /* \"#utility.yul\":20811:20812   */\n      0x00\n        /* \"#utility.yul\":20803:20809   */\n      dup3\n        /* \"#utility.yul\":20799:20813   */\n      add\n        /* \"#utility.yul\":20792:20848   */\n      mstore\n        /* \"#utility.yul\":20675:20855   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20861:21227   */\n    tag_438:\n        /* \"#utility.yul\":21003:21006   */\n      0x00\n        /* \"#utility.yul\":21024:21091   */\n      tag_681\n        /* \"#utility.yul\":21088:21090   */\n      0x1e\n        /* \"#utility.yul\":21083:21086   */\n      dup4\n        /* \"#utility.yul\":21024:21091   */\n      tag_384\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":21017:21091   */\n      swap2\n      pop\n        /* \"#utility.yul\":21100:21193   */\n      tag_682\n        /* \"#utility.yul\":21189:21192   */\n      dup3\n        /* \"#utility.yul\":21100:21193   */\n      tag_437\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":21218:21220   */\n      0x20\n        /* \"#utility.yul\":21213:21216   */\n      dup3\n        /* \"#utility.yul\":21209:21221   */\n      add\n        /* \"#utility.yul\":21202:21221   */\n      swap1\n      pop\n        /* \"#utility.yul\":20861:21227   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21233:21652   */\n    tag_248:\n        /* \"#utility.yul\":21399:21403   */\n      0x00\n        /* \"#utility.yul\":21437:21439   */\n      0x20\n        /* \"#utility.yul\":21426:21435   */\n      dup3\n        /* \"#utility.yul\":21422:21440   */\n      add\n        /* \"#utility.yul\":21414:21440   */\n      swap1\n      pop\n        /* \"#utility.yul\":21486:21495   */\n      dup2\n        /* \"#utility.yul\":21480:21484   */\n      dup2\n        /* \"#utility.yul\":21476:21496   */\n      sub\n        /* \"#utility.yul\":21472:21473   */\n      0x00\n        /* \"#utility.yul\":21461:21470   */\n      dup4\n        /* \"#utility.yul\":21457:21474   */\n      add\n        /* \"#utility.yul\":21450:21497   */\n      mstore\n        /* \"#utility.yul\":21514:21645   */\n      tag_684\n        /* \"#utility.yul\":21640:21644   */\n      dup2\n        /* \"#utility.yul\":21514:21645   */\n      tag_438\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":21506:21645   */\n      swap1\n      pop\n        /* \"#utility.yul\":21233:21652   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21658:21834   */\n    tag_439:\n        /* \"#utility.yul\":21798:21826   */\n      0x56657374696e6720636f6e7472616374206e6f7420666f756e64000000000000\n        /* \"#utility.yul\":21794:21795   */\n      0x00\n        /* \"#utility.yul\":21786:21792   */\n      dup3\n        /* \"#utility.yul\":21782:21796   */\n      add\n        /* \"#utility.yul\":21775:21827   */\n      mstore\n        /* \"#utility.yul\":21658:21834   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21840:22206   */\n    tag_440:\n        /* \"#utility.yul\":21982:21985   */\n      0x00\n        /* \"#utility.yul\":22003:22070   */\n      tag_687\n        /* \"#utility.yul\":22067:22069   */\n      0x1a\n        /* \"#utility.yul\":22062:22065   */\n      dup4\n        /* \"#utility.yul\":22003:22070   */\n      tag_384\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":21996:22070   */\n      swap2\n      pop\n        /* \"#utility.yul\":22079:22172   */\n      tag_688\n        /* \"#utility.yul\":22168:22171   */\n      dup3\n        /* \"#utility.yul\":22079:22172   */\n      tag_439\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":22197:22199   */\n      0x20\n        /* \"#utility.yul\":22192:22195   */\n      dup3\n        /* \"#utility.yul\":22188:22200   */\n      add\n        /* \"#utility.yul\":22181:22200   */\n      swap1\n      pop\n        /* \"#utility.yul\":21840:22206   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22212:22631   */\n    tag_257:\n        /* \"#utility.yul\":22378:22382   */\n      0x00\n        /* \"#utility.yul\":22416:22418   */\n      0x20\n        /* \"#utility.yul\":22405:22414   */\n      dup3\n        /* \"#utility.yul\":22401:22419   */\n      add\n        /* \"#utility.yul\":22393:22419   */\n      swap1\n      pop\n        /* \"#utility.yul\":22465:22474   */\n      dup2\n        /* \"#utility.yul\":22459:22463   */\n      dup2\n        /* \"#utility.yul\":22455:22475   */\n      sub\n        /* \"#utility.yul\":22451:22452   */\n      0x00\n        /* \"#utility.yul\":22440:22449   */\n      dup4\n        /* \"#utility.yul\":22436:22453   */\n      add\n        /* \"#utility.yul\":22429:22476   */\n      mstore\n        /* \"#utility.yul\":22493:22624   */\n      tag_690\n        /* \"#utility.yul\":22619:22623   */\n      dup2\n        /* \"#utility.yul\":22493:22624   */\n      tag_440\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":22485:22624   */\n      swap1\n      pop\n        /* \"#utility.yul\":22212:22631   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22637:22806   */\n    tag_441:\n        /* \"#utility.yul\":22777:22798   */\n      0x416c726561647920696e697469616c697a656400000000000000000000000000\n        /* \"#utility.yul\":22773:22774   */\n      0x00\n        /* \"#utility.yul\":22765:22771   */\n      dup3\n        /* \"#utility.yul\":22761:22775   */\n      add\n        /* \"#utility.yul\":22754:22799   */\n      mstore\n        /* \"#utility.yul\":22637:22806   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22812:23178   */\n    tag_442:\n        /* \"#utility.yul\":22954:22957   */\n      0x00\n        /* \"#utility.yul\":22975:23042   */\n      tag_693\n        /* \"#utility.yul\":23039:23041   */\n      0x13\n        /* \"#utility.yul\":23034:23037   */\n      dup4\n        /* \"#utility.yul\":22975:23042   */\n      tag_384\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":22968:23042   */\n      swap2\n      pop\n        /* \"#utility.yul\":23051:23144   */\n      tag_694\n        /* \"#utility.yul\":23140:23143   */\n      dup3\n        /* \"#utility.yul\":23051:23144   */\n      tag_441\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":23169:23171   */\n      0x20\n        /* \"#utility.yul\":23164:23167   */\n      dup3\n        /* \"#utility.yul\":23160:23172   */\n      add\n        /* \"#utility.yul\":23153:23172   */\n      swap1\n      pop\n        /* \"#utility.yul\":22812:23178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23184:23603   */\n    tag_261:\n        /* \"#utility.yul\":23350:23354   */\n      0x00\n        /* \"#utility.yul\":23388:23390   */\n      0x20\n        /* \"#utility.yul\":23377:23386   */\n      dup3\n        /* \"#utility.yul\":23373:23391   */\n      add\n        /* \"#utility.yul\":23365:23391   */\n      swap1\n      pop\n        /* \"#utility.yul\":23437:23446   */\n      dup2\n        /* \"#utility.yul\":23431:23435   */\n      dup2\n        /* \"#utility.yul\":23427:23447   */\n      sub\n        /* \"#utility.yul\":23423:23424   */\n      0x00\n        /* \"#utility.yul\":23412:23421   */\n      dup4\n        /* \"#utility.yul\":23408:23425   */\n      add\n        /* \"#utility.yul\":23401:23448   */\n      mstore\n        /* \"#utility.yul\":23465:23596   */\n      tag_696\n        /* \"#utility.yul\":23591:23595   */\n      dup2\n        /* \"#utility.yul\":23465:23596   */\n      tag_442\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":23457:23596   */\n      swap1\n      pop\n        /* \"#utility.yul\":23184:23603   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23609:23779   */\n    tag_443:\n        /* \"#utility.yul\":23749:23771   */\n      0x4e616d652063616e6e6f7420626520656d707479000000000000000000000000\n        /* \"#utility.yul\":23745:23746   */\n      0x00\n        /* \"#utility.yul\":23737:23743   */\n      dup3\n        /* \"#utility.yul\":23733:23747   */\n      add\n        /* \"#utility.yul\":23726:23772   */\n      mstore\n        /* \"#utility.yul\":23609:23779   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23785:24151   */\n    tag_444:\n        /* \"#utility.yul\":23927:23930   */\n      0x00\n        /* \"#utility.yul\":23948:24015   */\n      tag_699\n        /* \"#utility.yul\":24012:24014   */\n      0x14\n        /* \"#utility.yul\":24007:24010   */\n      dup4\n        /* \"#utility.yul\":23948:24015   */\n      tag_384\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":23941:24015   */\n      swap2\n      pop\n        /* \"#utility.yul\":24024:24117   */\n      tag_700\n        /* \"#utility.yul\":24113:24116   */\n      dup3\n        /* \"#utility.yul\":24024:24117   */\n      tag_443\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":24142:24144   */\n      0x20\n        /* \"#utility.yul\":24137:24140   */\n      dup3\n        /* \"#utility.yul\":24133:24145   */\n      add\n        /* \"#utility.yul\":24126:24145   */\n      swap1\n      pop\n        /* \"#utility.yul\":23785:24151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24157:24576   */\n    tag_264:\n        /* \"#utility.yul\":24323:24327   */\n      0x00\n        /* \"#utility.yul\":24361:24363   */\n      0x20\n        /* \"#utility.yul\":24350:24359   */\n      dup3\n        /* \"#utility.yul\":24346:24364   */\n      add\n        /* \"#utility.yul\":24338:24364   */\n      swap1\n      pop\n        /* \"#utility.yul\":24410:24419   */\n      dup2\n        /* \"#utility.yul\":24404:24408   */\n      dup2\n        /* \"#utility.yul\":24400:24420   */\n      sub\n        /* \"#utility.yul\":24396:24397   */\n      0x00\n        /* \"#utility.yul\":24385:24394   */\n      dup4\n        /* \"#utility.yul\":24381:24398   */\n      add\n        /* \"#utility.yul\":24374:24421   */\n      mstore\n        /* \"#utility.yul\":24438:24569   */\n      tag_702\n        /* \"#utility.yul\":24564:24568   */\n      dup2\n        /* \"#utility.yul\":24438:24569   */\n      tag_444\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":24430:24569   */\n      swap1\n      pop\n        /* \"#utility.yul\":24157:24576   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24582:24754   */\n    tag_445:\n        /* \"#utility.yul\":24722:24746   */\n      0x53796d626f6c2063616e6e6f7420626520656d70747900000000000000000000\n        /* \"#utility.yul\":24718:24719   */\n      0x00\n        /* \"#utility.yul\":24710:24716   */\n      dup3\n        /* \"#utility.yul\":24706:24720   */\n      add\n        /* \"#utility.yul\":24699:24747   */\n      mstore\n        /* \"#utility.yul\":24582:24754   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24760:25126   */\n    tag_446:\n        /* \"#utility.yul\":24902:24905   */\n      0x00\n        /* \"#utility.yul\":24923:24990   */\n      tag_705\n        /* \"#utility.yul\":24987:24989   */\n      0x16\n        /* \"#utility.yul\":24982:24985   */\n      dup4\n        /* \"#utility.yul\":24923:24990   */\n      tag_384\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":24916:24990   */\n      swap2\n      pop\n        /* \"#utility.yul\":24999:25092   */\n      tag_706\n        /* \"#utility.yul\":25088:25091   */\n      dup3\n        /* \"#utility.yul\":24999:25092   */\n      tag_445\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":25117:25119   */\n      0x20\n        /* \"#utility.yul\":25112:25115   */\n      dup3\n        /* \"#utility.yul\":25108:25120   */\n      add\n        /* \"#utility.yul\":25101:25120   */\n      swap1\n      pop\n        /* \"#utility.yul\":24760:25126   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25132:25551   */\n    tag_267:\n        /* \"#utility.yul\":25298:25302   */\n      0x00\n        /* \"#utility.yul\":25336:25338   */\n      0x20\n        /* \"#utility.yul\":25325:25334   */\n      dup3\n        /* \"#utility.yul\":25321:25339   */\n      add\n        /* \"#utility.yul\":25313:25339   */\n      swap1\n      pop\n        /* \"#utility.yul\":25385:25394   */\n      dup2\n        /* \"#utility.yul\":25379:25383   */\n      dup2\n        /* \"#utility.yul\":25375:25395   */\n      sub\n        /* \"#utility.yul\":25371:25372   */\n      0x00\n        /* \"#utility.yul\":25360:25369   */\n      dup4\n        /* \"#utility.yul\":25356:25373   */\n      add\n        /* \"#utility.yul\":25349:25396   */\n      mstore\n        /* \"#utility.yul\":25413:25544   */\n      tag_708\n        /* \"#utility.yul\":25539:25543   */\n      dup2\n        /* \"#utility.yul\":25413:25544   */\n      tag_446\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":25405:25544   */\n      swap1\n      pop\n        /* \"#utility.yul\":25132:25551   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25557:25779   */\n    tag_447:\n        /* \"#utility.yul\":25697:25731   */\n      0x546f74616c20737570706c79206d757374206265206772656174657220746861\n        /* \"#utility.yul\":25693:25694   */\n      0x00\n        /* \"#utility.yul\":25685:25691   */\n      dup3\n        /* \"#utility.yul\":25681:25695   */\n      add\n        /* \"#utility.yul\":25674:25732   */\n      mstore\n        /* \"#utility.yul\":25766:25771   */\n      0x6e20300000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25761:25763   */\n      0x20\n        /* \"#utility.yul\":25753:25759   */\n      dup3\n        /* \"#utility.yul\":25749:25764   */\n      add\n        /* \"#utility.yul\":25742:25772   */\n      mstore\n        /* \"#utility.yul\":25557:25779   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25785:26151   */\n    tag_448:\n        /* \"#utility.yul\":25927:25930   */\n      0x00\n        /* \"#utility.yul\":25948:26015   */\n      tag_711\n        /* \"#utility.yul\":26012:26014   */\n      0x23\n        /* \"#utility.yul\":26007:26010   */\n      dup4\n        /* \"#utility.yul\":25948:26015   */\n      tag_384\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":25941:26015   */\n      swap2\n      pop\n        /* \"#utility.yul\":26024:26117   */\n      tag_712\n        /* \"#utility.yul\":26113:26116   */\n      dup3\n        /* \"#utility.yul\":26024:26117   */\n      tag_447\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":26142:26144   */\n      0x40\n        /* \"#utility.yul\":26137:26140   */\n      dup3\n        /* \"#utility.yul\":26133:26145   */\n      add\n        /* \"#utility.yul\":26126:26145   */\n      swap1\n      pop\n        /* \"#utility.yul\":25785:26151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26157:26576   */\n    tag_270:\n        /* \"#utility.yul\":26323:26327   */\n      0x00\n        /* \"#utility.yul\":26361:26363   */\n      0x20\n        /* \"#utility.yul\":26350:26359   */\n      dup3\n        /* \"#utility.yul\":26346:26364   */\n      add\n        /* \"#utility.yul\":26338:26364   */\n      swap1\n      pop\n        /* \"#utility.yul\":26410:26419   */\n      dup2\n        /* \"#utility.yul\":26404:26408   */\n      dup2\n        /* \"#utility.yul\":26400:26420   */\n      sub\n        /* \"#utility.yul\":26396:26397   */\n      0x00\n        /* \"#utility.yul\":26385:26394   */\n      dup4\n        /* \"#utility.yul\":26381:26398   */\n      add\n        /* \"#utility.yul\":26374:26421   */\n      mstore\n        /* \"#utility.yul\":26438:26569   */\n      tag_714\n        /* \"#utility.yul\":26564:26568   */\n      dup2\n        /* \"#utility.yul\":26438:26569   */\n      tag_448\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":26430:26569   */\n      swap1\n      pop\n        /* \"#utility.yul\":26157:26576   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26582:26753   */\n    tag_449:\n        /* \"#utility.yul\":26722:26745   */\n      0x496e76616c6964206f776e657220616464726573730000000000000000000000\n        /* \"#utility.yul\":26718:26719   */\n      0x00\n        /* \"#utility.yul\":26710:26716   */\n      dup3\n        /* \"#utility.yul\":26706:26720   */\n      add\n        /* \"#utility.yul\":26699:26746   */\n      mstore\n        /* \"#utility.yul\":26582:26753   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26759:27125   */\n    tag_450:\n        /* \"#utility.yul\":26901:26904   */\n      0x00\n        /* \"#utility.yul\":26922:26989   */\n      tag_717\n        /* \"#utility.yul\":26986:26988   */\n      0x15\n        /* \"#utility.yul\":26981:26984   */\n      dup4\n        /* \"#utility.yul\":26922:26989   */\n      tag_384\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":26915:26989   */\n      swap2\n      pop\n        /* \"#utility.yul\":26998:27091   */\n      tag_718\n        /* \"#utility.yul\":27087:27090   */\n      dup3\n        /* \"#utility.yul\":26998:27091   */\n      tag_449\n      jump\t// in\n    tag_718:\n        /* \"#utility.yul\":27116:27118   */\n      0x20\n        /* \"#utility.yul\":27111:27114   */\n      dup3\n        /* \"#utility.yul\":27107:27119   */\n      add\n        /* \"#utility.yul\":27100:27119   */\n      swap1\n      pop\n        /* \"#utility.yul\":26759:27125   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27131:27550   */\n    tag_273:\n        /* \"#utility.yul\":27297:27301   */\n      0x00\n        /* \"#utility.yul\":27335:27337   */\n      0x20\n        /* \"#utility.yul\":27324:27333   */\n      dup3\n        /* \"#utility.yul\":27320:27338   */\n      add\n        /* \"#utility.yul\":27312:27338   */\n      swap1\n      pop\n        /* \"#utility.yul\":27384:27393   */\n      dup2\n        /* \"#utility.yul\":27378:27382   */\n      dup2\n        /* \"#utility.yul\":27374:27394   */\n      sub\n        /* \"#utility.yul\":27370:27371   */\n      0x00\n        /* \"#utility.yul\":27359:27368   */\n      dup4\n        /* \"#utility.yul\":27355:27372   */\n      add\n        /* \"#utility.yul\":27348:27395   */\n      mstore\n        /* \"#utility.yul\":27412:27543   */\n      tag_720\n        /* \"#utility.yul\":27538:27542   */\n      dup2\n        /* \"#utility.yul\":27412:27543   */\n      tag_450\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":27404:27543   */\n      swap1\n      pop\n        /* \"#utility.yul\":27131:27550   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27556:28291   */\n    tag_280:\n        /* \"#utility.yul\":27773:27777   */\n      0x00\n        /* \"#utility.yul\":27811:27814   */\n      0x80\n        /* \"#utility.yul\":27800:27809   */\n      dup3\n        /* \"#utility.yul\":27796:27815   */\n      add\n        /* \"#utility.yul\":27788:27815   */\n      swap1\n      pop\n        /* \"#utility.yul\":27861:27870   */\n      dup2\n        /* \"#utility.yul\":27855:27859   */\n      dup2\n        /* \"#utility.yul\":27851:27871   */\n      sub\n        /* \"#utility.yul\":27847:27848   */\n      0x00\n        /* \"#utility.yul\":27836:27845   */\n      dup4\n        /* \"#utility.yul\":27832:27849   */\n      add\n        /* \"#utility.yul\":27825:27872   */\n      mstore\n        /* \"#utility.yul\":27889:27967   */\n      tag_722\n        /* \"#utility.yul\":27962:27966   */\n      dup2\n        /* \"#utility.yul\":27953:27959   */\n      dup8\n        /* \"#utility.yul\":27889:27967   */\n      tag_387\n      jump\t// in\n    tag_722:\n        /* \"#utility.yul\":27881:27967   */\n      swap1\n      pop\n        /* \"#utility.yul\":28014:28023   */\n      dup2\n        /* \"#utility.yul\":28008:28012   */\n      dup2\n        /* \"#utility.yul\":28004:28024   */\n      sub\n        /* \"#utility.yul\":27999:28001   */\n      0x20\n        /* \"#utility.yul\":27988:27997   */\n      dup4\n        /* \"#utility.yul\":27984:28002   */\n      add\n        /* \"#utility.yul\":27977:28025   */\n      mstore\n        /* \"#utility.yul\":28042:28120   */\n      tag_723\n        /* \"#utility.yul\":28115:28119   */\n      dup2\n        /* \"#utility.yul\":28106:28112   */\n      dup7\n        /* \"#utility.yul\":28042:28120   */\n      tag_387\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":28034:28120   */\n      swap1\n      pop\n        /* \"#utility.yul\":28130:28202   */\n      tag_724\n        /* \"#utility.yul\":28198:28200   */\n      0x40\n        /* \"#utility.yul\":28187:28196   */\n      dup4\n        /* \"#utility.yul\":28183:28201   */\n      add\n        /* \"#utility.yul\":28174:28180   */\n      dup6\n        /* \"#utility.yul\":28130:28202   */\n      tag_400\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":28212:28284   */\n      tag_725\n        /* \"#utility.yul\":28280:28282   */\n      0x60\n        /* \"#utility.yul\":28269:28278   */\n      dup4\n        /* \"#utility.yul\":28265:28283   */\n      add\n        /* \"#utility.yul\":28256:28262   */\n      dup5\n        /* \"#utility.yul\":28212:28284   */\n      tag_412\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":27556:28291   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28297:28476   */\n    tag_451:\n        /* \"#utility.yul\":28437:28468   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e2030000000\n        /* \"#utility.yul\":28433:28434   */\n      0x00\n        /* \"#utility.yul\":28425:28431   */\n      dup3\n        /* \"#utility.yul\":28421:28435   */\n      add\n        /* \"#utility.yul\":28414:28469   */\n      mstore\n        /* \"#utility.yul\":28297:28476   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28482:28848   */\n    tag_452:\n        /* \"#utility.yul\":28624:28627   */\n      0x00\n        /* \"#utility.yul\":28645:28712   */\n      tag_728\n        /* \"#utility.yul\":28709:28711   */\n      0x1d\n        /* \"#utility.yul\":28704:28707   */\n      dup4\n        /* \"#utility.yul\":28645:28712   */\n      tag_384\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":28638:28712   */\n      swap2\n      pop\n        /* \"#utility.yul\":28721:28814   */\n      tag_729\n        /* \"#utility.yul\":28810:28813   */\n      dup3\n        /* \"#utility.yul\":28721:28814   */\n      tag_451\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":28839:28841   */\n      0x20\n        /* \"#utility.yul\":28834:28837   */\n      dup3\n        /* \"#utility.yul\":28830:28842   */\n      add\n        /* \"#utility.yul\":28823:28842   */\n      swap1\n      pop\n        /* \"#utility.yul\":28482:28848   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28854:29273   */\n    tag_288:\n        /* \"#utility.yul\":29020:29024   */\n      0x00\n        /* \"#utility.yul\":29058:29060   */\n      0x20\n        /* \"#utility.yul\":29047:29056   */\n      dup3\n        /* \"#utility.yul\":29043:29061   */\n      add\n        /* \"#utility.yul\":29035:29061   */\n      swap1\n      pop\n        /* \"#utility.yul\":29107:29116   */\n      dup2\n        /* \"#utility.yul\":29101:29105   */\n      dup2\n        /* \"#utility.yul\":29097:29117   */\n      sub\n        /* \"#utility.yul\":29093:29094   */\n      0x00\n        /* \"#utility.yul\":29082:29091   */\n      dup4\n        /* \"#utility.yul\":29078:29095   */\n      add\n        /* \"#utility.yul\":29071:29118   */\n      mstore\n        /* \"#utility.yul\":29135:29266   */\n      tag_731\n        /* \"#utility.yul\":29261:29265   */\n      dup2\n        /* \"#utility.yul\":29135:29266   */\n      tag_452\n      jump\t// in\n    tag_731:\n        /* \"#utility.yul\":29127:29266   */\n      swap1\n      pop\n        /* \"#utility.yul\":28854:29273   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29279:29702   */\n    tag_291:\n        /* \"#utility.yul\":29420:29424   */\n      0x00\n        /* \"#utility.yul\":29458:29460   */\n      0x40\n        /* \"#utility.yul\":29447:29456   */\n      dup3\n        /* \"#utility.yul\":29443:29461   */\n      add\n        /* \"#utility.yul\":29435:29461   */\n      swap1\n      pop\n        /* \"#utility.yul\":29507:29516   */\n      dup2\n        /* \"#utility.yul\":29501:29505   */\n      dup2\n        /* \"#utility.yul\":29497:29517   */\n      sub\n        /* \"#utility.yul\":29493:29494   */\n      0x00\n        /* \"#utility.yul\":29482:29491   */\n      dup4\n        /* \"#utility.yul\":29478:29495   */\n      add\n        /* \"#utility.yul\":29471:29518   */\n      mstore\n        /* \"#utility.yul\":29535:29613   */\n      tag_733\n        /* \"#utility.yul\":29608:29612   */\n      dup2\n        /* \"#utility.yul\":29599:29605   */\n      dup6\n        /* \"#utility.yul\":29535:29613   */\n      tag_387\n      jump\t// in\n    tag_733:\n        /* \"#utility.yul\":29527:29613   */\n      swap1\n      pop\n        /* \"#utility.yul\":29623:29695   */\n      tag_734\n        /* \"#utility.yul\":29691:29693   */\n      0x20\n        /* \"#utility.yul\":29680:29689   */\n      dup4\n        /* \"#utility.yul\":29676:29694   */\n      add\n        /* \"#utility.yul\":29667:29673   */\n      dup5\n        /* \"#utility.yul\":29623:29695   */\n      tag_400\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":29279:29702   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29708:29875   */\n    tag_453:\n        /* \"#utility.yul\":29848:29867   */\n      0x496e76616c696420726563697069656e74000000000000000000000000000000\n        /* \"#utility.yul\":29844:29845   */\n      0x00\n        /* \"#utility.yul\":29836:29842   */\n      dup3\n        /* \"#utility.yul\":29832:29846   */\n      add\n        /* \"#utility.yul\":29825:29868   */\n      mstore\n        /* \"#utility.yul\":29708:29875   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29881:30247   */\n    tag_454:\n        /* \"#utility.yul\":30023:30026   */\n      0x00\n        /* \"#utility.yul\":30044:30111   */\n      tag_737\n        /* \"#utility.yul\":30108:30110   */\n      0x11\n        /* \"#utility.yul\":30103:30106   */\n      dup4\n        /* \"#utility.yul\":30044:30111   */\n      tag_384\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":30037:30111   */\n      swap2\n      pop\n        /* \"#utility.yul\":30120:30213   */\n      tag_738\n        /* \"#utility.yul\":30209:30212   */\n      dup3\n        /* \"#utility.yul\":30120:30213   */\n      tag_453\n      jump\t// in\n    tag_738:\n        /* \"#utility.yul\":30238:30240   */\n      0x20\n        /* \"#utility.yul\":30233:30236   */\n      dup3\n        /* \"#utility.yul\":30229:30241   */\n      add\n        /* \"#utility.yul\":30222:30241   */\n      swap1\n      pop\n        /* \"#utility.yul\":29881:30247   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30253:30672   */\n    tag_298:\n        /* \"#utility.yul\":30419:30423   */\n      0x00\n        /* \"#utility.yul\":30457:30459   */\n      0x20\n        /* \"#utility.yul\":30446:30455   */\n      dup3\n        /* \"#utility.yul\":30442:30460   */\n      add\n        /* \"#utility.yul\":30434:30460   */\n      swap1\n      pop\n        /* \"#utility.yul\":30506:30515   */\n      dup2\n        /* \"#utility.yul\":30500:30504   */\n      dup2\n        /* \"#utility.yul\":30496:30516   */\n      sub\n        /* \"#utility.yul\":30492:30493   */\n      0x00\n        /* \"#utility.yul\":30481:30490   */\n      dup4\n        /* \"#utility.yul\":30477:30494   */\n      add\n        /* \"#utility.yul\":30470:30517   */\n      mstore\n        /* \"#utility.yul\":30534:30665   */\n      tag_740\n        /* \"#utility.yul\":30660:30664   */\n      dup2\n        /* \"#utility.yul\":30534:30665   */\n      tag_454\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":30526:30665   */\n      swap1\n      pop\n        /* \"#utility.yul\":30253:30672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30678:30858   */\n    tag_455:\n        /* \"#utility.yul\":30726:30803   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":30723:30724   */\n      0x00\n        /* \"#utility.yul\":30716:30804   */\n      mstore\n        /* \"#utility.yul\":30823:30827   */\n      0x11\n        /* \"#utility.yul\":30820:30821   */\n      0x04\n        /* \"#utility.yul\":30813:30828   */\n      mstore\n        /* \"#utility.yul\":30847:30851   */\n      0x24\n        /* \"#utility.yul\":30844:30845   */\n      0x00\n        /* \"#utility.yul\":30837:30852   */\n      revert\n        /* \"#utility.yul\":30864:31055   */\n    tag_304:\n        /* \"#utility.yul\":30904:30907   */\n      0x00\n        /* \"#utility.yul\":30923:30943   */\n      tag_743\n        /* \"#utility.yul\":30941:30942   */\n      dup3\n        /* \"#utility.yul\":30923:30943   */\n      tag_395\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":30918:30943   */\n      swap2\n      pop\n        /* \"#utility.yul\":30957:30977   */\n      tag_744\n        /* \"#utility.yul\":30975:30976   */\n      dup4\n        /* \"#utility.yul\":30957:30977   */\n      tag_395\n      jump\t// in\n    tag_744:\n        /* \"#utility.yul\":30952:30977   */\n      swap3\n      pop\n        /* \"#utility.yul\":31000:31001   */\n      dup3\n        /* \"#utility.yul\":30997:30998   */\n      dup3\n        /* \"#utility.yul\":30993:31002   */\n      add\n        /* \"#utility.yul\":30986:31002   */\n      swap1\n      pop\n        /* \"#utility.yul\":31021:31024   */\n      dup1\n        /* \"#utility.yul\":31018:31019   */\n      dup3\n        /* \"#utility.yul\":31015:31025   */\n      gt\n        /* \"#utility.yul\":31012:31048   */\n      iszero\n      tag_745\n      jumpi\n        /* \"#utility.yul\":31028:31046   */\n      tag_746\n      tag_455\n      jump\t// in\n    tag_746:\n        /* \"#utility.yul\":31012:31048   */\n    tag_745:\n        /* \"#utility.yul\":30864:31055   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31061:31503   */\n    tag_327:\n        /* \"#utility.yul\":31210:31214   */\n      0x00\n        /* \"#utility.yul\":31248:31250   */\n      0x60\n        /* \"#utility.yul\":31237:31246   */\n      dup3\n        /* \"#utility.yul\":31233:31251   */\n      add\n        /* \"#utility.yul\":31225:31251   */\n      swap1\n      pop\n        /* \"#utility.yul\":31261:31332   */\n      tag_748\n        /* \"#utility.yul\":31329:31330   */\n      0x00\n        /* \"#utility.yul\":31318:31327   */\n      dup4\n        /* \"#utility.yul\":31314:31331   */\n      add\n        /* \"#utility.yul\":31305:31311   */\n      dup7\n        /* \"#utility.yul\":31261:31332   */\n      tag_412\n      jump\t// in\n    tag_748:\n        /* \"#utility.yul\":31342:31414   */\n      tag_749\n        /* \"#utility.yul\":31410:31412   */\n      0x20\n        /* \"#utility.yul\":31399:31408   */\n      dup4\n        /* \"#utility.yul\":31395:31413   */\n      add\n        /* \"#utility.yul\":31386:31392   */\n      dup6\n        /* \"#utility.yul\":31342:31414   */\n      tag_400\n      jump\t// in\n    tag_749:\n        /* \"#utility.yul\":31424:31496   */\n      tag_750\n        /* \"#utility.yul\":31492:31494   */\n      0x40\n        /* \"#utility.yul\":31481:31490   */\n      dup4\n        /* \"#utility.yul\":31477:31495   */\n      add\n        /* \"#utility.yul\":31468:31474   */\n      dup5\n        /* \"#utility.yul\":31424:31496   */\n      tag_400\n      jump\t// in\n    tag_750:\n        /* \"#utility.yul\":31061:31503   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31509:31679   */\n    tag_456:\n        /* \"#utility.yul\":31649:31671   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":31645:31646   */\n      0x00\n        /* \"#utility.yul\":31637:31643   */\n      dup3\n        /* \"#utility.yul\":31633:31647   */\n      add\n        /* \"#utility.yul\":31626:31672   */\n      mstore\n        /* \"#utility.yul\":31509:31679   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31685:32051   */\n    tag_457:\n        /* \"#utility.yul\":31827:31830   */\n      0x00\n        /* \"#utility.yul\":31848:31915   */\n      tag_753\n        /* \"#utility.yul\":31912:31914   */\n      0x14\n        /* \"#utility.yul\":31907:31910   */\n      dup4\n        /* \"#utility.yul\":31848:31915   */\n      tag_384\n      jump\t// in\n    tag_753:\n        /* \"#utility.yul\":31841:31915   */\n      swap2\n      pop\n        /* \"#utility.yul\":31924:32017   */\n      tag_754\n        /* \"#utility.yul\":32013:32016   */\n      dup3\n        /* \"#utility.yul\":31924:32017   */\n      tag_456\n      jump\t// in\n    tag_754:\n        /* \"#utility.yul\":32042:32044   */\n      0x20\n        /* \"#utility.yul\":32037:32040   */\n      dup3\n        /* \"#utility.yul\":32033:32045   */\n      add\n        /* \"#utility.yul\":32026:32045   */\n      swap1\n      pop\n        /* \"#utility.yul\":31685:32051   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32057:32476   */\n    tag_377:\n        /* \"#utility.yul\":32223:32227   */\n      0x00\n        /* \"#utility.yul\":32261:32263   */\n      0x20\n        /* \"#utility.yul\":32250:32259   */\n      dup3\n        /* \"#utility.yul\":32246:32264   */\n      add\n        /* \"#utility.yul\":32238:32264   */\n      swap1\n      pop\n        /* \"#utility.yul\":32310:32319   */\n      dup2\n        /* \"#utility.yul\":32304:32308   */\n      dup2\n        /* \"#utility.yul\":32300:32320   */\n      sub\n        /* \"#utility.yul\":32296:32297   */\n      0x00\n        /* \"#utility.yul\":32285:32294   */\n      dup4\n        /* \"#utility.yul\":32281:32298   */\n      add\n        /* \"#utility.yul\":32274:32321   */\n      mstore\n        /* \"#utility.yul\":32338:32469   */\n      tag_756\n        /* \"#utility.yul\":32464:32468   */\n      dup2\n        /* \"#utility.yul\":32338:32469   */\n      tag_457\n      jump\t// in\n    tag_756:\n        /* \"#utility.yul\":32330:32469   */\n      swap1\n      pop\n        /* \"#utility.yul\":32057:32476   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32482:32648   */\n    tag_458:\n        /* \"#utility.yul\":32622:32640   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":32618:32619   */\n      0x00\n        /* \"#utility.yul\":32610:32616   */\n      dup3\n        /* \"#utility.yul\":32606:32620   */\n      add\n        /* \"#utility.yul\":32599:32641   */\n      mstore\n        /* \"#utility.yul\":32482:32648   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32654:33020   */\n    tag_459:\n        /* \"#utility.yul\":32796:32799   */\n      0x00\n        /* \"#utility.yul\":32817:32884   */\n      tag_759\n        /* \"#utility.yul\":32881:32883   */\n      0x10\n        /* \"#utility.yul\":32876:32879   */\n      dup4\n        /* \"#utility.yul\":32817:32884   */\n      tag_384\n      jump\t// in\n    tag_759:\n        /* \"#utility.yul\":32810:32884   */\n      swap2\n      pop\n        /* \"#utility.yul\":32893:32986   */\n      tag_760\n        /* \"#utility.yul\":32982:32985   */\n      dup3\n        /* \"#utility.yul\":32893:32986   */\n      tag_458\n      jump\t// in\n    tag_760:\n        /* \"#utility.yul\":33011:33013   */\n      0x20\n        /* \"#utility.yul\":33006:33009   */\n      dup3\n        /* \"#utility.yul\":33002:33014   */\n      add\n        /* \"#utility.yul\":32995:33014   */\n      swap1\n      pop\n        /* \"#utility.yul\":32654:33020   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33026:33445   */\n    tag_382:\n        /* \"#utility.yul\":33192:33196   */\n      0x00\n        /* \"#utility.yul\":33230:33232   */\n      0x20\n        /* \"#utility.yul\":33219:33228   */\n      dup3\n        /* \"#utility.yul\":33215:33233   */\n      add\n        /* \"#utility.yul\":33207:33233   */\n      swap1\n      pop\n        /* \"#utility.yul\":33279:33288   */\n      dup2\n        /* \"#utility.yul\":33273:33277   */\n      dup2\n        /* \"#utility.yul\":33269:33289   */\n      sub\n        /* \"#utility.yul\":33265:33266   */\n      0x00\n        /* \"#utility.yul\":33254:33263   */\n      dup4\n        /* \"#utility.yul\":33250:33267   */\n      add\n        /* \"#utility.yul\":33243:33290   */\n      mstore\n        /* \"#utility.yul\":33307:33438   */\n      tag_762\n        /* \"#utility.yul\":33433:33437   */\n      dup2\n        /* \"#utility.yul\":33307:33438   */\n      tag_459\n      jump\t// in\n    tag_762:\n        /* \"#utility.yul\":33299:33438   */\n      swap1\n      pop\n        /* \"#utility.yul\":33026:33445   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c9dd87991d3dfd3269ee70b4e1b3a1856c4210a541487b49ad605b1370ba413164736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_542": {
									"entryPoint": null,
									"id": 542,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_77": {
									"entryPoint": null,
									"id": 77,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_803": {
									"entryPoint": null,
									"id": 803,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_936": {
									"entryPoint": null,
									"id": 936,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_638": {
									"entryPoint": 251,
									"id": 638,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 907,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 501,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 456,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 643,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 794,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 837,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5817:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "140:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "157:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "160:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "150:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "150:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "254:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "257:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "247:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "281:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "271:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "326:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "346:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "467:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "457:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "457:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "535:269:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "545:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "565:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "612:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "602:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "580:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "653:51:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "689:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:26:8"
															},
															"nodeType": "YulIf",
															"src": "623:81:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "756:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "751:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:38:8"
															},
															"nodeType": "YulIf",
															"src": "714:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "519:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "528:6:8",
														"type": ""
													}
												],
												"src": "484:320:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "864:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "874:11:8",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "882:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "902:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "895:14:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "895:14:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "918:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "936:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "926:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "851:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "859:4:8",
														"type": ""
													}
												],
												"src": "810:141:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1001:49:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1011:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1021:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "984:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "994:6:8",
														"type": ""
													}
												],
												"src": "957:93:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1119:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:8"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "1084:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1090:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "1100:8:8",
														"type": ""
													}
												],
												"src": "1056:107:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1245:317:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1417:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1477:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1516:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:8"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1206:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "1213:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "1225:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1238:6:8",
														"type": ""
													}
												],
												"src": "1169:393:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1634:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1595:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1605:7:8",
														"type": ""
													}
												],
												"src": "1568:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1683:28:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1693:12:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1700:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1669:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1679:3:8",
														"type": ""
													}
												],
												"src": "1651:60:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1777:82:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1787:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1757:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1767:9:8",
														"type": ""
													}
												],
												"src": "1717:142:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1912:28:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1922:12:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1929:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1898:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1908:3:8",
														"type": ""
													}
												],
												"src": "1865:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2022:193:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:8"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:105:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1999:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2005:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "2013:7:8",
														"type": ""
													}
												],
												"src": "1946:269:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2270:24:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2280:8:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2287:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2266:3:8",
														"type": ""
													}
												],
												"src": "2221:73:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2353:136:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2377:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2339:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2345:6:8",
														"type": ""
													}
												],
												"src": "2300:189:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2545:136:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2612:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:14:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2577:26:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2579:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2559:2:8",
																"statements": []
															},
															"src": "2555:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "2533:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2540:3:8",
														"type": ""
													}
												],
												"src": "2495:186:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2766:464:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2792:431:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3093:27:8",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3095:23:8",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:8"
																		},
																		"nodeType": "YulIf",
																		"src": "3071:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2780:11:8"
															},
															"nodeType": "YulIf",
															"src": "2777:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2742:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2749:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2754:10:8",
														"type": ""
													}
												],
												"src": "2687:543:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3299:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3309:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:8"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "3274:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3280:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "3290:8:8",
														"type": ""
													}
												],
												"src": "3236:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3410:118:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3432:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3497:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:8"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3507:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3387:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "3393:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3403:6:8",
														"type": ""
													}
												],
												"src": "3359:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3614:214:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3747:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:8"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3755:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3595:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3601:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "3609:4:8",
														"type": ""
													}
												],
												"src": "3533:295:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3925:1303:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3950:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4072:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:30:8"
															},
															"nodeType": "YulIf",
															"src": "4038:56:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4118:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:8"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4203:67:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4297:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4308:17:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4321:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4372:611:8",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:8",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4569:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:8"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:8"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:8"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4646:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:8"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4687:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:8"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "4547:21:8",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4549:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "4528:3:8",
																					"statements": []
																				},
																				"src": "4524:208:8"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4768:156:8",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:8"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:8"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:8"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:8"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:8"
																				},
																				"nodeType": "YulIf",
																				"src": "4745:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:8"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:8"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:8"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4365:618:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5000:222:8",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:8",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5051:67:8",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5069:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:8"
																				},
																				"nodeType": "YulIf",
																				"src": "5041:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:8"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:8"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4992:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4342:14:8"
															},
															"nodeType": "YulSwitch",
															"src": "4335:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3914:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3920:3:8",
														"type": ""
													}
												],
												"src": "3833:1395:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5279:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5289:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5300:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5261:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5271:7:8",
														"type": ""
													}
												],
												"src": "5234:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5411:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5421:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5432:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5393:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5403:7:8",
														"type": ""
													}
												],
												"src": "5366:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5533:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5543:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5521:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5528:3:8",
														"type": ""
													}
												],
												"src": "5468:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5690:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5700:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5708:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5736:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5662:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5674:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5685:4:8",
														"type": ""
													}
												],
												"src": "5592:222:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b503360405180602001604052805f81525060405180602001604052805f815250816003908162000041919062000422565b50806004908162000053919062000422565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000c9575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000c0919062000549565b60405180910390fd5b620000da81620000fb60201b60201c565b505f600560146101000a81548160ff02191690831515021790555062000564565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200023a57607f821691505b60208210810362000250576200024f620001f5565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620002b47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000277565b620002c0868362000277565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6200030a62000304620002fe84620002d8565b620002e1565b620002d8565b9050919050565b5f819050919050565b6200032583620002ea565b6200033d620003348262000311565b84845462000283565b825550505050565b5f90565b6200035362000345565b620003608184846200031a565b505050565b5b8181101562000387576200037b5f8262000349565b60018101905062000366565b5050565b601f821115620003d657620003a08162000256565b620003ab8462000268565b81016020851015620003bb578190505b620003d3620003ca8562000268565b83018262000365565b50505b505050565b5f82821c905092915050565b5f620003f85f1984600802620003db565b1980831691505092915050565b5f620004128383620003e7565b9150826002028217905092915050565b6200042d82620001be565b67ffffffffffffffff811115620004495762000448620001c8565b5b62000455825462000222565b620004628282856200038b565b5f60209050601f83116001811462000498575f841562000483578287015190505b6200048f858262000405565b865550620004fe565b601f198416620004a88662000256565b5f5b82811015620004d157848901518255600182019150602085019450602081019050620004aa565b86831015620004f15784890151620004ed601f891682620003e7565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620005318262000506565b9050919050565b620005438162000525565b82525050565b5f6020820190506200055e5f83018462000538565b92915050565b612e6480620005725f395ff3fe608060405234801561000f575f80fd5b50600436106101e3575f3560e01c8063715018a61161010d578063a9059cbb116100a0578063d64582851161006f578063d64582851461058f578063dd62ed3e146105ab578063ecbc5095146105db578063f2fde38b146105f7576101e3565b8063a9059cbb146104f7578063bc3bea5e14610527578063bd3a13f614610543578063cb3fdb611461055f576101e3565b80638456cb59116100dc5780638456cb59146104955780638da5cb5b1461049f57806395d89b41146104bd578063a00686f1146104db576101e3565b8063715018a61461040f57806379cc6790146104195780637f58b9d3146104355780637fb3609914610465576101e3565b8063392e53cd116101855780634ebc47f8116101545780634ebc47f8146103615780635c975abb1461039157806366368fb6146103af57806370a08231146103df576101e3565b8063392e53cd146102ed5780633f4ba83a1461030b57806342966c68146103155780634cf590b014610331576101e3565b806319eccdfd116101c157806319eccdfd1461025357806323b872dd1461026f578063313ce5671461029f57806337915874146102bd576101e3565b806306fdde03146101e7578063095ea7b31461020557806318160ddd14610235575b5f80fd5b6101ef610613565b6040516101fc9190611e81565b60405180910390f35b61021f600480360381019061021a9190611f3f565b6106a3565b60405161022c9190611f97565b60405180910390f35b61023d6106c5565b60405161024a9190611fbf565b60405180910390f35b61026d60048036038101906102689190612104565b6106ce565b005b6102896004803603810190610284919061215e565b610824565b6040516102969190611f97565b60405180910390f35b6102a7610852565b6040516102b491906121c9565b60405180910390f35b6102d760048036038101906102d291906121e2565b610867565b6040516102e49190611f97565b60405180910390f35b6102f5610884565b6040516103029190611f97565b60405180910390f35b610313610899565b005b61032f600480360381019061032a919061220d565b6108ab565b005b61034b600480360381019061034691906121e2565b6108c0565b6040516103589190611e81565b60405180910390f35b61037b600480360381019061037691906121e2565b61098d565b6040516103889190611e81565b60405180910390f35b610399610a28565b6040516103a69190611f97565b60405180910390f35b6103c960048036038101906103c49190612238565b610a3e565b6040516103d69190611fbf565b60405180910390f35b6103f960048036038101906103f491906121e2565b610a6b565b6040516104069190611fbf565b60405180910390f35b610417610ab0565b005b610433600480360381019061042e9190611f3f565b610ac3565b005b61044f600480360381019061044a91906121e2565b610ad9565b60405161045c9190611fbf565b60405180910390f35b61047f600480360381019061047a9190612238565b610b1f565b60405161048c9190611fbf565b60405180910390f35b61049d610b46565b005b6104a7610b58565b6040516104b4919061228e565b60405180910390f35b6104c5610b80565b6040516104d29190611e81565b60405180910390f35b6104f560048036038101906104f091906121e2565b610c10565b005b610511600480360381019061050c9190611f3f565b610dab565b60405161051e9190611f97565b60405180910390f35b610541600480360381019061053c91906121e2565b610dcd565b005b61055d600480360381019061055891906122a7565b610ef8565b005b610579600480360381019061057491906121e2565b611128565b6040516105869190611fbf565b60405180910390f35b6105a960048036038101906105a49190612343565b61113d565b005b6105c560048036038101906105c0919061239d565b61122a565b6040516105d29190611fbf565b60405180910390f35b6105f560048036038101906105f091906123db565b6112ac565b005b610611600480360381019061060c91906121e2565b61144f565b005b60606006805461062290612458565b80601f016020809104026020016040519081016040528092919081815260200182805461064e90612458565b80156106995780601f1061067057610100808354040283529160200191610699565b820191905f5260205f20905b81548152906001019060200180831161067c57829003601f168201915b5050505050905090565b5f806106ad6114d3565b90506106ba8185856114da565b600191505092915050565b5f600254905090565b6106d66114ec565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610744576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073b906124d2565b60405180910390fd5b5f815111610787576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077e9061253a565b60405180910390fd5b80600c5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090816107d191906126f5565b508173ffffffffffffffffffffffffffffffffffffffff167fa110b2daa9b9328e235e98c75405f18d092b0d0edd4574cc8d80a41908fbf0bf826040516108189190611e81565b60405180910390a25050565b5f8061082e6114d3565b905061083b858285611573565b610846858585611606565b60019150509392505050565b5f60085f9054906101000a900460ff16905090565b600a602052805f5260405f205f915054906101000a900460ff1681565b5f600d5f9054906101000a900460ff16905090565b6108a16114ec565b6108a96116f6565b565b6108b36114ec565b6108bd3382611758565b50565b6060600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805461090a90612458565b80601f016020809104026020016040519081016040528092919081815260200182805461093690612458565b80156109815780601f1061095857610100808354040283529160200191610981565b820191905f5260205f20905b81548152906001019060200180831161096457829003601f168201915b50505050509050919050565b600c602052805f5260405f205f9150905080546109a990612458565b80601f01602080910402602001604051908101604052809291908181526020018280546109d590612458565b8015610a205780601f106109f757610100808354040283529160200191610a20565b820191905f5260205f20905b815481529060010190602001808311610a0357829003601f168201915b505050505081565b5f600560149054906101000a900460ff16905090565b600b818051602081018201805184825260208301602085012081835280955050505050505f915090505481565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610ab86114ec565b610ac15f6117d7565b565b610acb6114ec565b610ad58282611758565b5050565b5f60095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f600b82604051610b3091906127fe565b9081526020016040518091039020549050919050565b610b4e6114ec565b610b5661189a565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060078054610b8f90612458565b80601f0160208091040260200160405190810160405280929190818152602001828054610bbb90612458565b8015610c065780601f10610bdd57610100808354040283529160200191610c06565b820191905f5260205f20905b815481529060010190602001808311610be957829003601f168201915b5050505050905090565b610c186114ec565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7d9061285e565b60405180910390fd5b600a5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610d10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d07906128c6565b60405180910390fd5b6001600a5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f6a45208724d4b6f6774a21924d8ada0231f197811681096d5fd6b5f22e6e73d360405160405180910390a250565b5f80610db56114d3565b9050610dc2818585611606565b600191505092915050565b610dd56114ec565b600a5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610e5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e559061292e565b60405180910390fd5b5f600a5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f93c4daca93fe23045ea63d803db724ccff33790f1b2434276479f728a4e38f9960405160405180910390a250565b600d5f9054906101000a900460ff1615610f47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3e90612996565b60405180910390fd5b5f845111610f8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f81906129fe565b60405180910390fd5b5f835111610fcd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc490612a66565b60405180910390fd5b5f821161100f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100690612af4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361107d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107490612b5c565b60405180910390fd5b836006908161108c91906126f5565b50826007908161109c91906126f5565b50601260085f6101000a81548160ff021916908360ff1602179055506110c1816117d7565b6110cb81836118fd565b6001600d5f6101000a81548160ff0219169083151502179055507f12bdfd2f29cf0194cd626fbd8a4b8fd1de36748d1a1b936eac39fe35845c585a8484848460405161111a9493929190612b7a565b60405180910390a150505050565b6009602052805f5260405f205f915090505481565b6111456114ec565b5f825111611188576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117f9061253a565b60405180910390fd5b5f81116111ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c190612c15565b60405180910390fd5b80600b836040516111db91906127fe565b9081526020016040518091039020819055507f40595e4d22661278feeff293e3de4334b9132b0bf1c2aac89a8ec5aedb2c11a4828260405161121e929190612c33565b60405180910390a15050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6112b46114ec565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611322576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131990612cab565b60405180910390fd5b5f8211611364576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135b90612c15565b60405180910390fd5b600a5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166113ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e49061285e565b60405180910390fd5b8160095f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546114399190612cf6565b9250508190555061144a81836118fd565b505050565b6114576114ec565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036114c7575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016114be919061228e565b60405180910390fd5b6114d0816117d7565b50565b5f33905090565b6114e7838383600161197c565b505050565b6114f46114d3565b73ffffffffffffffffffffffffffffffffffffffff16611512610b58565b73ffffffffffffffffffffffffffffffffffffffff1614611571576115356114d3565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611568919061228e565b60405180910390fd5b565b5f61157e848461122a565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561160057818110156115f1578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016115e893929190612d29565b60405180910390fd5b6115ff84848484035f61197c565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611676575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161166d919061228e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036116e6575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016116dd919061228e565b60405180910390fd5b6116f1838383611b4b565b505050565b6116fe611d64565b5f600560146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6117416114d3565b60405161174e919061228e565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036117c8575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016117bf919061228e565b60405180910390fd5b6117d3825f83611b4b565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6118a2611dad565b6001600560146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586118e66114d3565b6040516118f3919061228e565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361196d575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611964919061228e565b60405180910390fd5b6119785f8383611b4b565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036119ec575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016119e3919061228e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a5c575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611a53919061228e565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611b45578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611b3c9190611fbf565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611b9b578060025f828254611b8f9190612cf6565b92505081905550611c69565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611c24578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611c1b93929190612d29565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611cb0578060025f8282540392505081905550611cfa565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611d579190611fbf565b60405180910390a3505050565b611d6c610a28565b611dab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611da290612da8565b60405180910390fd5b565b611db5610a28565b15611df5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dec90612e10565b60405180910390fd5b565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611e2e578082015181840152602081019050611e13565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611e5382611df7565b611e5d8185611e01565b9350611e6d818560208601611e11565b611e7681611e39565b840191505092915050565b5f6020820190508181035f830152611e998184611e49565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611edb82611eb2565b9050919050565b611eeb81611ed1565b8114611ef5575f80fd5b50565b5f81359050611f0681611ee2565b92915050565b5f819050919050565b611f1e81611f0c565b8114611f28575f80fd5b50565b5f81359050611f3981611f15565b92915050565b5f8060408385031215611f5557611f54611eaa565b5b5f611f6285828601611ef8565b9250506020611f7385828601611f2b565b9150509250929050565b5f8115159050919050565b611f9181611f7d565b82525050565b5f602082019050611faa5f830184611f88565b92915050565b611fb981611f0c565b82525050565b5f602082019050611fd25f830184611fb0565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61201682611e39565b810181811067ffffffffffffffff8211171561203557612034611fe0565b5b80604052505050565b5f612047611ea1565b9050612053828261200d565b919050565b5f67ffffffffffffffff82111561207257612071611fe0565b5b61207b82611e39565b9050602081019050919050565b828183375f83830152505050565b5f6120a86120a384612058565b61203e565b9050828152602081018484840111156120c4576120c3611fdc565b5b6120cf848285612088565b509392505050565b5f82601f8301126120eb576120ea611fd8565b5b81356120fb848260208601612096565b91505092915050565b5f806040838503121561211a57612119611eaa565b5b5f61212785828601611ef8565b925050602083013567ffffffffffffffff81111561214857612147611eae565b5b612154858286016120d7565b9150509250929050565b5f805f6060848603121561217557612174611eaa565b5b5f61218286828701611ef8565b935050602061219386828701611ef8565b92505060406121a486828701611f2b565b9150509250925092565b5f60ff82169050919050565b6121c3816121ae565b82525050565b5f6020820190506121dc5f8301846121ba565b92915050565b5f602082840312156121f7576121f6611eaa565b5b5f61220484828501611ef8565b91505092915050565b5f6020828403121561222257612221611eaa565b5b5f61222f84828501611f2b565b91505092915050565b5f6020828403121561224d5761224c611eaa565b5b5f82013567ffffffffffffffff81111561226a57612269611eae565b5b612276848285016120d7565b91505092915050565b61228881611ed1565b82525050565b5f6020820190506122a15f83018461227f565b92915050565b5f805f80608085870312156122bf576122be611eaa565b5b5f85013567ffffffffffffffff8111156122dc576122db611eae565b5b6122e8878288016120d7565b945050602085013567ffffffffffffffff81111561230957612308611eae565b5b612315878288016120d7565b935050604061232687828801611f2b565b925050606061233787828801611ef8565b91505092959194509250565b5f806040838503121561235957612358611eaa565b5b5f83013567ffffffffffffffff81111561237657612375611eae565b5b612382858286016120d7565b925050602061239385828601611f2b565b9150509250929050565b5f80604083850312156123b3576123b2611eaa565b5b5f6123c085828601611ef8565b92505060206123d185828601611ef8565b9150509250929050565b5f805f606084860312156123f2576123f1611eaa565b5b5f6123ff86828701611ef8565b935050602061241086828701611f2b565b925050604061242186828701611ef8565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061246f57607f821691505b6020821081036124825761248161242b565b5b50919050565b7f496e76616c69642062656e6566696369617279206164647265737300000000005f82015250565b5f6124bc601b83611e01565b91506124c782612488565b602082019050919050565b5f6020820190508181035f8301526124e9816124b0565b9050919050565b7f43617465676f72792063616e6e6f7420626520656d70747900000000000000005f82015250565b5f612524601883611e01565b915061252f826124f0565b602082019050919050565b5f6020820190508181035f83015261255181612518565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026125b47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612579565b6125be8683612579565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6125f96125f46125ef84611f0c565b6125d6565b611f0c565b9050919050565b5f819050919050565b612612836125df565b61262661261e82612600565b848454612585565b825550505050565b5f90565b61263a61262e565b612645818484612609565b505050565b5b818110156126685761265d5f82612632565b60018101905061264b565b5050565b601f8211156126ad5761267e81612558565b6126878461256a565b81016020851015612696578190505b6126aa6126a28561256a565b83018261264a565b50505b505050565b5f82821c905092915050565b5f6126cd5f19846008026126b2565b1980831691505092915050565b5f6126e583836126be565b9150826002028217905092915050565b6126fe82611df7565b67ffffffffffffffff81111561271757612716611fe0565b5b6127218254612458565b61272c82828561266c565b5f60209050601f83116001811461275d575f841561274b578287015190505b61275585826126da565b8655506127bc565b601f19841661276b86612558565b5f5b828110156127925784890151825560018201915060208501945060208101905061276d565b868310156127af57848901516127ab601f8916826126be565b8355505b6001600288020188555050505b505050505050565b5f81905092915050565b5f6127d882611df7565b6127e281856127c4565b93506127f2818560208601611e11565b80840191505092915050565b5f61280982846127ce565b915081905092915050565b7f496e76616c69642076657374696e6720636f6e747261637400000000000000005f82015250565b5f612848601883611e01565b915061285382612814565b602082019050919050565b5f6020820190508181035f8301526128758161283c565b9050919050565b7f56657374696e6720636f6e747261637420616c726561647920616464656400005f82015250565b5f6128b0601e83611e01565b91506128bb8261287c565b602082019050919050565b5f6020820190508181035f8301526128dd816128a4565b9050919050565b7f56657374696e6720636f6e7472616374206e6f7420666f756e640000000000005f82015250565b5f612918601a83611e01565b9150612923826128e4565b602082019050919050565b5f6020820190508181035f8301526129458161290c565b9050919050565b7f416c726561647920696e697469616c697a6564000000000000000000000000005f82015250565b5f612980601383611e01565b915061298b8261294c565b602082019050919050565b5f6020820190508181035f8301526129ad81612974565b9050919050565b7f4e616d652063616e6e6f7420626520656d7074790000000000000000000000005f82015250565b5f6129e8601483611e01565b91506129f3826129b4565b602082019050919050565b5f6020820190508181035f830152612a15816129dc565b9050919050565b7f53796d626f6c2063616e6e6f7420626520656d707479000000000000000000005f82015250565b5f612a50601683611e01565b9150612a5b82612a1c565b602082019050919050565b5f6020820190508181035f830152612a7d81612a44565b9050919050565b7f546f74616c20737570706c79206d7573742062652067726561746572207468615f8201527f6e20300000000000000000000000000000000000000000000000000000000000602082015250565b5f612ade602383611e01565b9150612ae982612a84565b604082019050919050565b5f6020820190508181035f830152612b0b81612ad2565b9050919050565b7f496e76616c6964206f776e6572206164647265737300000000000000000000005f82015250565b5f612b46601583611e01565b9150612b5182612b12565b602082019050919050565b5f6020820190508181035f830152612b7381612b3a565b9050919050565b5f6080820190508181035f830152612b928187611e49565b90508181036020830152612ba68186611e49565b9050612bb56040830185611fb0565b612bc2606083018461227f565b95945050505050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f612bff601d83611e01565b9150612c0a82612bcb565b602082019050919050565b5f6020820190508181035f830152612c2c81612bf3565b9050919050565b5f6040820190508181035f830152612c4b8185611e49565b9050612c5a6020830184611fb0565b9392505050565b7f496e76616c696420726563697069656e740000000000000000000000000000005f82015250565b5f612c95601183611e01565b9150612ca082612c61565b602082019050919050565b5f6020820190508181035f830152612cc281612c89565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612d0082611f0c565b9150612d0b83611f0c565b9250828201905080821115612d2357612d22612cc9565b5b92915050565b5f606082019050612d3c5f83018661227f565b612d496020830185611fb0565b612d566040830184611fb0565b949350505050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f612d92601483611e01565b9150612d9d82612d5e565b602082019050919050565b5f6020820190508181035f830152612dbf81612d86565b9050919050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f612dfa601083611e01565b9150612e0582612dc6565b602082019050919050565b5f6020820190508181035f830152612e2781612dee565b905091905056fea2646970667358221220c9dd87991d3dfd3269ee70b4e1b3a1856c4210a541487b49ad605b1370ba413164736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x41 SWAP2 SWAP1 PUSH3 0x422 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x53 SWAP2 SWAP1 PUSH3 0x422 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xC9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC0 SWAP2 SWAP1 PUSH3 0x549 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xDA DUP2 PUSH3 0xFB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x564 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x23A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x250 JUMPI PUSH3 0x24F PUSH3 0x1F5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x2B4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x277 JUMP JUMPDEST PUSH3 0x2C0 DUP7 DUP4 PUSH3 0x277 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x30A PUSH3 0x304 PUSH3 0x2FE DUP5 PUSH3 0x2D8 JUMP JUMPDEST PUSH3 0x2E1 JUMP JUMPDEST PUSH3 0x2D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x325 DUP4 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x33D PUSH3 0x334 DUP3 PUSH3 0x311 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x283 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x353 PUSH3 0x345 JUMP JUMPDEST PUSH3 0x360 DUP2 DUP5 DUP5 PUSH3 0x31A JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x387 JUMPI PUSH3 0x37B PUSH0 DUP3 PUSH3 0x349 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x366 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x3D6 JUMPI PUSH3 0x3A0 DUP2 PUSH3 0x256 JUMP JUMPDEST PUSH3 0x3AB DUP5 PUSH3 0x268 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x3BB JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x3D3 PUSH3 0x3CA DUP6 PUSH3 0x268 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x365 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x3F8 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x3DB JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x412 DUP4 DUP4 PUSH3 0x3E7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x42D DUP3 PUSH3 0x1BE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x449 JUMPI PUSH3 0x448 PUSH3 0x1C8 JUMP JUMPDEST JUMPDEST PUSH3 0x455 DUP3 SLOAD PUSH3 0x222 JUMP JUMPDEST PUSH3 0x462 DUP3 DUP3 DUP6 PUSH3 0x38B JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x498 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x483 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x48F DUP6 DUP3 PUSH3 0x405 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x4FE JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x4A8 DUP7 PUSH3 0x256 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x4D1 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x4AA JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x4F1 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x4ED PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x3E7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x531 DUP3 PUSH3 0x506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x543 DUP2 PUSH3 0x525 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x55E PUSH0 DUP4 ADD DUP5 PUSH3 0x538 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2E64 DUP1 PUSH3 0x572 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xD6458285 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD6458285 EQ PUSH2 0x58F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5AB JUMPI DUP1 PUSH4 0xECBC5095 EQ PUSH2 0x5DB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5F7 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4F7 JUMPI DUP1 PUSH4 0xBC3BEA5E EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0xBD3A13F6 EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0xCB3FDB61 EQ PUSH2 0x55F JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0xA00686F1 EQ PUSH2 0x4DB JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x419 JUMPI DUP1 PUSH4 0x7F58B9D3 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x7FB36099 EQ PUSH2 0x465 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x392E53CD GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x4EBC47F8 GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x4EBC47F8 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x66368FB6 EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3DF JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x392E53CD EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x4CF590B0 EQ PUSH2 0x331 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x19ECCDFD GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x19ECCDFD EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x37915874 EQ PUSH2 0x2BD JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x235 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1EF PUSH2 0x613 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1E81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23D PUSH2 0x6C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x2104 JUMP JUMPDEST PUSH2 0x6CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x289 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x215E JUMP JUMPDEST PUSH2 0x824 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH2 0x852 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x21C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x21E2 JUMP JUMPDEST PUSH2 0x867 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH2 0x884 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x313 PUSH2 0x899 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST PUSH2 0x8AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x21E2 JUMP JUMPDEST PUSH2 0x8C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x1E81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x21E2 JUMP JUMPDEST PUSH2 0x98D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x388 SWAP2 SWAP1 PUSH2 0x1E81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x399 PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0x2238 JUMP JUMPDEST PUSH2 0xA3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x21E2 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x417 PUSH2 0xAB0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x433 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0xAC3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x21E2 JUMP JUMPDEST PUSH2 0xAD9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45C SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x2238 JUMP JUMPDEST PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49D PUSH2 0xB46 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A7 PUSH2 0xB58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0x228E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C5 PUSH2 0xB80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D2 SWAP2 SWAP1 PUSH2 0x1E81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0x21E2 JUMP JUMPDEST PUSH2 0xC10 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x511 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50C SWAP2 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0xDAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51E SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x541 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53C SWAP2 SWAP1 PUSH2 0x21E2 JUMP JUMPDEST PUSH2 0xDCD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x55D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x558 SWAP2 SWAP1 PUSH2 0x22A7 JUMP JUMPDEST PUSH2 0xEF8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x579 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x574 SWAP2 SWAP1 PUSH2 0x21E2 JUMP JUMPDEST PUSH2 0x1128 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x586 SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A4 SWAP2 SWAP1 PUSH2 0x2343 JUMP JUMPDEST PUSH2 0x113D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C0 SWAP2 SWAP1 PUSH2 0x239D JUMP JUMPDEST PUSH2 0x122A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D2 SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F0 SWAP2 SWAP1 PUSH2 0x23DB JUMP JUMPDEST PUSH2 0x12AC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x611 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x60C SWAP2 SWAP1 PUSH2 0x21E2 JUMP JUMPDEST PUSH2 0x144F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x622 SWAP1 PUSH2 0x2458 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x64E SWAP1 PUSH2 0x2458 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x699 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x670 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x699 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x67C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6AD PUSH2 0x14D3 JUMP JUMPDEST SWAP1 POP PUSH2 0x6BA DUP2 DUP6 DUP6 PUSH2 0x14DA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6D6 PUSH2 0x14EC JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x744 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73B SWAP1 PUSH2 0x24D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD GT PUSH2 0x787 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77E SWAP1 PUSH2 0x253A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xC PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x7D1 SWAP2 SWAP1 PUSH2 0x26F5 JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA110B2DAA9B9328E235E98C75405F18D092B0D0EDD4574CC8D80A41908FBF0BF DUP3 PUSH1 0x40 MLOAD PUSH2 0x818 SWAP2 SWAP1 PUSH2 0x1E81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x82E PUSH2 0x14D3 JUMP JUMPDEST SWAP1 POP PUSH2 0x83B DUP6 DUP3 DUP6 PUSH2 0x1573 JUMP JUMPDEST PUSH2 0x846 DUP6 DUP6 DUP6 PUSH2 0x1606 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8A1 PUSH2 0x14EC JUMP JUMPDEST PUSH2 0x8A9 PUSH2 0x16F6 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x8B3 PUSH2 0x14EC JUMP JUMPDEST PUSH2 0x8BD CALLER DUP3 PUSH2 0x1758 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x90A SWAP1 PUSH2 0x2458 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x936 SWAP1 PUSH2 0x2458 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x981 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x958 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x981 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x964 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x9A9 SWAP1 PUSH2 0x2458 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9D5 SWAP1 PUSH2 0x2458 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA20 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9F7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA20 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA03 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB DUP2 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 ADD DUP1 MLOAD DUP5 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP6 ADD KECCAK256 DUP2 DUP4 MSTORE DUP1 SWAP6 POP POP POP POP POP POP PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB8 PUSH2 0x14EC JUMP JUMPDEST PUSH2 0xAC1 PUSH0 PUSH2 0x17D7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xACB PUSH2 0x14EC JUMP JUMPDEST PUSH2 0xAD5 DUP3 DUP3 PUSH2 0x1758 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xB DUP3 PUSH1 0x40 MLOAD PUSH2 0xB30 SWAP2 SWAP1 PUSH2 0x27FE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB4E PUSH2 0x14EC JUMP JUMPDEST PUSH2 0xB56 PUSH2 0x189A JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH2 0xB8F SWAP1 PUSH2 0x2458 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBBB SWAP1 PUSH2 0x2458 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC06 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBDD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC06 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBE9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC18 PUSH2 0x14EC JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7D SWAP1 PUSH2 0x285E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD07 SWAP1 PUSH2 0x28C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6A45208724D4B6F6774A21924D8ADA0231F197811681096D5FD6B5F22E6E73D3 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xDB5 PUSH2 0x14D3 JUMP JUMPDEST SWAP1 POP PUSH2 0xDC2 DUP2 DUP6 DUP6 PUSH2 0x1606 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDD5 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0xA PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xE5E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE55 SWAP1 PUSH2 0x292E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x93C4DACA93FE23045EA63D803DB724CCFF33790F1B2434276479F728A4E38F99 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xF47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3E SWAP1 PUSH2 0x2996 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 MLOAD GT PUSH2 0xF8A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF81 SWAP1 PUSH2 0x29FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD GT PUSH2 0xFCD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC4 SWAP1 PUSH2 0x2A66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x100F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1006 SWAP1 PUSH2 0x2AF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x107D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1074 SWAP1 PUSH2 0x2B5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x6 SWAP1 DUP2 PUSH2 0x108C SWAP2 SWAP1 PUSH2 0x26F5 JUMP JUMPDEST POP DUP3 PUSH1 0x7 SWAP1 DUP2 PUSH2 0x109C SWAP2 SWAP1 PUSH2 0x26F5 JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x10C1 DUP2 PUSH2 0x17D7 JUMP JUMPDEST PUSH2 0x10CB DUP2 DUP4 PUSH2 0x18FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x12BDFD2F29CF0194CD626FBD8A4B8FD1DE36748D1A1B936EAC39FE35845C585A DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x111A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1145 PUSH2 0x14EC JUMP JUMPDEST PUSH0 DUP3 MLOAD GT PUSH2 0x1188 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117F SWAP1 PUSH2 0x253A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x11CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C1 SWAP1 PUSH2 0x2C15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xB DUP4 PUSH1 0x40 MLOAD PUSH2 0x11DB SWAP2 SWAP1 PUSH2 0x27FE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x40595E4D22661278FEEFF293E3DE4334B9132B0BF1C2AAC89A8EC5AEDB2C11A4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x121E SWAP3 SWAP2 SWAP1 PUSH2 0x2C33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12B4 PUSH2 0x14EC JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1322 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1319 SWAP1 PUSH2 0x2CAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x1364 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x135B SWAP1 PUSH2 0x2C15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x13ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E4 SWAP1 PUSH2 0x285E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x9 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1439 SWAP2 SWAP1 PUSH2 0x2CF6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x144A DUP2 DUP4 PUSH2 0x18FD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1457 PUSH2 0x14EC JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14C7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14BE SWAP2 SWAP1 PUSH2 0x228E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14D0 DUP2 PUSH2 0x17D7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x14E7 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x197C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x14F4 PUSH2 0x14D3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1512 PUSH2 0xB58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1571 JUMPI PUSH2 0x1535 PUSH2 0x14D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1568 SWAP2 SWAP1 PUSH2 0x228E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x157E DUP5 DUP5 PUSH2 0x122A JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1600 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x15F1 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15FF DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x197C JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1676 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x166D SWAP2 SWAP1 PUSH2 0x228E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16E6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16DD SWAP2 SWAP1 PUSH2 0x228E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16F1 DUP4 DUP4 DUP4 PUSH2 0x1B4B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x16FE PUSH2 0x1D64 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1741 PUSH2 0x14D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174E SWAP2 SWAP1 PUSH2 0x228E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17C8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17BF SWAP2 SWAP1 PUSH2 0x228E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17D3 DUP3 PUSH0 DUP4 PUSH2 0x1B4B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x18A2 PUSH2 0x1DAD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x18E6 PUSH2 0x14D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F3 SWAP2 SWAP1 PUSH2 0x228E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x196D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1964 SWAP2 SWAP1 PUSH2 0x228E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1978 PUSH0 DUP4 DUP4 PUSH2 0x1B4B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19EC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19E3 SWAP2 SWAP1 PUSH2 0x228E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A5C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A53 SWAP2 SWAP1 PUSH2 0x228E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1B45 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1B3C SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B9B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1B8F SWAP2 SWAP1 PUSH2 0x2CF6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1C69 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1C24 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C1B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CB0 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1CFA JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1D57 SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1D6C PUSH2 0xA28 JUMP JUMPDEST PUSH2 0x1DAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DA2 SWAP1 PUSH2 0x2DA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1DB5 PUSH2 0xA28 JUMP JUMPDEST ISZERO PUSH2 0x1DF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DEC SWAP1 PUSH2 0x2E10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E2E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E13 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E53 DUP3 PUSH2 0x1DF7 JUMP JUMPDEST PUSH2 0x1E5D DUP2 DUP6 PUSH2 0x1E01 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E6D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E11 JUMP JUMPDEST PUSH2 0x1E76 DUP2 PUSH2 0x1E39 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E99 DUP2 DUP5 PUSH2 0x1E49 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EDB DUP3 PUSH2 0x1EB2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EEB DUP2 PUSH2 0x1ED1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EF5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F06 DUP2 PUSH2 0x1EE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F1E DUP2 PUSH2 0x1F0C JUMP JUMPDEST DUP2 EQ PUSH2 0x1F28 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F39 DUP2 PUSH2 0x1F15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F55 JUMPI PUSH2 0x1F54 PUSH2 0x1EAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F62 DUP6 DUP3 DUP7 ADD PUSH2 0x1EF8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F73 DUP6 DUP3 DUP7 ADD PUSH2 0x1F2B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F91 DUP2 PUSH2 0x1F7D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FAA PUSH0 DUP4 ADD DUP5 PUSH2 0x1F88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FB9 DUP2 PUSH2 0x1F0C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FD2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1FB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2016 DUP3 PUSH2 0x1E39 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2035 JUMPI PUSH2 0x2034 PUSH2 0x1FE0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2047 PUSH2 0x1EA1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2053 DUP3 DUP3 PUSH2 0x200D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2072 JUMPI PUSH2 0x2071 PUSH2 0x1FE0 JUMP JUMPDEST JUMPDEST PUSH2 0x207B DUP3 PUSH2 0x1E39 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20A8 PUSH2 0x20A3 DUP5 PUSH2 0x2058 JUMP JUMPDEST PUSH2 0x203E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x20C4 JUMPI PUSH2 0x20C3 PUSH2 0x1FDC JUMP JUMPDEST JUMPDEST PUSH2 0x20CF DUP5 DUP3 DUP6 PUSH2 0x2088 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x20EB JUMPI PUSH2 0x20EA PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x20FB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2096 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x211A JUMPI PUSH2 0x2119 PUSH2 0x1EAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2127 DUP6 DUP3 DUP7 ADD PUSH2 0x1EF8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2148 JUMPI PUSH2 0x2147 PUSH2 0x1EAE JUMP JUMPDEST JUMPDEST PUSH2 0x2154 DUP6 DUP3 DUP7 ADD PUSH2 0x20D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2175 JUMPI PUSH2 0x2174 PUSH2 0x1EAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2182 DUP7 DUP3 DUP8 ADD PUSH2 0x1EF8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2193 DUP7 DUP3 DUP8 ADD PUSH2 0x1EF8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x21A4 DUP7 DUP3 DUP8 ADD PUSH2 0x1F2B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21C3 DUP2 PUSH2 0x21AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21DC PUSH0 DUP4 ADD DUP5 PUSH2 0x21BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21F7 JUMPI PUSH2 0x21F6 PUSH2 0x1EAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2204 DUP5 DUP3 DUP6 ADD PUSH2 0x1EF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2222 JUMPI PUSH2 0x2221 PUSH2 0x1EAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x222F DUP5 DUP3 DUP6 ADD PUSH2 0x1F2B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x224D JUMPI PUSH2 0x224C PUSH2 0x1EAA JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x226A JUMPI PUSH2 0x2269 PUSH2 0x1EAE JUMP JUMPDEST JUMPDEST PUSH2 0x2276 DUP5 DUP3 DUP6 ADD PUSH2 0x20D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2288 DUP2 PUSH2 0x1ED1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22A1 PUSH0 DUP4 ADD DUP5 PUSH2 0x227F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x22BF JUMPI PUSH2 0x22BE PUSH2 0x1EAA JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22DC JUMPI PUSH2 0x22DB PUSH2 0x1EAE JUMP JUMPDEST JUMPDEST PUSH2 0x22E8 DUP8 DUP3 DUP9 ADD PUSH2 0x20D7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2309 JUMPI PUSH2 0x2308 PUSH2 0x1EAE JUMP JUMPDEST JUMPDEST PUSH2 0x2315 DUP8 DUP3 DUP9 ADD PUSH2 0x20D7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2326 DUP8 DUP3 DUP9 ADD PUSH2 0x1F2B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x2337 DUP8 DUP3 DUP9 ADD PUSH2 0x1EF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2359 JUMPI PUSH2 0x2358 PUSH2 0x1EAA JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2376 JUMPI PUSH2 0x2375 PUSH2 0x1EAE JUMP JUMPDEST JUMPDEST PUSH2 0x2382 DUP6 DUP3 DUP7 ADD PUSH2 0x20D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2393 DUP6 DUP3 DUP7 ADD PUSH2 0x1F2B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23B3 JUMPI PUSH2 0x23B2 PUSH2 0x1EAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23C0 DUP6 DUP3 DUP7 ADD PUSH2 0x1EF8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23D1 DUP6 DUP3 DUP7 ADD PUSH2 0x1EF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x23F2 JUMPI PUSH2 0x23F1 PUSH2 0x1EAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23FF DUP7 DUP3 DUP8 ADD PUSH2 0x1EF8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2410 DUP7 DUP3 DUP8 ADD PUSH2 0x1F2B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2421 DUP7 DUP3 DUP8 ADD PUSH2 0x1EF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x246F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2482 JUMPI PUSH2 0x2481 PUSH2 0x242B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642062656E656669636961727920616464726573730000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24BC PUSH1 0x1B DUP4 PUSH2 0x1E01 JUMP JUMPDEST SWAP2 POP PUSH2 0x24C7 DUP3 PUSH2 0x2488 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24E9 DUP2 PUSH2 0x24B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43617465676F72792063616E6E6F7420626520656D7074790000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2524 PUSH1 0x18 DUP4 PUSH2 0x1E01 JUMP JUMPDEST SWAP2 POP PUSH2 0x252F DUP3 PUSH2 0x24F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2551 DUP2 PUSH2 0x2518 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x25B4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2579 JUMP JUMPDEST PUSH2 0x25BE DUP7 DUP4 PUSH2 0x2579 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x25F9 PUSH2 0x25F4 PUSH2 0x25EF DUP5 PUSH2 0x1F0C JUMP JUMPDEST PUSH2 0x25D6 JUMP JUMPDEST PUSH2 0x1F0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2612 DUP4 PUSH2 0x25DF JUMP JUMPDEST PUSH2 0x2626 PUSH2 0x261E DUP3 PUSH2 0x2600 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2585 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x263A PUSH2 0x262E JUMP JUMPDEST PUSH2 0x2645 DUP2 DUP5 DUP5 PUSH2 0x2609 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2668 JUMPI PUSH2 0x265D PUSH0 DUP3 PUSH2 0x2632 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x264B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x26AD JUMPI PUSH2 0x267E DUP2 PUSH2 0x2558 JUMP JUMPDEST PUSH2 0x2687 DUP5 PUSH2 0x256A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2696 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x26AA PUSH2 0x26A2 DUP6 PUSH2 0x256A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x264A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x26CD PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x26B2 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x26E5 DUP4 DUP4 PUSH2 0x26BE JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26FE DUP3 PUSH2 0x1DF7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2717 JUMPI PUSH2 0x2716 PUSH2 0x1FE0 JUMP JUMPDEST JUMPDEST PUSH2 0x2721 DUP3 SLOAD PUSH2 0x2458 JUMP JUMPDEST PUSH2 0x272C DUP3 DUP3 DUP6 PUSH2 0x266C JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x275D JUMPI PUSH0 DUP5 ISZERO PUSH2 0x274B JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2755 DUP6 DUP3 PUSH2 0x26DA JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x27BC JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x276B DUP7 PUSH2 0x2558 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2792 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x276D JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x27AF JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x27AB PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x26BE JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27D8 DUP3 PUSH2 0x1DF7 JUMP JUMPDEST PUSH2 0x27E2 DUP2 DUP6 PUSH2 0x27C4 JUMP JUMPDEST SWAP4 POP PUSH2 0x27F2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E11 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2809 DUP3 DUP5 PUSH2 0x27CE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C69642076657374696E6720636F6E74726163740000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2848 PUSH1 0x18 DUP4 PUSH2 0x1E01 JUMP JUMPDEST SWAP2 POP PUSH2 0x2853 DUP3 PUSH2 0x2814 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2875 DUP2 PUSH2 0x283C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56657374696E6720636F6E747261637420616C72656164792061646465640000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28B0 PUSH1 0x1E DUP4 PUSH2 0x1E01 JUMP JUMPDEST SWAP2 POP PUSH2 0x28BB DUP3 PUSH2 0x287C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28DD DUP2 PUSH2 0x28A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56657374696E6720636F6E7472616374206E6F7420666F756E64000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2918 PUSH1 0x1A DUP4 PUSH2 0x1E01 JUMP JUMPDEST SWAP2 POP PUSH2 0x2923 DUP3 PUSH2 0x28E4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2945 DUP2 PUSH2 0x290C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920696E697469616C697A656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2980 PUSH1 0x13 DUP4 PUSH2 0x1E01 JUMP JUMPDEST SWAP2 POP PUSH2 0x298B DUP3 PUSH2 0x294C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29AD DUP2 PUSH2 0x2974 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E616D652063616E6E6F7420626520656D707479000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29E8 PUSH1 0x14 DUP4 PUSH2 0x1E01 JUMP JUMPDEST SWAP2 POP PUSH2 0x29F3 DUP3 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A15 DUP2 PUSH2 0x29DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53796D626F6C2063616E6E6F7420626520656D70747900000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A50 PUSH1 0x16 DUP4 PUSH2 0x1E01 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A5B DUP3 PUSH2 0x2A1C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A7D DUP2 PUSH2 0x2A44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F74616C20737570706C79206D757374206265206772656174657220746861 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E20300000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2ADE PUSH1 0x23 DUP4 PUSH2 0x1E01 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AE9 DUP3 PUSH2 0x2A84 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B0B DUP2 PUSH2 0x2AD2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206F776E657220616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B46 PUSH1 0x15 DUP4 PUSH2 0x1E01 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B51 DUP3 PUSH2 0x2B12 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B73 DUP2 PUSH2 0x2B3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B92 DUP2 DUP8 PUSH2 0x1E49 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2BA6 DUP2 DUP7 PUSH2 0x1E49 JUMP JUMPDEST SWAP1 POP PUSH2 0x2BB5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1FB0 JUMP JUMPDEST PUSH2 0x2BC2 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x227F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2BFF PUSH1 0x1D DUP4 PUSH2 0x1E01 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C0A DUP3 PUSH2 0x2BCB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C2C DUP2 PUSH2 0x2BF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C4B DUP2 DUP6 PUSH2 0x1E49 JUMP JUMPDEST SWAP1 POP PUSH2 0x2C5A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1FB0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420726563697069656E74000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C95 PUSH1 0x11 DUP4 PUSH2 0x1E01 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CA0 DUP3 PUSH2 0x2C61 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2CC2 DUP2 PUSH2 0x2C89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2D00 DUP3 PUSH2 0x1F0C JUMP JUMPDEST SWAP2 POP PUSH2 0x2D0B DUP4 PUSH2 0x1F0C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2D23 JUMPI PUSH2 0x2D22 PUSH2 0x2CC9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2D3C PUSH0 DUP4 ADD DUP7 PUSH2 0x227F JUMP JUMPDEST PUSH2 0x2D49 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1FB0 JUMP JUMPDEST PUSH2 0x2D56 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1FB0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D92 PUSH1 0x14 DUP4 PUSH2 0x1E01 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D9D DUP3 PUSH2 0x2D5E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2DBF DUP2 PUSH2 0x2D86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2DFA PUSH1 0x10 DUP4 PUSH2 0x1E01 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E05 DUP3 PUSH2 0x2DC6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E27 DUP2 PUSH2 0x2DEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0xDD DUP8 SWAP10 SAR RETURNDATASIZE REVERT ORIGIN PUSH10 0xEE70B4E1B3A1856C4210 0xA5 COINBASE BASEFEE PUSH28 0x49AD605B1370BA413164736F6C634300081400330000000000000000 ",
							"sourceMap": "224:6809:0:-:0;;;1229:189;;;;;;;;;;1265:10;1582:113:4;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1297:1:1;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1006:5:3;996:7;;:15;;;;;;;;;;;;;;;;;;224:6809:0;;2912:187:1;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;224:6809:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1290": {
									"entryPoint": 5338,
									"id": 1290,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1350": {
									"entryPoint": 6524,
									"id": 1350,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_1272": {
									"entryPoint": 5976,
									"id": 1272,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_576": {
									"entryPoint": 5356,
									"id": 576,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_1239": {
									"entryPoint": 6397,
									"id": 1239,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1515": {
									"entryPoint": 5331,
									"id": 1515,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_867": {
									"entryPoint": 6298,
									"id": 867,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_840": {
									"entryPoint": 7597,
									"id": 840,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_851": {
									"entryPoint": 7524,
									"id": 851,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_1398": {
									"entryPoint": 5491,
									"id": 1398,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_638": {
									"entryPoint": 6103,
									"id": 638,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1129": {
									"entryPoint": 5638,
									"id": 1129,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_883": {
									"entryPoint": 5878,
									"id": 883,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1206": {
									"entryPoint": 6987,
									"id": 1206,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addVestingContract_243": {
									"entryPoint": 3088,
									"id": 243,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowance_1026": {
									"entryPoint": 4650,
									"id": 1026,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1050": {
									"entryPoint": 1699,
									"id": 1050,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_985": {
									"entryPoint": 2667,
									"id": 985,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@beneficiaryCategories_32": {
									"entryPoint": 2445,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@burnFrom_490": {
									"entryPoint": 2755,
									"id": 490,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_474": {
									"entryPoint": 2219,
									"id": 474,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@categoryAllocations_28": {
									"entryPoint": 2622,
									"id": 28,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_197": {
									"entryPoint": 2130,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getBeneficiaryCategory_439": {
									"entryPoint": 2240,
									"id": 439,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getCategoryAllocation_426": {
									"entryPoint": 2847,
									"id": 426,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getVestedBalance_413": {
									"entryPoint": 2777,
									"id": 413,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@initialize_167": {
									"entryPoint": 3832,
									"id": 167,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@isInitialized_206": {
									"entryPoint": 2180,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mintWithVesting_400": {
									"entryPoint": 4780,
									"id": 400,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@name_177": {
									"entryPoint": 1555,
									"id": 177,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_559": {
									"entryPoint": 2904,
									"id": 559,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_449": {
									"entryPoint": 2886,
									"id": 449,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_828": {
									"entryPoint": 2600,
									"id": 828,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeVestingContract_269": {
									"entryPoint": 3533,
									"id": 269,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_590": {
									"entryPoint": 2736,
									"id": 590,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBeneficiaryCategory_352": {
									"entryPoint": 1742,
									"id": 352,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setCategoryAllocation_309": {
									"entryPoint": 4413,
									"id": 309,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@symbol_187": {
									"entryPoint": 2944,
									"id": 187,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_972": {
									"entryPoint": 1733,
									"id": 972,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1082": {
									"entryPoint": 2084,
									"id": 1082,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_618": {
									"entryPoint": 5199,
									"id": 618,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1009": {
									"entryPoint": 3499,
									"id": 1009,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_459": {
									"entryPoint": 2201,
									"id": 459,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vestedBalances_20": {
									"entryPoint": 4392,
									"id": 20,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vestingContracts_24": {
									"entryPoint": 2151,
									"id": 24,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 8342,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 8407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7979,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_string_memory_ptr": {
									"entryPoint": 8452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_address": {
									"entryPoint": 9179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 8760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_address": {
									"entryPoint": 8871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256": {
									"entryPoint": 9027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1786c81c5bf1c93c94a3e63df6f65dc894961d7358d06345daa60c7e17cb737a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1dffa1347d001d284b3ea77e5eb12d6d85d59db5d7ea756b52bbab3975171388_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_20cee37dc7fe26f517097d60d14df81d928f0c3809e13566d58f93f7e1ac6c02_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_55949bb45445f266789947ce8dce817b41a2ade13e545251c0dd8fcc5e857fb2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11066,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_91ed2a964ce781c29e5cde52af0ccc59d905b442fa32093ea6af77d3cbfe5d3d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bf132a74ab9d989cbba0a592d9e33ab8526722271be7ee487ab2457cedd6bfe7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_dcee081fa6a39e6a0e12e28fbf5e15b1aca4f0ace1affdff0678079af7cdd7c6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 8634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 11561,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8087,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 11130,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 11315,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1786c81c5bf1c93c94a3e63df6f65dc894961d7358d06345daa60c7e17cb737a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1dffa1347d001d284b3ea77e5eb12d6d85d59db5d7ea756b52bbab3975171388__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10996,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_20cee37dc7fe26f517097d60d14df81d928f0c3809e13566d58f93f7e1ac6c02__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_55949bb45445f266789947ce8dce817b41a2ade13e545251c0dd8fcc5e857fb2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_91ed2a964ce781c29e5cde52af0ccc59d905b442fa32093ea6af77d3cbfe5d3d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bf132a74ab9d989cbba0a592d9e33ab8526722271be7ee487ab2457cedd6bfe7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dcee081fa6a39e6a0e12e28fbf5e15b1aca4f0ace1affdff0678079af7cdd7c6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 8649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7841,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 8280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 9560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 11510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 9836,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 7889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 8622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 9802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 9695,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 9973,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 8328,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7697,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 9578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 9304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 9946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 9686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 9918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 11465,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9259,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8160,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 9728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8152,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8156,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7854,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7850,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 9593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 9906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 9778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89": {
									"entryPoint": 9352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 11614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1786c81c5bf1c93c94a3e63df6f65dc894961d7358d06345daa60c7e17cb737a": {
									"entryPoint": 10676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1dffa1347d001d284b3ea77e5eb12d6d85d59db5d7ea756b52bbab3975171388": {
									"entryPoint": 10884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_20cee37dc7fe26f517097d60d14df81d928f0c3809e13566d58f93f7e1ac6c02": {
									"entryPoint": 10780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296": {
									"entryPoint": 11211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_55949bb45445f266789947ce8dce817b41a2ade13e545251c0dd8fcc5e857fb2": {
									"entryPoint": 9456,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 11718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3": {
									"entryPoint": 11026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_91ed2a964ce781c29e5cde52af0ccc59d905b442fa32093ea6af77d3cbfe5d3d": {
									"entryPoint": 10260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d": {
									"entryPoint": 11361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bf132a74ab9d989cbba0a592d9e33ab8526722271be7ee487ab2457cedd6bfe7": {
									"entryPoint": 10468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0": {
									"entryPoint": 10572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_dcee081fa6a39e6a0e12e28fbf5e15b1aca4f0ace1affdff0678079af7cdd7c6": {
									"entryPoint": 10364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 9605,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 9737,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 9774,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:33448:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:8",
														"type": ""
													}
												],
												"src": "112:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:8",
																"statements": []
															},
															"src": "378:113:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:8",
														"type": ""
													}
												],
												"src": "287:246:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:8",
														"type": ""
													}
												],
												"src": "539:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:8",
														"type": ""
													}
												],
												"src": "647:377:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:8",
														"type": ""
													}
												],
												"src": "1030:313:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:8",
														"type": ""
													}
												],
												"src": "1349:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:8",
														"type": ""
													}
												],
												"src": "1676:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:8",
														"type": ""
													}
												],
												"src": "1808:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:8"
															},
															"nodeType": "YulIf",
															"src": "1963:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:8",
														"type": ""
													}
												],
												"src": "1910:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:8",
														"type": ""
													}
												],
												"src": "2038:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:8",
														"type": ""
													}
												],
												"src": "2183:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:8"
															},
															"nodeType": "YulIf",
															"src": "2319:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:8",
														"type": ""
													}
												],
												"src": "2266:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:8",
														"type": ""
													}
												],
												"src": "2394:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:8"
															},
															"nodeType": "YulIf",
															"src": "2632:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:8",
														"type": ""
													}
												],
												"src": "2539:474:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:8",
														"type": ""
													}
												],
												"src": "3019:90:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:8",
														"type": ""
													}
												],
												"src": "3115:109:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:8",
														"type": ""
													}
												],
												"src": "3230:210:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:8",
														"type": ""
													}
												],
												"src": "3446:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3668:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3678:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3640:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3652:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3663:4:8",
														"type": ""
													}
												],
												"src": "3570:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3887:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3904:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3907:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3897:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3897:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3897:12:8"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3798:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4010:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4027:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4030:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4020:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4020:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4020:12:8"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "3921:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4072:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4089:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4092:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4082:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4082:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4082:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4186:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4189:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4179:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4179:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4179:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4210:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4213:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4203:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4203:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4203:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "4044:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4273:238:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4283:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4305:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "4335:4:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "4313:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4313:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4301:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4301:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4287:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4452:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4454:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4454:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4454:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4395:10:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4407:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4392:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4392:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4431:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4443:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4428:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4428:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4389:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4389:62:8"
															},
															"nodeType": "YulIf",
															"src": "4386:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4490:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4494:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4483:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4483:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4483:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4259:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "4267:4:8",
														"type": ""
													}
												],
												"src": "4230:281:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4558:88:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4568:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "4578:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4578:20:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "4568:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4627:6:8"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "4635:4:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "4607:19:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4607:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4607:33:8"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "4542:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4551:6:8",
														"type": ""
													}
												],
												"src": "4517:129:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4719:241:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4824:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4826:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4826:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4826:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4796:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4804:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4793:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:30:8"
															},
															"nodeType": "YulIf",
															"src": "4790:56:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4856:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4886:6:8"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "4864:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4864:29:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "4856:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4930:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "4942:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4948:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4938:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4938:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "4930:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4703:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "4714:4:8",
														"type": ""
													}
												],
												"src": "4652:308:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5030:82:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "5053:3:8"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5058:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5063:6:8"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "5040:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5040:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5040:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5090:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5095:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5086:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5086:16:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5104:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5079:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5079:27:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5079:27:8"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5012:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "5017:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5022:6:8",
														"type": ""
													}
												],
												"src": "4966:146:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5202:341:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5212:75:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5279:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5237:41:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5237:49:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5221:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5221:66:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "5212:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "5303:5:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5310:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5296:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5296:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5296:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5326:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "5341:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5348:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5337:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5337:16:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "5330:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5391:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "5393:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5393:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5393:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5372:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5377:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5368:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5368:16:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5386:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5365:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5365:25:8"
															},
															"nodeType": "YulIf",
															"src": "5362:112:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5520:3:8"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "5525:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5530:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "5483:36:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5483:54:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5483:54:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5175:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5180:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5188:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "5196:5:8",
														"type": ""
													}
												],
												"src": "5118:425:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5625:278:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5674:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "5676:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5676:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5676:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5653:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5661:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5649:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5649:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "5668:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5645:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5645:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5638:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5638:35:8"
															},
															"nodeType": "YulIf",
															"src": "5635:122:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5766:34:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5793:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5780:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5780:20:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5770:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5809:88:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5870:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5878:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5866:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5866:17:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5885:6:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5893:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5818:47:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5818:79:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "5809:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5603:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5611:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "5619:5:8",
														"type": ""
													}
												],
												"src": "5563:340:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6002:561:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6048:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6050:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6050:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6050:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6023:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6032:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6019:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6019:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6044:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6015:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6015:32:8"
															},
															"nodeType": "YulIf",
															"src": "6012:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "6141:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6156:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6170:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6160:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6185:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6220:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6231:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6216:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6216:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6240:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6195:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6195:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6185:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6268:288:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6283:46:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6314:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6325:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6310:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6310:18:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6297:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6297:32:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6287:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6376:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "6378:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6378:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6378:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6348:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6356:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6345:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6345:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "6342:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6473:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6518:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6529:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6514:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6514:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6538:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6483:30:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6483:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6473:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5964:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5975:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5987:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5995:6:8",
														"type": ""
													}
												],
												"src": "5909:654:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6669:519:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6715:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6717:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6717:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6717:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6690:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6699:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6686:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6686:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6711:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6682:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6682:32:8"
															},
															"nodeType": "YulIf",
															"src": "6679:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "6808:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6823:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6837:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6827:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6852:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6887:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6898:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6883:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6883:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6907:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6862:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6862:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6852:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6935:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6950:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6964:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6954:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6980:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7015:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7026:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7011:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7011:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7035:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6990:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6990:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6980:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7063:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7078:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7092:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7082:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7108:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7143:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7154:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7139:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7139:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7163:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7118:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7118:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "7108:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6623:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6634:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6646:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6654:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6662:6:8",
														"type": ""
													}
												],
												"src": "6569:619:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7237:43:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7247:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7262:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7269:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7258:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7258:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7247:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7219:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7229:7:8",
														"type": ""
													}
												],
												"src": "7194:86:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7347:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7364:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7385:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "7369:15:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7369:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7357:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7357:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7357:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7335:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7342:3:8",
														"type": ""
													}
												],
												"src": "7286:112:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7498:120:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7508:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7520:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7531:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7516:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7516:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7508:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7584:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7597:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7608:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7593:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7593:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7544:39:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7544:67:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7544:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7470:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7482:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7493:4:8",
														"type": ""
													}
												],
												"src": "7404:214:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7690:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7736:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7738:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7738:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7738:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7711:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7720:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7707:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7707:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7732:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7703:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7703:32:8"
															},
															"nodeType": "YulIf",
															"src": "7700:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "7829:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7844:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7858:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7848:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7873:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7908:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7919:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7904:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7904:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7928:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7883:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7883:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7873:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7660:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7671:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7683:6:8",
														"type": ""
													}
												],
												"src": "7624:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8025:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8071:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8073:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8073:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8073:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8046:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8055:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8042:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8042:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8067:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8038:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8038:32:8"
															},
															"nodeType": "YulIf",
															"src": "8035:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "8164:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8179:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8193:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8183:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8208:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8243:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8254:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8239:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8239:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8263:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8218:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8218:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8208:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7995:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8006:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8018:6:8",
														"type": ""
													}
												],
												"src": "7959:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8370:433:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8416:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8418:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8418:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8418:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8391:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8400:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8387:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8387:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8412:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8383:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8383:32:8"
															},
															"nodeType": "YulIf",
															"src": "8380:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "8509:287:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8524:45:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8555:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8566:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8551:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8551:17:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8538:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8538:31:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8528:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8616:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8618:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8618:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8618:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8588:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8596:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8585:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8585:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "8582:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8713:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8758:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8769:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8754:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8778:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8723:30:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8723:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8713:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8340:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8351:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8363:6:8",
														"type": ""
													}
												],
												"src": "8294:509:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8874:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8891:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8914:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8896:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8896:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8884:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8884:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8884:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8862:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8869:3:8",
														"type": ""
													}
												],
												"src": "8809:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9031:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9041:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9053:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9064:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9049:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9049:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9041:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9121:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9134:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9145:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9130:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9130:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9077:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9077:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9077:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9003:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9015:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9026:4:8",
														"type": ""
													}
												],
												"src": "8933:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9298:988:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9345:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9347:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9347:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9347:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9319:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9328:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9315:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9315:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9340:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9311:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9311:33:8"
															},
															"nodeType": "YulIf",
															"src": "9308:120:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "9438:287:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9453:45:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9484:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9495:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9480:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9480:17:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9467:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9467:31:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9457:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9545:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9547:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9547:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9547:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9517:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9525:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9514:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9514:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "9511:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9642:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9687:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9698:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9683:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9683:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9707:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9652:30:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9652:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9642:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9735:288:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9750:46:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9781:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9792:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9777:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9777:18:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9764:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9764:32:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9754:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9843:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9845:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9845:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9845:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9815:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9823:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9812:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9812:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "9809:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9940:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9985:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9996:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9981:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9981:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10005:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9950:30:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9950:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9940:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10033:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10048:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10062:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10052:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10078:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10113:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10124:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10109:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10109:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10133:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10088:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10088:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "10078:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10161:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10176:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10190:2:8",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10180:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10206:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10241:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10252:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10237:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10237:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10261:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10216:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10216:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "10206:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9244:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9255:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9267:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9275:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9283:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9291:6:8",
														"type": ""
													}
												],
												"src": "9161:1125:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10385:561:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10431:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10433:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10433:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10433:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10406:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10415:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10402:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10402:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10427:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10398:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10398:32:8"
															},
															"nodeType": "YulIf",
															"src": "10395:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "10524:287:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10539:45:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10570:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10581:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10566:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10566:17:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "10553:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10553:31:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10543:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10631:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "10633:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10633:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "10633:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "10603:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10611:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10600:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10600:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "10597:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10728:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10773:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10784:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10769:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10769:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10793:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10738:30:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10738:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10728:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10821:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10836:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10850:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10840:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10866:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10901:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10912:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10897:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10897:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10921:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10876:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10876:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10866:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10347:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10358:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10370:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10378:6:8",
														"type": ""
													}
												],
												"src": "10292:654:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11035:391:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11081:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11083:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11083:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11083:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11056:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11065:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11052:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11052:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11077:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11048:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11048:32:8"
															},
															"nodeType": "YulIf",
															"src": "11045:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "11174:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11189:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11203:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11193:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11218:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11253:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11264:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11249:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11249:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11273:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11228:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11228:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11218:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11301:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11316:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11330:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11320:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11346:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11381:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11392:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11377:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11377:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11401:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11356:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11356:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "11346:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10997:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11008:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11020:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11028:6:8",
														"type": ""
													}
												],
												"src": "10952:474:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11532:519:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11578:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11580:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11580:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11580:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11553:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11562:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11549:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11549:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11574:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11545:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11545:32:8"
															},
															"nodeType": "YulIf",
															"src": "11542:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "11671:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11686:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11700:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11690:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11715:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11750:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11761:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11746:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11746:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11770:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11725:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11725:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11715:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11798:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11813:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11827:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11817:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11843:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11878:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11889:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11874:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11874:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11898:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "11853:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11853:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "11843:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11926:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11941:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11955:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11945:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11971:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12006:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12017:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12002:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12002:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12026:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11981:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11981:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "11971:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11486:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11497:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11509:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11517:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11525:6:8",
														"type": ""
													}
												],
												"src": "11432:619:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12085:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12102:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12105:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12095:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12095:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12095:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12199:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12202:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12192:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12192:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12192:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12223:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12226:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12216:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12216:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12216:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "12057:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12294:269:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12304:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12318:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12324:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12314:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12314:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12304:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12335:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12365:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12371:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12361:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12361:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "12339:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12412:51:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12426:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "12440:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12448:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "12436:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12436:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12426:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "12392:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12385:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12385:26:8"
															},
															"nodeType": "YulIf",
															"src": "12382:81:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12515:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "12529:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12529:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12529:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "12479:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12502:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12510:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "12499:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12499:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12476:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12476:38:8"
															},
															"nodeType": "YulIf",
															"src": "12473:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "12278:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12287:6:8",
														"type": ""
													}
												],
												"src": "12243:320:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12675:71:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12697:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12705:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12693:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12693:14:8"
																	},
																	{
																		"hexValue": "496e76616c69642062656e65666963696172792061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12709:29:8",
																		"type": "",
																		"value": "Invalid beneficiary address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12686:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12686:53:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12686:53:8"
														}
													]
												},
												"name": "store_literal_in_memory_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12667:6:8",
														"type": ""
													}
												],
												"src": "12569:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12898:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12908:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12974:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12979:2:8",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12915:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12915:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12908:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13080:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89",
																	"nodeType": "YulIdentifier",
																	"src": "12991:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12991:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12991:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13093:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13104:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13109:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13100:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13100:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13093:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12886:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12894:3:8",
														"type": ""
													}
												],
												"src": "12752:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13295:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13305:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13317:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13328:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13313:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13313:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13305:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13352:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13363:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13348:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13348:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13371:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13377:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13367:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13367:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13341:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13341:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13341:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13397:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13531:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13405:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13405:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13397:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13275:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13290:4:8",
														"type": ""
													}
												],
												"src": "13124:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13655:68:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13677:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13685:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13673:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13673:14:8"
																	},
																	{
																		"hexValue": "43617465676f72792063616e6e6f7420626520656d707479",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13689:26:8",
																		"type": "",
																		"value": "Category cannot be empty"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13666:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13666:50:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13666:50:8"
														}
													]
												},
												"name": "store_literal_in_memory_55949bb45445f266789947ce8dce817b41a2ade13e545251c0dd8fcc5e857fb2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13647:6:8",
														"type": ""
													}
												],
												"src": "13549:174:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13875:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13885:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13951:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13956:2:8",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13892:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13892:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13885:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14057:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_55949bb45445f266789947ce8dce817b41a2ade13e545251c0dd8fcc5e857fb2",
																	"nodeType": "YulIdentifier",
																	"src": "13968:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13968:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13968:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14070:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14081:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14086:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14077:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14077:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14070:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_55949bb45445f266789947ce8dce817b41a2ade13e545251c0dd8fcc5e857fb2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13863:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13871:3:8",
														"type": ""
													}
												],
												"src": "13729:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14272:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14282:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14294:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14305:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14290:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14290:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14282:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14329:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14340:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14325:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14325:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14348:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14354:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14344:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14344:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14318:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14318:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14318:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14374:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14508:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_55949bb45445f266789947ce8dce817b41a2ade13e545251c0dd8fcc5e857fb2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14382:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14382:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14374:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_55949bb45445f266789947ce8dce817b41a2ade13e545251c0dd8fcc5e857fb2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14252:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14267:4:8",
														"type": ""
													}
												],
												"src": "14101:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14580:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14590:11:8",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "14598:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "14590:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14618:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "14621:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14611:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14611:14:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14611:14:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14634:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14652:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14655:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "14642:9:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14642:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "14634:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "14567:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "14575:4:8",
														"type": ""
													}
												],
												"src": "14526:141:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14717:49:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14727:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14745:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14752:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14741:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14741:14:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14757:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "14737:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14737:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "14727:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14700:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "14710:6:8",
														"type": ""
													}
												],
												"src": "14673:93:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14825:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14835:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "14860:4:8"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14866:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "14856:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14856:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "14835:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "14800:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14806:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "14816:8:8",
														"type": ""
													}
												],
												"src": "14772:107:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14961:317:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14971:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "14992:10:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15004:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "14988:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14988:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "14975:9:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15015:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "15046:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15057:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "15027:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15027:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "15019:4:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15133:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "15164:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "15175:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "15145:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15145:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "15133:8:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15193:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15206:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "15217:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "15213:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15213:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15202:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15202:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "15193:5:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15232:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15245:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "15256:8:8"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "15266:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15252:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15252:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "15242:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15242:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "15232:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14922:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "14929:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "14941:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "14954:6:8",
														"type": ""
													}
												],
												"src": "14885:393:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15316:28:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15326:12:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "15333:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15326:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15302:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15312:3:8",
														"type": ""
													}
												],
												"src": "15284:60:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15410:82:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15420:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15478:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "15460:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15460:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "15451:8:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15451:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15433:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15433:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "15420:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15390:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "15400:9:8",
														"type": ""
													}
												],
												"src": "15350:142:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15545:28:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15555:12:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "15562:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15555:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15531:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15541:3:8",
														"type": ""
													}
												],
												"src": "15498:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15655:193:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15665:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "15720:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15689:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15689:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "15669:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "15744:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "15784:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "15778:5:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15778:11:8"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "15791:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "15823:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "15799:23:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15799:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "15750:27:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15750:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "15737:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15737:105:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15737:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "15632:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "15638:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "15646:7:8",
														"type": ""
													}
												],
												"src": "15579:269:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15903:24:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15913:8:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15920:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15913:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15899:3:8",
														"type": ""
													}
												],
												"src": "15854:73:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15986:136:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15996:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16010:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16010:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "16000:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "16095:4:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "16101:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "16109:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16051:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16051:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16051:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "15972:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "15978:6:8",
														"type": ""
													}
												],
												"src": "15933:189:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16178:136:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16245:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "16289:5:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16296:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "16259:29:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16259:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16259:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "16198:5:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "16205:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "16195:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16195:14:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "16210:26:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "16212:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "16225:5:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16232:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "16221:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16221:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "16212:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "16192:2:8",
																"statements": []
															},
															"src": "16188:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "16166:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16173:3:8",
														"type": ""
													}
												],
												"src": "16128:186:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16399:464:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16425:431:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "16439:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "16487:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "16455:31:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16455:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "16443:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "16506:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "16529:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "16557:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "16539:17:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16539:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "16525:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16525:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "16510:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "16726:27:8",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "16728:23:8",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "16743:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "16728:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "16710:10:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16722:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "16707:2:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16707:18:8"
																		},
																		"nodeType": "YulIf",
																		"src": "16704:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "16795:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "16812:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "16840:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "16822:17:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "16822:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "16808:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16808:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "16766:28:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16766:80:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16766:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "16416:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16421:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16413:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16413:11:8"
															},
															"nodeType": "YulIf",
															"src": "16410:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "16375:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "16382:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "16387:10:8",
														"type": ""
													}
												],
												"src": "16320:543:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16932:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16942:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "16967:4:8"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16973:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "16963:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16963:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "16942:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "16907:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16913:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "16923:8:8",
														"type": ""
													}
												],
												"src": "16869:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17043:118:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17053:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17102:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "17105:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "17098:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17098:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17117:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "17113:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17113:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "17069:28:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17069:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "17065:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17065:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "17057:4:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17130:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "17144:4:8"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "17150:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "17140:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17140:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "17130:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "17020:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "17026:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "17036:6:8",
														"type": ""
													}
												],
												"src": "16992:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17247:214:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17380:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "17407:4:8"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "17413:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "17388:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17388:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "17380:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17426:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "17437:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17447:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "17450:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "17443:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17443:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "17434:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17434:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "17426:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "17228:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "17234:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "17242:4:8",
														"type": ""
													}
												],
												"src": "17166:295:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17558:1303:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17569:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "17616:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "17583:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17583:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "17573:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17705:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "17707:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17707:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17707:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "17677:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17685:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17674:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17674:30:8"
															},
															"nodeType": "YulIf",
															"src": "17671:56:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17737:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "17783:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "17777:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17777:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "17751:25:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17751:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "17741:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "17882:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "17888:6:8"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "17896:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "17836:45:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17836:67:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17836:67:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17913:18:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "17930:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "17917:9:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17941:17:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "17954:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "17941:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "18005:611:8",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "18019:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "18038:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "18050:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "18046:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "18046:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "18034:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18034:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "18023:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "18070:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "18116:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "18084:31:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18084:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "18074:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "18134:10:8",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18143:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "18138:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "18202:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "18227:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "18245:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "18250:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "18241:3:8"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "18241:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "18235:5:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "18235:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "18220:6:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "18220:42:8"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "18220:42:8"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "18279:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "18293:6:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "18301:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "18289:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "18289:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "18279:6:8"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "18320:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "18337:9:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "18348:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "18333:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "18333:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "18320:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "18168:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "18171:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "18165:2:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18165:14:8"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "18180:21:8",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "18182:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "18191:1:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "18194:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "18187:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "18187:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "18182:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "18161:3:8",
																					"statements": []
																				},
																				"src": "18157:208:8"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "18401:156:8",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "18419:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "18446:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "18451:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "18442:3:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "18442:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "18436:5:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "18436:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "18423:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "18486:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "18513:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "18528:6:8"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "18536:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "18524:3:8"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "18524:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "18494:18:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "18494:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "18479:6:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "18479:64:8"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "18479:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "18384:7:8"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "18393:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "18381:2:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18381:19:8"
																				},
																				"nodeType": "YulIf",
																				"src": "18378:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "18577:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "18591:6:8"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "18599:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "18587:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "18587:14:8"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "18603:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "18583:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "18583:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "18570:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18570:36:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "18570:36:8"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "17998:618:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18003:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "18633:222:8",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "18647:14:8",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18660:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "18651:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "18684:67:8",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "18702:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "18721:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "18726:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "18717:3:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "18717:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "18711:5:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "18711:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "18702:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "18677:6:8"
																				},
																				"nodeType": "YulIf",
																				"src": "18674:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "18771:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "18830:5:8"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "18837:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "18777:52:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "18777:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "18764:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18764:81:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "18764:81:8"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "18625:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "17978:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17986:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17975:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17975:14:8"
															},
															"nodeType": "YulSwitch",
															"src": "17968:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "17547:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "17553:3:8",
														"type": ""
													}
												],
												"src": "17466:1395:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18981:34:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18991:18:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "19006:3:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "18991:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18953:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18958:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "18969:11:8",
														"type": ""
													}
												],
												"src": "18867:148:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19131:280:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19141:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19188:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "19155:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19155:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "19145:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19203:96:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19287:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19292:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19210:76:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19210:89:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19203:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19347:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19354:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19343:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19343:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19361:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19366:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "19308:34:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19308:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19308:65:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19382:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19393:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19398:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19389:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19389:16:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19382:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19112:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19119:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19127:3:8",
														"type": ""
													}
												],
												"src": "19021:390:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19553:139:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19564:102:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19653:6:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19662:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19571:81:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19571:95:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19564:3:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19676:10:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "19683:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19676:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19532:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19538:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19549:3:8",
														"type": ""
													}
												],
												"src": "19417:275:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19804:68:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19826:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19834:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19822:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19822:14:8"
																	},
																	{
																		"hexValue": "496e76616c69642076657374696e6720636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19838:26:8",
																		"type": "",
																		"value": "Invalid vesting contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19815:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19815:50:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19815:50:8"
														}
													]
												},
												"name": "store_literal_in_memory_91ed2a964ce781c29e5cde52af0ccc59d905b442fa32093ea6af77d3cbfe5d3d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19796:6:8",
														"type": ""
													}
												],
												"src": "19698:174:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20024:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20034:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20100:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20105:2:8",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20041:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20041:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20034:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20206:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_91ed2a964ce781c29e5cde52af0ccc59d905b442fa32093ea6af77d3cbfe5d3d",
																	"nodeType": "YulIdentifier",
																	"src": "20117:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20117:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20117:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20219:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20230:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20235:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20226:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20226:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20219:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_91ed2a964ce781c29e5cde52af0ccc59d905b442fa32093ea6af77d3cbfe5d3d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20012:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20020:3:8",
														"type": ""
													}
												],
												"src": "19878:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20421:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20431:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20443:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20454:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20439:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20439:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20431:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20478:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20489:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20474:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20474:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20497:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20503:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20493:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20493:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20467:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20467:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20467:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20523:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20657:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_91ed2a964ce781c29e5cde52af0ccc59d905b442fa32093ea6af77d3cbfe5d3d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20531:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20531:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20523:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_91ed2a964ce781c29e5cde52af0ccc59d905b442fa32093ea6af77d3cbfe5d3d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20401:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20416:4:8",
														"type": ""
													}
												],
												"src": "20250:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20781:74:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20803:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20811:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20799:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20799:14:8"
																	},
																	{
																		"hexValue": "56657374696e6720636f6e747261637420616c7265616479206164646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20815:32:8",
																		"type": "",
																		"value": "Vesting contract already added"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20792:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20792:56:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20792:56:8"
														}
													]
												},
												"name": "store_literal_in_memory_dcee081fa6a39e6a0e12e28fbf5e15b1aca4f0ace1affdff0678079af7cdd7c6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20773:6:8",
														"type": ""
													}
												],
												"src": "20675:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21007:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21017:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21083:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21088:2:8",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21024:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21024:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21017:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21189:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_dcee081fa6a39e6a0e12e28fbf5e15b1aca4f0ace1affdff0678079af7cdd7c6",
																	"nodeType": "YulIdentifier",
																	"src": "21100:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21100:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21100:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21202:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21213:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21218:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21209:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21209:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21202:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_dcee081fa6a39e6a0e12e28fbf5e15b1aca4f0ace1affdff0678079af7cdd7c6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20995:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21003:3:8",
														"type": ""
													}
												],
												"src": "20861:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21404:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21414:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21426:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21437:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21422:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21422:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21414:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21461:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21472:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21457:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21457:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21480:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21486:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21476:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21476:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21450:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21450:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21450:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21506:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21640:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_dcee081fa6a39e6a0e12e28fbf5e15b1aca4f0ace1affdff0678079af7cdd7c6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21514:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21514:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21506:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dcee081fa6a39e6a0e12e28fbf5e15b1aca4f0ace1affdff0678079af7cdd7c6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21384:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21399:4:8",
														"type": ""
													}
												],
												"src": "21233:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21764:70:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21786:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21794:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21782:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21782:14:8"
																	},
																	{
																		"hexValue": "56657374696e6720636f6e7472616374206e6f7420666f756e64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21798:28:8",
																		"type": "",
																		"value": "Vesting contract not found"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21775:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21775:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21775:52:8"
														}
													]
												},
												"name": "store_literal_in_memory_bf132a74ab9d989cbba0a592d9e33ab8526722271be7ee487ab2457cedd6bfe7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21756:6:8",
														"type": ""
													}
												],
												"src": "21658:176:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21986:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21996:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22062:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22067:2:8",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22003:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22003:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21996:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22168:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bf132a74ab9d989cbba0a592d9e33ab8526722271be7ee487ab2457cedd6bfe7",
																	"nodeType": "YulIdentifier",
																	"src": "22079:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22079:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22079:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22181:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22192:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22197:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22188:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22188:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22181:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bf132a74ab9d989cbba0a592d9e33ab8526722271be7ee487ab2457cedd6bfe7_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21974:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21982:3:8",
														"type": ""
													}
												],
												"src": "21840:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22383:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22393:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22405:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22416:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22401:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22401:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22393:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22440:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22451:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22436:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22436:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22459:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22465:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22455:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22455:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22429:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22429:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22429:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22485:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22619:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bf132a74ab9d989cbba0a592d9e33ab8526722271be7ee487ab2457cedd6bfe7_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22493:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22493:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22485:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bf132a74ab9d989cbba0a592d9e33ab8526722271be7ee487ab2457cedd6bfe7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22363:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22378:4:8",
														"type": ""
													}
												],
												"src": "22212:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22743:63:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22765:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22773:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22761:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22761:14:8"
																	},
																	{
																		"hexValue": "416c726561647920696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22777:21:8",
																		"type": "",
																		"value": "Already initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22754:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22754:45:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22754:45:8"
														}
													]
												},
												"name": "store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22735:6:8",
														"type": ""
													}
												],
												"src": "22637:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22958:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22968:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23034:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23039:2:8",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22975:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22975:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22968:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23140:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
																	"nodeType": "YulIdentifier",
																	"src": "23051:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23051:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23051:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23153:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23164:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23169:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23160:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23160:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23153:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22946:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22954:3:8",
														"type": ""
													}
												],
												"src": "22812:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23355:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23365:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23377:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23388:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23373:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23373:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23365:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23412:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23423:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23408:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23408:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23431:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23437:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23427:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23427:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23401:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23401:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23401:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23457:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23591:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23465:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23465:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23457:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23335:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23350:4:8",
														"type": ""
													}
												],
												"src": "23184:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23715:64:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23737:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23745:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23733:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23733:14:8"
																	},
																	{
																		"hexValue": "4e616d652063616e6e6f7420626520656d707479",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23749:22:8",
																		"type": "",
																		"value": "Name cannot be empty"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23726:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23726:46:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23726:46:8"
														}
													]
												},
												"name": "store_literal_in_memory_1786c81c5bf1c93c94a3e63df6f65dc894961d7358d06345daa60c7e17cb737a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23707:6:8",
														"type": ""
													}
												],
												"src": "23609:170:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23931:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23941:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24007:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24012:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23948:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23948:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23941:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24113:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1786c81c5bf1c93c94a3e63df6f65dc894961d7358d06345daa60c7e17cb737a",
																	"nodeType": "YulIdentifier",
																	"src": "24024:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24024:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24024:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24126:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24137:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24142:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24133:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24133:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24126:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1786c81c5bf1c93c94a3e63df6f65dc894961d7358d06345daa60c7e17cb737a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23919:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23927:3:8",
														"type": ""
													}
												],
												"src": "23785:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24328:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24338:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24350:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24361:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24346:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24346:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24338:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24385:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24396:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24381:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24381:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24404:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24410:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24400:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24400:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24374:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24374:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24374:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24430:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24564:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1786c81c5bf1c93c94a3e63df6f65dc894961d7358d06345daa60c7e17cb737a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24438:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24438:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24430:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1786c81c5bf1c93c94a3e63df6f65dc894961d7358d06345daa60c7e17cb737a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24308:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24323:4:8",
														"type": ""
													}
												],
												"src": "24157:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24688:66:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24710:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24718:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24706:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24706:14:8"
																	},
																	{
																		"hexValue": "53796d626f6c2063616e6e6f7420626520656d707479",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24722:24:8",
																		"type": "",
																		"value": "Symbol cannot be empty"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24699:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24699:48:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24699:48:8"
														}
													]
												},
												"name": "store_literal_in_memory_20cee37dc7fe26f517097d60d14df81d928f0c3809e13566d58f93f7e1ac6c02",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24680:6:8",
														"type": ""
													}
												],
												"src": "24582:172:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24906:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24916:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24982:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24987:2:8",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24923:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24923:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24916:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25088:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_20cee37dc7fe26f517097d60d14df81d928f0c3809e13566d58f93f7e1ac6c02",
																	"nodeType": "YulIdentifier",
																	"src": "24999:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24999:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24999:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25101:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25112:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25117:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25108:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25108:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25101:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_20cee37dc7fe26f517097d60d14df81d928f0c3809e13566d58f93f7e1ac6c02_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24894:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24902:3:8",
														"type": ""
													}
												],
												"src": "24760:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25303:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25313:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25325:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25336:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25321:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25321:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25313:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25360:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25371:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25356:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25356:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25379:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25385:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25375:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25375:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25349:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25349:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25349:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25405:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25539:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_20cee37dc7fe26f517097d60d14df81d928f0c3809e13566d58f93f7e1ac6c02_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25413:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25413:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25405:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_20cee37dc7fe26f517097d60d14df81d928f0c3809e13566d58f93f7e1ac6c02__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25283:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25298:4:8",
														"type": ""
													}
												],
												"src": "25132:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25663:116:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25685:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25693:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25681:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25681:14:8"
																	},
																	{
																		"hexValue": "546f74616c20737570706c79206d757374206265206772656174657220746861",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25697:34:8",
																		"type": "",
																		"value": "Total supply must be greater tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25674:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25674:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25674:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25753:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25761:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25749:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25749:15:8"
																	},
																	{
																		"hexValue": "6e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25766:5:8",
																		"type": "",
																		"value": "n 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25742:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25742:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25742:30:8"
														}
													]
												},
												"name": "store_literal_in_memory_1dffa1347d001d284b3ea77e5eb12d6d85d59db5d7ea756b52bbab3975171388",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "25655:6:8",
														"type": ""
													}
												],
												"src": "25557:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25931:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25941:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26007:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26012:2:8",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25948:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25948:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25941:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26113:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1dffa1347d001d284b3ea77e5eb12d6d85d59db5d7ea756b52bbab3975171388",
																	"nodeType": "YulIdentifier",
																	"src": "26024:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26024:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26024:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26126:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26137:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26142:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26133:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26133:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26126:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1dffa1347d001d284b3ea77e5eb12d6d85d59db5d7ea756b52bbab3975171388_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25919:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25927:3:8",
														"type": ""
													}
												],
												"src": "25785:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26328:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26338:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26350:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26361:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26346:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26346:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26338:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26385:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26396:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26381:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26381:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "26404:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26410:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26400:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26400:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26374:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26374:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26374:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26430:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26564:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1dffa1347d001d284b3ea77e5eb12d6d85d59db5d7ea756b52bbab3975171388_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26438:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26438:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26430:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1dffa1347d001d284b3ea77e5eb12d6d85d59db5d7ea756b52bbab3975171388__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26308:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26323:4:8",
														"type": ""
													}
												],
												"src": "26157:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26688:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26710:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26718:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26706:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26706:14:8"
																	},
																	{
																		"hexValue": "496e76616c6964206f776e65722061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26722:23:8",
																		"type": "",
																		"value": "Invalid owner address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26699:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26699:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26699:47:8"
														}
													]
												},
												"name": "store_literal_in_memory_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "26680:6:8",
														"type": ""
													}
												],
												"src": "26582:171:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26905:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26915:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26981:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26986:2:8",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26922:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26922:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26915:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27087:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3",
																	"nodeType": "YulIdentifier",
																	"src": "26998:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26998:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26998:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27100:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27111:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27116:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27107:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27107:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27100:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26893:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26901:3:8",
														"type": ""
													}
												],
												"src": "26759:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27302:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27312:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27324:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27335:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27320:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27320:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27312:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27359:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27370:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27355:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27355:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27378:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27384:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27374:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27374:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27348:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27348:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27348:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27404:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27538:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27412:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27412:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27404:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27282:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27297:4:8",
														"type": ""
													}
												],
												"src": "27131:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27778:513:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27788:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27800:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27811:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27796:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27796:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27788:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27836:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27847:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27832:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27832:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27855:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27861:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27851:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27851:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27825:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27825:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27825:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27881:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "27953:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27962:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27889:63:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27889:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27881:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27988:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27999:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27984:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27984:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28008:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28014:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28004:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28004:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27977:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27977:48:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27977:48:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28034:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "28106:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28115:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28042:63:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28042:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28034:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "28174:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28187:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28198:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28183:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28183:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28130:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28130:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28130:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "28256:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28269:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28280:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28265:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28265:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28212:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28212:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28212:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27726:9:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "27738:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "27746:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "27754:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27762:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27773:4:8",
														"type": ""
													}
												],
												"src": "27556:735:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28403:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28425:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28433:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28421:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28421:14:8"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28437:31:8",
																		"type": "",
																		"value": "Amount must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28414:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28414:55:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28414:55:8"
														}
													]
												},
												"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28395:6:8",
														"type": ""
													}
												],
												"src": "28297:179:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28628:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28638:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28704:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28709:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28645:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28645:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "28638:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28810:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																	"nodeType": "YulIdentifier",
																	"src": "28721:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28721:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28721:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28823:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28834:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28839:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28830:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28830:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "28823:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "28616:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "28624:3:8",
														"type": ""
													}
												],
												"src": "28482:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29025:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29035:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29047:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29058:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29043:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29043:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29035:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29082:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29093:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29078:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29078:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "29101:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29107:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "29097:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29097:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29071:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29071:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29071:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29127:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "29261:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29135:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29135:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29127:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29005:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "29020:4:8",
														"type": ""
													}
												],
												"src": "28854:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29425:277:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29435:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29447:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29458:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29443:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29443:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29435:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29482:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29493:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29478:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29478:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "29501:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29507:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "29497:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29497:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29471:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29471:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29471:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29527:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "29599:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "29608:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29535:63:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29535:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29527:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "29667:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29680:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29691:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29676:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29676:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29623:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29623:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29623:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29389:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "29401:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "29409:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "29420:4:8",
														"type": ""
													}
												],
												"src": "29279:423:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29814:61:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29836:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29844:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29832:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29832:14:8"
																	},
																	{
																		"hexValue": "496e76616c696420726563697069656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29848:19:8",
																		"type": "",
																		"value": "Invalid recipient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29825:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29825:43:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29825:43:8"
														}
													]
												},
												"name": "store_literal_in_memory_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29806:6:8",
														"type": ""
													}
												],
												"src": "29708:167:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30027:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30037:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30103:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30108:2:8",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30044:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30044:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "30037:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30209:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d",
																	"nodeType": "YulIdentifier",
																	"src": "30120:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30120:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30120:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30222:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30233:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30238:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30229:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30229:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "30222:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "30015:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "30023:3:8",
														"type": ""
													}
												],
												"src": "29881:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30424:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30434:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "30446:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30457:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30442:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30442:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30434:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30481:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30492:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30477:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30477:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "30500:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30506:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "30496:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30496:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30470:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30470:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30470:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30526:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "30660:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30534:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30534:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30526:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "30404:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "30419:4:8",
														"type": ""
													}
												],
												"src": "30253:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30706:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30723:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30726:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30716:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30716:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30716:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30820:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30823:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30813:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30813:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30813:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30844:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30847:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "30837:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30837:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30837:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "30678:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30908:147:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30918:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "30941:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "30923:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30923:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "30918:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "30952:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "30975:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "30957:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30957:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "30952:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "30986:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "30997:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "31000:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30993:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30993:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "30986:3:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31026:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "31028:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31028:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31028:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "31018:1:8"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "31021:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "31015:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "31015:10:8"
															},
															"nodeType": "YulIf",
															"src": "31012:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "30895:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "30898:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "30904:3:8",
														"type": ""
													}
												],
												"src": "30864:191:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31215:288:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31225:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "31237:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31248:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31233:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "31233:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31225:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "31305:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31318:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31329:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31314:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31314:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31261:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "31261:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31261:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "31386:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31399:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31410:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31395:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31395:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31342:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "31342:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31342:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "31468:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31481:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31492:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31477:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31477:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31424:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "31424:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31424:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "31171:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "31183:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "31191:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "31199:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "31210:4:8",
														"type": ""
													}
												],
												"src": "31061:442:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31615:64:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31637:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31645:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31633:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31633:14:8"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31649:22:8",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31626:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "31626:46:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31626:46:8"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "31607:6:8",
														"type": ""
													}
												],
												"src": "31509:170:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31831:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31841:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31907:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31912:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31848:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "31848:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "31841:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32013:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nodeType": "YulIdentifier",
																	"src": "31924:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "31924:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31924:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "32026:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32037:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32042:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "32033:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "32033:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "32026:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "31819:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "31827:3:8",
														"type": ""
													}
												],
												"src": "31685:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32228:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32238:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "32250:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32261:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "32246:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "32246:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "32238:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32285:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32296:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32281:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32281:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "32304:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32310:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "32300:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32300:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32274:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "32274:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32274:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "32330:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "32464:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32338:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "32338:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "32330:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "32208:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "32223:4:8",
														"type": ""
													}
												],
												"src": "32057:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32588:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "32610:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32618:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32606:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32606:14:8"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "32622:18:8",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32599:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "32599:42:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32599:42:8"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "32580:6:8",
														"type": ""
													}
												],
												"src": "32482:166:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32800:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32810:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32876:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32881:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32817:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "32817:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "32810:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32982:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nodeType": "YulIdentifier",
																	"src": "32893:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "32893:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32893:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "32995:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "33006:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33011:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "33002:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "33002:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "32995:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "32788:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "32796:3:8",
														"type": ""
													}
												],
												"src": "32654:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33197:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "33207:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "33219:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33230:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "33215:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "33215:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "33207:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33254:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33265:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33250:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33250:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "33273:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33279:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "33269:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33269:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33243:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "33243:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33243:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "33299:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "33433:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "33307:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "33307:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "33299:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "33177:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "33192:4:8",
														"type": ""
													}
												],
												"src": "33026:419:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid beneficiary address\")\n\n    }\n\n    function abi_encode_t_stringliteral_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_55949bb45445f266789947ce8dce817b41a2ade13e545251c0dd8fcc5e857fb2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Category cannot be empty\")\n\n    }\n\n    function abi_encode_t_stringliteral_55949bb45445f266789947ce8dce817b41a2ade13e545251c0dd8fcc5e857fb2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_55949bb45445f266789947ce8dce817b41a2ade13e545251c0dd8fcc5e857fb2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_55949bb45445f266789947ce8dce817b41a2ade13e545251c0dd8fcc5e857fb2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_55949bb45445f266789947ce8dce817b41a2ade13e545251c0dd8fcc5e857fb2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_91ed2a964ce781c29e5cde52af0ccc59d905b442fa32093ea6af77d3cbfe5d3d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid vesting contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_91ed2a964ce781c29e5cde52af0ccc59d905b442fa32093ea6af77d3cbfe5d3d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_91ed2a964ce781c29e5cde52af0ccc59d905b442fa32093ea6af77d3cbfe5d3d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_91ed2a964ce781c29e5cde52af0ccc59d905b442fa32093ea6af77d3cbfe5d3d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_91ed2a964ce781c29e5cde52af0ccc59d905b442fa32093ea6af77d3cbfe5d3d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_dcee081fa6a39e6a0e12e28fbf5e15b1aca4f0ace1affdff0678079af7cdd7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Vesting contract already added\")\n\n    }\n\n    function abi_encode_t_stringliteral_dcee081fa6a39e6a0e12e28fbf5e15b1aca4f0ace1affdff0678079af7cdd7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_dcee081fa6a39e6a0e12e28fbf5e15b1aca4f0ace1affdff0678079af7cdd7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dcee081fa6a39e6a0e12e28fbf5e15b1aca4f0ace1affdff0678079af7cdd7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dcee081fa6a39e6a0e12e28fbf5e15b1aca4f0ace1affdff0678079af7cdd7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bf132a74ab9d989cbba0a592d9e33ab8526722271be7ee487ab2457cedd6bfe7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Vesting contract not found\")\n\n    }\n\n    function abi_encode_t_stringliteral_bf132a74ab9d989cbba0a592d9e33ab8526722271be7ee487ab2457cedd6bfe7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_bf132a74ab9d989cbba0a592d9e33ab8526722271be7ee487ab2457cedd6bfe7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bf132a74ab9d989cbba0a592d9e33ab8526722271be7ee487ab2457cedd6bfe7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bf132a74ab9d989cbba0a592d9e33ab8526722271be7ee487ab2457cedd6bfe7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1786c81c5bf1c93c94a3e63df6f65dc894961d7358d06345daa60c7e17cb737a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Name cannot be empty\")\n\n    }\n\n    function abi_encode_t_stringliteral_1786c81c5bf1c93c94a3e63df6f65dc894961d7358d06345daa60c7e17cb737a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_1786c81c5bf1c93c94a3e63df6f65dc894961d7358d06345daa60c7e17cb737a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1786c81c5bf1c93c94a3e63df6f65dc894961d7358d06345daa60c7e17cb737a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1786c81c5bf1c93c94a3e63df6f65dc894961d7358d06345daa60c7e17cb737a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_20cee37dc7fe26f517097d60d14df81d928f0c3809e13566d58f93f7e1ac6c02(memPtr) {\n\n        mstore(add(memPtr, 0), \"Symbol cannot be empty\")\n\n    }\n\n    function abi_encode_t_stringliteral_20cee37dc7fe26f517097d60d14df81d928f0c3809e13566d58f93f7e1ac6c02_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_20cee37dc7fe26f517097d60d14df81d928f0c3809e13566d58f93f7e1ac6c02(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_20cee37dc7fe26f517097d60d14df81d928f0c3809e13566d58f93f7e1ac6c02__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_20cee37dc7fe26f517097d60d14df81d928f0c3809e13566d58f93f7e1ac6c02_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1dffa1347d001d284b3ea77e5eb12d6d85d59db5d7ea756b52bbab3975171388(memPtr) {\n\n        mstore(add(memPtr, 0), \"Total supply must be greater tha\")\n\n        mstore(add(memPtr, 32), \"n 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_1dffa1347d001d284b3ea77e5eb12d6d85d59db5d7ea756b52bbab3975171388_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_1dffa1347d001d284b3ea77e5eb12d6d85d59db5d7ea756b52bbab3975171388(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1dffa1347d001d284b3ea77e5eb12d6d85d59db5d7ea756b52bbab3975171388__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1dffa1347d001d284b3ea77e5eb12d6d85d59db5d7ea756b52bbab3975171388_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid owner address\")\n\n    }\n\n    function abi_encode_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid recipient\")\n\n    }\n\n    function abi_encode_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106101e3575f3560e01c8063715018a61161010d578063a9059cbb116100a0578063d64582851161006f578063d64582851461058f578063dd62ed3e146105ab578063ecbc5095146105db578063f2fde38b146105f7576101e3565b8063a9059cbb146104f7578063bc3bea5e14610527578063bd3a13f614610543578063cb3fdb611461055f576101e3565b80638456cb59116100dc5780638456cb59146104955780638da5cb5b1461049f57806395d89b41146104bd578063a00686f1146104db576101e3565b8063715018a61461040f57806379cc6790146104195780637f58b9d3146104355780637fb3609914610465576101e3565b8063392e53cd116101855780634ebc47f8116101545780634ebc47f8146103615780635c975abb1461039157806366368fb6146103af57806370a08231146103df576101e3565b8063392e53cd146102ed5780633f4ba83a1461030b57806342966c68146103155780634cf590b014610331576101e3565b806319eccdfd116101c157806319eccdfd1461025357806323b872dd1461026f578063313ce5671461029f57806337915874146102bd576101e3565b806306fdde03146101e7578063095ea7b31461020557806318160ddd14610235575b5f80fd5b6101ef610613565b6040516101fc9190611e81565b60405180910390f35b61021f600480360381019061021a9190611f3f565b6106a3565b60405161022c9190611f97565b60405180910390f35b61023d6106c5565b60405161024a9190611fbf565b60405180910390f35b61026d60048036038101906102689190612104565b6106ce565b005b6102896004803603810190610284919061215e565b610824565b6040516102969190611f97565b60405180910390f35b6102a7610852565b6040516102b491906121c9565b60405180910390f35b6102d760048036038101906102d291906121e2565b610867565b6040516102e49190611f97565b60405180910390f35b6102f5610884565b6040516103029190611f97565b60405180910390f35b610313610899565b005b61032f600480360381019061032a919061220d565b6108ab565b005b61034b600480360381019061034691906121e2565b6108c0565b6040516103589190611e81565b60405180910390f35b61037b600480360381019061037691906121e2565b61098d565b6040516103889190611e81565b60405180910390f35b610399610a28565b6040516103a69190611f97565b60405180910390f35b6103c960048036038101906103c49190612238565b610a3e565b6040516103d69190611fbf565b60405180910390f35b6103f960048036038101906103f491906121e2565b610a6b565b6040516104069190611fbf565b60405180910390f35b610417610ab0565b005b610433600480360381019061042e9190611f3f565b610ac3565b005b61044f600480360381019061044a91906121e2565b610ad9565b60405161045c9190611fbf565b60405180910390f35b61047f600480360381019061047a9190612238565b610b1f565b60405161048c9190611fbf565b60405180910390f35b61049d610b46565b005b6104a7610b58565b6040516104b4919061228e565b60405180910390f35b6104c5610b80565b6040516104d29190611e81565b60405180910390f35b6104f560048036038101906104f091906121e2565b610c10565b005b610511600480360381019061050c9190611f3f565b610dab565b60405161051e9190611f97565b60405180910390f35b610541600480360381019061053c91906121e2565b610dcd565b005b61055d600480360381019061055891906122a7565b610ef8565b005b610579600480360381019061057491906121e2565b611128565b6040516105869190611fbf565b60405180910390f35b6105a960048036038101906105a49190612343565b61113d565b005b6105c560048036038101906105c0919061239d565b61122a565b6040516105d29190611fbf565b60405180910390f35b6105f560048036038101906105f091906123db565b6112ac565b005b610611600480360381019061060c91906121e2565b61144f565b005b60606006805461062290612458565b80601f016020809104026020016040519081016040528092919081815260200182805461064e90612458565b80156106995780601f1061067057610100808354040283529160200191610699565b820191905f5260205f20905b81548152906001019060200180831161067c57829003601f168201915b5050505050905090565b5f806106ad6114d3565b90506106ba8185856114da565b600191505092915050565b5f600254905090565b6106d66114ec565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610744576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073b906124d2565b60405180910390fd5b5f815111610787576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077e9061253a565b60405180910390fd5b80600c5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090816107d191906126f5565b508173ffffffffffffffffffffffffffffffffffffffff167fa110b2daa9b9328e235e98c75405f18d092b0d0edd4574cc8d80a41908fbf0bf826040516108189190611e81565b60405180910390a25050565b5f8061082e6114d3565b905061083b858285611573565b610846858585611606565b60019150509392505050565b5f60085f9054906101000a900460ff16905090565b600a602052805f5260405f205f915054906101000a900460ff1681565b5f600d5f9054906101000a900460ff16905090565b6108a16114ec565b6108a96116f6565b565b6108b36114ec565b6108bd3382611758565b50565b6060600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805461090a90612458565b80601f016020809104026020016040519081016040528092919081815260200182805461093690612458565b80156109815780601f1061095857610100808354040283529160200191610981565b820191905f5260205f20905b81548152906001019060200180831161096457829003601f168201915b50505050509050919050565b600c602052805f5260405f205f9150905080546109a990612458565b80601f01602080910402602001604051908101604052809291908181526020018280546109d590612458565b8015610a205780601f106109f757610100808354040283529160200191610a20565b820191905f5260205f20905b815481529060010190602001808311610a0357829003601f168201915b505050505081565b5f600560149054906101000a900460ff16905090565b600b818051602081018201805184825260208301602085012081835280955050505050505f915090505481565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610ab86114ec565b610ac15f6117d7565b565b610acb6114ec565b610ad58282611758565b5050565b5f60095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f600b82604051610b3091906127fe565b9081526020016040518091039020549050919050565b610b4e6114ec565b610b5661189a565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060078054610b8f90612458565b80601f0160208091040260200160405190810160405280929190818152602001828054610bbb90612458565b8015610c065780601f10610bdd57610100808354040283529160200191610c06565b820191905f5260205f20905b815481529060010190602001808311610be957829003601f168201915b5050505050905090565b610c186114ec565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7d9061285e565b60405180910390fd5b600a5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610d10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d07906128c6565b60405180910390fd5b6001600a5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f6a45208724d4b6f6774a21924d8ada0231f197811681096d5fd6b5f22e6e73d360405160405180910390a250565b5f80610db56114d3565b9050610dc2818585611606565b600191505092915050565b610dd56114ec565b600a5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610e5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e559061292e565b60405180910390fd5b5f600a5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f93c4daca93fe23045ea63d803db724ccff33790f1b2434276479f728a4e38f9960405160405180910390a250565b600d5f9054906101000a900460ff1615610f47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3e90612996565b60405180910390fd5b5f845111610f8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f81906129fe565b60405180910390fd5b5f835111610fcd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc490612a66565b60405180910390fd5b5f821161100f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100690612af4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361107d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107490612b5c565b60405180910390fd5b836006908161108c91906126f5565b50826007908161109c91906126f5565b50601260085f6101000a81548160ff021916908360ff1602179055506110c1816117d7565b6110cb81836118fd565b6001600d5f6101000a81548160ff0219169083151502179055507f12bdfd2f29cf0194cd626fbd8a4b8fd1de36748d1a1b936eac39fe35845c585a8484848460405161111a9493929190612b7a565b60405180910390a150505050565b6009602052805f5260405f205f915090505481565b6111456114ec565b5f825111611188576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117f9061253a565b60405180910390fd5b5f81116111ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c190612c15565b60405180910390fd5b80600b836040516111db91906127fe565b9081526020016040518091039020819055507f40595e4d22661278feeff293e3de4334b9132b0bf1c2aac89a8ec5aedb2c11a4828260405161121e929190612c33565b60405180910390a15050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6112b46114ec565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611322576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131990612cab565b60405180910390fd5b5f8211611364576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135b90612c15565b60405180910390fd5b600a5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166113ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e49061285e565b60405180910390fd5b8160095f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546114399190612cf6565b9250508190555061144a81836118fd565b505050565b6114576114ec565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036114c7575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016114be919061228e565b60405180910390fd5b6114d0816117d7565b50565b5f33905090565b6114e7838383600161197c565b505050565b6114f46114d3565b73ffffffffffffffffffffffffffffffffffffffff16611512610b58565b73ffffffffffffffffffffffffffffffffffffffff1614611571576115356114d3565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611568919061228e565b60405180910390fd5b565b5f61157e848461122a565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561160057818110156115f1578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016115e893929190612d29565b60405180910390fd5b6115ff84848484035f61197c565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611676575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161166d919061228e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036116e6575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016116dd919061228e565b60405180910390fd5b6116f1838383611b4b565b505050565b6116fe611d64565b5f600560146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6117416114d3565b60405161174e919061228e565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036117c8575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016117bf919061228e565b60405180910390fd5b6117d3825f83611b4b565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6118a2611dad565b6001600560146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586118e66114d3565b6040516118f3919061228e565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361196d575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611964919061228e565b60405180910390fd5b6119785f8383611b4b565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036119ec575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016119e3919061228e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a5c575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611a53919061228e565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611b45578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611b3c9190611fbf565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611b9b578060025f828254611b8f9190612cf6565b92505081905550611c69565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611c24578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611c1b93929190612d29565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611cb0578060025f8282540392505081905550611cfa565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611d579190611fbf565b60405180910390a3505050565b611d6c610a28565b611dab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611da290612da8565b60405180910390fd5b565b611db5610a28565b15611df5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dec90612e10565b60405180910390fd5b565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611e2e578082015181840152602081019050611e13565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611e5382611df7565b611e5d8185611e01565b9350611e6d818560208601611e11565b611e7681611e39565b840191505092915050565b5f6020820190508181035f830152611e998184611e49565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611edb82611eb2565b9050919050565b611eeb81611ed1565b8114611ef5575f80fd5b50565b5f81359050611f0681611ee2565b92915050565b5f819050919050565b611f1e81611f0c565b8114611f28575f80fd5b50565b5f81359050611f3981611f15565b92915050565b5f8060408385031215611f5557611f54611eaa565b5b5f611f6285828601611ef8565b9250506020611f7385828601611f2b565b9150509250929050565b5f8115159050919050565b611f9181611f7d565b82525050565b5f602082019050611faa5f830184611f88565b92915050565b611fb981611f0c565b82525050565b5f602082019050611fd25f830184611fb0565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61201682611e39565b810181811067ffffffffffffffff8211171561203557612034611fe0565b5b80604052505050565b5f612047611ea1565b9050612053828261200d565b919050565b5f67ffffffffffffffff82111561207257612071611fe0565b5b61207b82611e39565b9050602081019050919050565b828183375f83830152505050565b5f6120a86120a384612058565b61203e565b9050828152602081018484840111156120c4576120c3611fdc565b5b6120cf848285612088565b509392505050565b5f82601f8301126120eb576120ea611fd8565b5b81356120fb848260208601612096565b91505092915050565b5f806040838503121561211a57612119611eaa565b5b5f61212785828601611ef8565b925050602083013567ffffffffffffffff81111561214857612147611eae565b5b612154858286016120d7565b9150509250929050565b5f805f6060848603121561217557612174611eaa565b5b5f61218286828701611ef8565b935050602061219386828701611ef8565b92505060406121a486828701611f2b565b9150509250925092565b5f60ff82169050919050565b6121c3816121ae565b82525050565b5f6020820190506121dc5f8301846121ba565b92915050565b5f602082840312156121f7576121f6611eaa565b5b5f61220484828501611ef8565b91505092915050565b5f6020828403121561222257612221611eaa565b5b5f61222f84828501611f2b565b91505092915050565b5f6020828403121561224d5761224c611eaa565b5b5f82013567ffffffffffffffff81111561226a57612269611eae565b5b612276848285016120d7565b91505092915050565b61228881611ed1565b82525050565b5f6020820190506122a15f83018461227f565b92915050565b5f805f80608085870312156122bf576122be611eaa565b5b5f85013567ffffffffffffffff8111156122dc576122db611eae565b5b6122e8878288016120d7565b945050602085013567ffffffffffffffff81111561230957612308611eae565b5b612315878288016120d7565b935050604061232687828801611f2b565b925050606061233787828801611ef8565b91505092959194509250565b5f806040838503121561235957612358611eaa565b5b5f83013567ffffffffffffffff81111561237657612375611eae565b5b612382858286016120d7565b925050602061239385828601611f2b565b9150509250929050565b5f80604083850312156123b3576123b2611eaa565b5b5f6123c085828601611ef8565b92505060206123d185828601611ef8565b9150509250929050565b5f805f606084860312156123f2576123f1611eaa565b5b5f6123ff86828701611ef8565b935050602061241086828701611f2b565b925050604061242186828701611ef8565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061246f57607f821691505b6020821081036124825761248161242b565b5b50919050565b7f496e76616c69642062656e6566696369617279206164647265737300000000005f82015250565b5f6124bc601b83611e01565b91506124c782612488565b602082019050919050565b5f6020820190508181035f8301526124e9816124b0565b9050919050565b7f43617465676f72792063616e6e6f7420626520656d70747900000000000000005f82015250565b5f612524601883611e01565b915061252f826124f0565b602082019050919050565b5f6020820190508181035f83015261255181612518565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026125b47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612579565b6125be8683612579565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6125f96125f46125ef84611f0c565b6125d6565b611f0c565b9050919050565b5f819050919050565b612612836125df565b61262661261e82612600565b848454612585565b825550505050565b5f90565b61263a61262e565b612645818484612609565b505050565b5b818110156126685761265d5f82612632565b60018101905061264b565b5050565b601f8211156126ad5761267e81612558565b6126878461256a565b81016020851015612696578190505b6126aa6126a28561256a565b83018261264a565b50505b505050565b5f82821c905092915050565b5f6126cd5f19846008026126b2565b1980831691505092915050565b5f6126e583836126be565b9150826002028217905092915050565b6126fe82611df7565b67ffffffffffffffff81111561271757612716611fe0565b5b6127218254612458565b61272c82828561266c565b5f60209050601f83116001811461275d575f841561274b578287015190505b61275585826126da565b8655506127bc565b601f19841661276b86612558565b5f5b828110156127925784890151825560018201915060208501945060208101905061276d565b868310156127af57848901516127ab601f8916826126be565b8355505b6001600288020188555050505b505050505050565b5f81905092915050565b5f6127d882611df7565b6127e281856127c4565b93506127f2818560208601611e11565b80840191505092915050565b5f61280982846127ce565b915081905092915050565b7f496e76616c69642076657374696e6720636f6e747261637400000000000000005f82015250565b5f612848601883611e01565b915061285382612814565b602082019050919050565b5f6020820190508181035f8301526128758161283c565b9050919050565b7f56657374696e6720636f6e747261637420616c726561647920616464656400005f82015250565b5f6128b0601e83611e01565b91506128bb8261287c565b602082019050919050565b5f6020820190508181035f8301526128dd816128a4565b9050919050565b7f56657374696e6720636f6e7472616374206e6f7420666f756e640000000000005f82015250565b5f612918601a83611e01565b9150612923826128e4565b602082019050919050565b5f6020820190508181035f8301526129458161290c565b9050919050565b7f416c726561647920696e697469616c697a6564000000000000000000000000005f82015250565b5f612980601383611e01565b915061298b8261294c565b602082019050919050565b5f6020820190508181035f8301526129ad81612974565b9050919050565b7f4e616d652063616e6e6f7420626520656d7074790000000000000000000000005f82015250565b5f6129e8601483611e01565b91506129f3826129b4565b602082019050919050565b5f6020820190508181035f830152612a15816129dc565b9050919050565b7f53796d626f6c2063616e6e6f7420626520656d707479000000000000000000005f82015250565b5f612a50601683611e01565b9150612a5b82612a1c565b602082019050919050565b5f6020820190508181035f830152612a7d81612a44565b9050919050565b7f546f74616c20737570706c79206d7573742062652067726561746572207468615f8201527f6e20300000000000000000000000000000000000000000000000000000000000602082015250565b5f612ade602383611e01565b9150612ae982612a84565b604082019050919050565b5f6020820190508181035f830152612b0b81612ad2565b9050919050565b7f496e76616c6964206f776e6572206164647265737300000000000000000000005f82015250565b5f612b46601583611e01565b9150612b5182612b12565b602082019050919050565b5f6020820190508181035f830152612b7381612b3a565b9050919050565b5f6080820190508181035f830152612b928187611e49565b90508181036020830152612ba68186611e49565b9050612bb56040830185611fb0565b612bc2606083018461227f565b95945050505050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f612bff601d83611e01565b9150612c0a82612bcb565b602082019050919050565b5f6020820190508181035f830152612c2c81612bf3565b9050919050565b5f6040820190508181035f830152612c4b8185611e49565b9050612c5a6020830184611fb0565b9392505050565b7f496e76616c696420726563697069656e740000000000000000000000000000005f82015250565b5f612c95601183611e01565b9150612ca082612c61565b602082019050919050565b5f6020820190508181035f830152612cc281612c89565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612d0082611f0c565b9150612d0b83611f0c565b9250828201905080821115612d2357612d22612cc9565b5b92915050565b5f606082019050612d3c5f83018661227f565b612d496020830185611fb0565b612d566040830184611fb0565b949350505050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f612d92601483611e01565b9150612d9d82612d5e565b602082019050919050565b5f6020820190508181035f830152612dbf81612d86565b9050919050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f612dfa601083611e01565b9150612e0582612dc6565b602082019050919050565b5f6020820190508181035f830152612e2781612dee565b905091905056fea2646970667358221220c9dd87991d3dfd3269ee70b4e1b3a1856c4210a541487b49ad605b1370ba413164736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xD6458285 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD6458285 EQ PUSH2 0x58F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5AB JUMPI DUP1 PUSH4 0xECBC5095 EQ PUSH2 0x5DB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5F7 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4F7 JUMPI DUP1 PUSH4 0xBC3BEA5E EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0xBD3A13F6 EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0xCB3FDB61 EQ PUSH2 0x55F JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0xA00686F1 EQ PUSH2 0x4DB JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x419 JUMPI DUP1 PUSH4 0x7F58B9D3 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x7FB36099 EQ PUSH2 0x465 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x392E53CD GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x4EBC47F8 GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x4EBC47F8 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x66368FB6 EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3DF JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x392E53CD EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x4CF590B0 EQ PUSH2 0x331 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x19ECCDFD GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x19ECCDFD EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x37915874 EQ PUSH2 0x2BD JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x235 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1EF PUSH2 0x613 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1E81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23D PUSH2 0x6C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x2104 JUMP JUMPDEST PUSH2 0x6CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x289 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x215E JUMP JUMPDEST PUSH2 0x824 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH2 0x852 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x21C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x21E2 JUMP JUMPDEST PUSH2 0x867 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH2 0x884 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x313 PUSH2 0x899 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST PUSH2 0x8AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x21E2 JUMP JUMPDEST PUSH2 0x8C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x1E81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x21E2 JUMP JUMPDEST PUSH2 0x98D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x388 SWAP2 SWAP1 PUSH2 0x1E81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x399 PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0x2238 JUMP JUMPDEST PUSH2 0xA3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x21E2 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x417 PUSH2 0xAB0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x433 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0xAC3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x21E2 JUMP JUMPDEST PUSH2 0xAD9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45C SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x2238 JUMP JUMPDEST PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49D PUSH2 0xB46 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A7 PUSH2 0xB58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0x228E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C5 PUSH2 0xB80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D2 SWAP2 SWAP1 PUSH2 0x1E81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0x21E2 JUMP JUMPDEST PUSH2 0xC10 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x511 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50C SWAP2 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0xDAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51E SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x541 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53C SWAP2 SWAP1 PUSH2 0x21E2 JUMP JUMPDEST PUSH2 0xDCD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x55D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x558 SWAP2 SWAP1 PUSH2 0x22A7 JUMP JUMPDEST PUSH2 0xEF8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x579 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x574 SWAP2 SWAP1 PUSH2 0x21E2 JUMP JUMPDEST PUSH2 0x1128 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x586 SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A4 SWAP2 SWAP1 PUSH2 0x2343 JUMP JUMPDEST PUSH2 0x113D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C0 SWAP2 SWAP1 PUSH2 0x239D JUMP JUMPDEST PUSH2 0x122A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D2 SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F0 SWAP2 SWAP1 PUSH2 0x23DB JUMP JUMPDEST PUSH2 0x12AC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x611 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x60C SWAP2 SWAP1 PUSH2 0x21E2 JUMP JUMPDEST PUSH2 0x144F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x622 SWAP1 PUSH2 0x2458 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x64E SWAP1 PUSH2 0x2458 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x699 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x670 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x699 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x67C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6AD PUSH2 0x14D3 JUMP JUMPDEST SWAP1 POP PUSH2 0x6BA DUP2 DUP6 DUP6 PUSH2 0x14DA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6D6 PUSH2 0x14EC JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x744 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73B SWAP1 PUSH2 0x24D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD GT PUSH2 0x787 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77E SWAP1 PUSH2 0x253A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xC PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x7D1 SWAP2 SWAP1 PUSH2 0x26F5 JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA110B2DAA9B9328E235E98C75405F18D092B0D0EDD4574CC8D80A41908FBF0BF DUP3 PUSH1 0x40 MLOAD PUSH2 0x818 SWAP2 SWAP1 PUSH2 0x1E81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x82E PUSH2 0x14D3 JUMP JUMPDEST SWAP1 POP PUSH2 0x83B DUP6 DUP3 DUP6 PUSH2 0x1573 JUMP JUMPDEST PUSH2 0x846 DUP6 DUP6 DUP6 PUSH2 0x1606 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8A1 PUSH2 0x14EC JUMP JUMPDEST PUSH2 0x8A9 PUSH2 0x16F6 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x8B3 PUSH2 0x14EC JUMP JUMPDEST PUSH2 0x8BD CALLER DUP3 PUSH2 0x1758 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x90A SWAP1 PUSH2 0x2458 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x936 SWAP1 PUSH2 0x2458 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x981 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x958 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x981 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x964 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x9A9 SWAP1 PUSH2 0x2458 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9D5 SWAP1 PUSH2 0x2458 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA20 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9F7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA20 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA03 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB DUP2 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 ADD DUP1 MLOAD DUP5 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP6 ADD KECCAK256 DUP2 DUP4 MSTORE DUP1 SWAP6 POP POP POP POP POP POP PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB8 PUSH2 0x14EC JUMP JUMPDEST PUSH2 0xAC1 PUSH0 PUSH2 0x17D7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xACB PUSH2 0x14EC JUMP JUMPDEST PUSH2 0xAD5 DUP3 DUP3 PUSH2 0x1758 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xB DUP3 PUSH1 0x40 MLOAD PUSH2 0xB30 SWAP2 SWAP1 PUSH2 0x27FE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB4E PUSH2 0x14EC JUMP JUMPDEST PUSH2 0xB56 PUSH2 0x189A JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH2 0xB8F SWAP1 PUSH2 0x2458 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBBB SWAP1 PUSH2 0x2458 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC06 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBDD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC06 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBE9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC18 PUSH2 0x14EC JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7D SWAP1 PUSH2 0x285E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD07 SWAP1 PUSH2 0x28C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6A45208724D4B6F6774A21924D8ADA0231F197811681096D5FD6B5F22E6E73D3 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xDB5 PUSH2 0x14D3 JUMP JUMPDEST SWAP1 POP PUSH2 0xDC2 DUP2 DUP6 DUP6 PUSH2 0x1606 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDD5 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0xA PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xE5E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE55 SWAP1 PUSH2 0x292E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x93C4DACA93FE23045EA63D803DB724CCFF33790F1B2434276479F728A4E38F99 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xF47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3E SWAP1 PUSH2 0x2996 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 MLOAD GT PUSH2 0xF8A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF81 SWAP1 PUSH2 0x29FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD GT PUSH2 0xFCD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC4 SWAP1 PUSH2 0x2A66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x100F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1006 SWAP1 PUSH2 0x2AF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x107D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1074 SWAP1 PUSH2 0x2B5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x6 SWAP1 DUP2 PUSH2 0x108C SWAP2 SWAP1 PUSH2 0x26F5 JUMP JUMPDEST POP DUP3 PUSH1 0x7 SWAP1 DUP2 PUSH2 0x109C SWAP2 SWAP1 PUSH2 0x26F5 JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x10C1 DUP2 PUSH2 0x17D7 JUMP JUMPDEST PUSH2 0x10CB DUP2 DUP4 PUSH2 0x18FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x12BDFD2F29CF0194CD626FBD8A4B8FD1DE36748D1A1B936EAC39FE35845C585A DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x111A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1145 PUSH2 0x14EC JUMP JUMPDEST PUSH0 DUP3 MLOAD GT PUSH2 0x1188 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117F SWAP1 PUSH2 0x253A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x11CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C1 SWAP1 PUSH2 0x2C15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xB DUP4 PUSH1 0x40 MLOAD PUSH2 0x11DB SWAP2 SWAP1 PUSH2 0x27FE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x40595E4D22661278FEEFF293E3DE4334B9132B0BF1C2AAC89A8EC5AEDB2C11A4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x121E SWAP3 SWAP2 SWAP1 PUSH2 0x2C33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12B4 PUSH2 0x14EC JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1322 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1319 SWAP1 PUSH2 0x2CAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x1364 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x135B SWAP1 PUSH2 0x2C15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x13ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E4 SWAP1 PUSH2 0x285E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x9 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1439 SWAP2 SWAP1 PUSH2 0x2CF6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x144A DUP2 DUP4 PUSH2 0x18FD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1457 PUSH2 0x14EC JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14C7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14BE SWAP2 SWAP1 PUSH2 0x228E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14D0 DUP2 PUSH2 0x17D7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x14E7 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x197C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x14F4 PUSH2 0x14D3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1512 PUSH2 0xB58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1571 JUMPI PUSH2 0x1535 PUSH2 0x14D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1568 SWAP2 SWAP1 PUSH2 0x228E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x157E DUP5 DUP5 PUSH2 0x122A JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1600 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x15F1 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15FF DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x197C JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1676 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x166D SWAP2 SWAP1 PUSH2 0x228E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16E6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16DD SWAP2 SWAP1 PUSH2 0x228E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16F1 DUP4 DUP4 DUP4 PUSH2 0x1B4B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x16FE PUSH2 0x1D64 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1741 PUSH2 0x14D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174E SWAP2 SWAP1 PUSH2 0x228E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17C8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17BF SWAP2 SWAP1 PUSH2 0x228E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17D3 DUP3 PUSH0 DUP4 PUSH2 0x1B4B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x18A2 PUSH2 0x1DAD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x18E6 PUSH2 0x14D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F3 SWAP2 SWAP1 PUSH2 0x228E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x196D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1964 SWAP2 SWAP1 PUSH2 0x228E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1978 PUSH0 DUP4 DUP4 PUSH2 0x1B4B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19EC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19E3 SWAP2 SWAP1 PUSH2 0x228E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A5C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A53 SWAP2 SWAP1 PUSH2 0x228E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1B45 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1B3C SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B9B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1B8F SWAP2 SWAP1 PUSH2 0x2CF6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1C69 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1C24 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C1B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CB0 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1CFA JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1D57 SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1D6C PUSH2 0xA28 JUMP JUMPDEST PUSH2 0x1DAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DA2 SWAP1 PUSH2 0x2DA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1DB5 PUSH2 0xA28 JUMP JUMPDEST ISZERO PUSH2 0x1DF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DEC SWAP1 PUSH2 0x2E10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E2E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E13 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E53 DUP3 PUSH2 0x1DF7 JUMP JUMPDEST PUSH2 0x1E5D DUP2 DUP6 PUSH2 0x1E01 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E6D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E11 JUMP JUMPDEST PUSH2 0x1E76 DUP2 PUSH2 0x1E39 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E99 DUP2 DUP5 PUSH2 0x1E49 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EDB DUP3 PUSH2 0x1EB2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EEB DUP2 PUSH2 0x1ED1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EF5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F06 DUP2 PUSH2 0x1EE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F1E DUP2 PUSH2 0x1F0C JUMP JUMPDEST DUP2 EQ PUSH2 0x1F28 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F39 DUP2 PUSH2 0x1F15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F55 JUMPI PUSH2 0x1F54 PUSH2 0x1EAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F62 DUP6 DUP3 DUP7 ADD PUSH2 0x1EF8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F73 DUP6 DUP3 DUP7 ADD PUSH2 0x1F2B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F91 DUP2 PUSH2 0x1F7D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FAA PUSH0 DUP4 ADD DUP5 PUSH2 0x1F88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FB9 DUP2 PUSH2 0x1F0C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FD2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1FB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2016 DUP3 PUSH2 0x1E39 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2035 JUMPI PUSH2 0x2034 PUSH2 0x1FE0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2047 PUSH2 0x1EA1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2053 DUP3 DUP3 PUSH2 0x200D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2072 JUMPI PUSH2 0x2071 PUSH2 0x1FE0 JUMP JUMPDEST JUMPDEST PUSH2 0x207B DUP3 PUSH2 0x1E39 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20A8 PUSH2 0x20A3 DUP5 PUSH2 0x2058 JUMP JUMPDEST PUSH2 0x203E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x20C4 JUMPI PUSH2 0x20C3 PUSH2 0x1FDC JUMP JUMPDEST JUMPDEST PUSH2 0x20CF DUP5 DUP3 DUP6 PUSH2 0x2088 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x20EB JUMPI PUSH2 0x20EA PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x20FB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2096 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x211A JUMPI PUSH2 0x2119 PUSH2 0x1EAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2127 DUP6 DUP3 DUP7 ADD PUSH2 0x1EF8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2148 JUMPI PUSH2 0x2147 PUSH2 0x1EAE JUMP JUMPDEST JUMPDEST PUSH2 0x2154 DUP6 DUP3 DUP7 ADD PUSH2 0x20D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2175 JUMPI PUSH2 0x2174 PUSH2 0x1EAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2182 DUP7 DUP3 DUP8 ADD PUSH2 0x1EF8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2193 DUP7 DUP3 DUP8 ADD PUSH2 0x1EF8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x21A4 DUP7 DUP3 DUP8 ADD PUSH2 0x1F2B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21C3 DUP2 PUSH2 0x21AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21DC PUSH0 DUP4 ADD DUP5 PUSH2 0x21BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21F7 JUMPI PUSH2 0x21F6 PUSH2 0x1EAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2204 DUP5 DUP3 DUP6 ADD PUSH2 0x1EF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2222 JUMPI PUSH2 0x2221 PUSH2 0x1EAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x222F DUP5 DUP3 DUP6 ADD PUSH2 0x1F2B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x224D JUMPI PUSH2 0x224C PUSH2 0x1EAA JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x226A JUMPI PUSH2 0x2269 PUSH2 0x1EAE JUMP JUMPDEST JUMPDEST PUSH2 0x2276 DUP5 DUP3 DUP6 ADD PUSH2 0x20D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2288 DUP2 PUSH2 0x1ED1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22A1 PUSH0 DUP4 ADD DUP5 PUSH2 0x227F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x22BF JUMPI PUSH2 0x22BE PUSH2 0x1EAA JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22DC JUMPI PUSH2 0x22DB PUSH2 0x1EAE JUMP JUMPDEST JUMPDEST PUSH2 0x22E8 DUP8 DUP3 DUP9 ADD PUSH2 0x20D7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2309 JUMPI PUSH2 0x2308 PUSH2 0x1EAE JUMP JUMPDEST JUMPDEST PUSH2 0x2315 DUP8 DUP3 DUP9 ADD PUSH2 0x20D7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2326 DUP8 DUP3 DUP9 ADD PUSH2 0x1F2B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x2337 DUP8 DUP3 DUP9 ADD PUSH2 0x1EF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2359 JUMPI PUSH2 0x2358 PUSH2 0x1EAA JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2376 JUMPI PUSH2 0x2375 PUSH2 0x1EAE JUMP JUMPDEST JUMPDEST PUSH2 0x2382 DUP6 DUP3 DUP7 ADD PUSH2 0x20D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2393 DUP6 DUP3 DUP7 ADD PUSH2 0x1F2B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23B3 JUMPI PUSH2 0x23B2 PUSH2 0x1EAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23C0 DUP6 DUP3 DUP7 ADD PUSH2 0x1EF8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23D1 DUP6 DUP3 DUP7 ADD PUSH2 0x1EF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x23F2 JUMPI PUSH2 0x23F1 PUSH2 0x1EAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23FF DUP7 DUP3 DUP8 ADD PUSH2 0x1EF8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2410 DUP7 DUP3 DUP8 ADD PUSH2 0x1F2B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2421 DUP7 DUP3 DUP8 ADD PUSH2 0x1EF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x246F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2482 JUMPI PUSH2 0x2481 PUSH2 0x242B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642062656E656669636961727920616464726573730000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24BC PUSH1 0x1B DUP4 PUSH2 0x1E01 JUMP JUMPDEST SWAP2 POP PUSH2 0x24C7 DUP3 PUSH2 0x2488 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24E9 DUP2 PUSH2 0x24B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43617465676F72792063616E6E6F7420626520656D7074790000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2524 PUSH1 0x18 DUP4 PUSH2 0x1E01 JUMP JUMPDEST SWAP2 POP PUSH2 0x252F DUP3 PUSH2 0x24F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2551 DUP2 PUSH2 0x2518 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x25B4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2579 JUMP JUMPDEST PUSH2 0x25BE DUP7 DUP4 PUSH2 0x2579 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x25F9 PUSH2 0x25F4 PUSH2 0x25EF DUP5 PUSH2 0x1F0C JUMP JUMPDEST PUSH2 0x25D6 JUMP JUMPDEST PUSH2 0x1F0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2612 DUP4 PUSH2 0x25DF JUMP JUMPDEST PUSH2 0x2626 PUSH2 0x261E DUP3 PUSH2 0x2600 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2585 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x263A PUSH2 0x262E JUMP JUMPDEST PUSH2 0x2645 DUP2 DUP5 DUP5 PUSH2 0x2609 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2668 JUMPI PUSH2 0x265D PUSH0 DUP3 PUSH2 0x2632 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x264B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x26AD JUMPI PUSH2 0x267E DUP2 PUSH2 0x2558 JUMP JUMPDEST PUSH2 0x2687 DUP5 PUSH2 0x256A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2696 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x26AA PUSH2 0x26A2 DUP6 PUSH2 0x256A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x264A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x26CD PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x26B2 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x26E5 DUP4 DUP4 PUSH2 0x26BE JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26FE DUP3 PUSH2 0x1DF7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2717 JUMPI PUSH2 0x2716 PUSH2 0x1FE0 JUMP JUMPDEST JUMPDEST PUSH2 0x2721 DUP3 SLOAD PUSH2 0x2458 JUMP JUMPDEST PUSH2 0x272C DUP3 DUP3 DUP6 PUSH2 0x266C JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x275D JUMPI PUSH0 DUP5 ISZERO PUSH2 0x274B JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2755 DUP6 DUP3 PUSH2 0x26DA JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x27BC JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x276B DUP7 PUSH2 0x2558 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2792 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x276D JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x27AF JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x27AB PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x26BE JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27D8 DUP3 PUSH2 0x1DF7 JUMP JUMPDEST PUSH2 0x27E2 DUP2 DUP6 PUSH2 0x27C4 JUMP JUMPDEST SWAP4 POP PUSH2 0x27F2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E11 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2809 DUP3 DUP5 PUSH2 0x27CE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C69642076657374696E6720636F6E74726163740000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2848 PUSH1 0x18 DUP4 PUSH2 0x1E01 JUMP JUMPDEST SWAP2 POP PUSH2 0x2853 DUP3 PUSH2 0x2814 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2875 DUP2 PUSH2 0x283C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56657374696E6720636F6E747261637420616C72656164792061646465640000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28B0 PUSH1 0x1E DUP4 PUSH2 0x1E01 JUMP JUMPDEST SWAP2 POP PUSH2 0x28BB DUP3 PUSH2 0x287C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28DD DUP2 PUSH2 0x28A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56657374696E6720636F6E7472616374206E6F7420666F756E64000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2918 PUSH1 0x1A DUP4 PUSH2 0x1E01 JUMP JUMPDEST SWAP2 POP PUSH2 0x2923 DUP3 PUSH2 0x28E4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2945 DUP2 PUSH2 0x290C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920696E697469616C697A656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2980 PUSH1 0x13 DUP4 PUSH2 0x1E01 JUMP JUMPDEST SWAP2 POP PUSH2 0x298B DUP3 PUSH2 0x294C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29AD DUP2 PUSH2 0x2974 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E616D652063616E6E6F7420626520656D707479000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29E8 PUSH1 0x14 DUP4 PUSH2 0x1E01 JUMP JUMPDEST SWAP2 POP PUSH2 0x29F3 DUP3 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A15 DUP2 PUSH2 0x29DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53796D626F6C2063616E6E6F7420626520656D70747900000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A50 PUSH1 0x16 DUP4 PUSH2 0x1E01 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A5B DUP3 PUSH2 0x2A1C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A7D DUP2 PUSH2 0x2A44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F74616C20737570706C79206D757374206265206772656174657220746861 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E20300000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2ADE PUSH1 0x23 DUP4 PUSH2 0x1E01 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AE9 DUP3 PUSH2 0x2A84 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B0B DUP2 PUSH2 0x2AD2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206F776E657220616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B46 PUSH1 0x15 DUP4 PUSH2 0x1E01 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B51 DUP3 PUSH2 0x2B12 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B73 DUP2 PUSH2 0x2B3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B92 DUP2 DUP8 PUSH2 0x1E49 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2BA6 DUP2 DUP7 PUSH2 0x1E49 JUMP JUMPDEST SWAP1 POP PUSH2 0x2BB5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1FB0 JUMP JUMPDEST PUSH2 0x2BC2 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x227F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2BFF PUSH1 0x1D DUP4 PUSH2 0x1E01 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C0A DUP3 PUSH2 0x2BCB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C2C DUP2 PUSH2 0x2BF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C4B DUP2 DUP6 PUSH2 0x1E49 JUMP JUMPDEST SWAP1 POP PUSH2 0x2C5A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1FB0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420726563697069656E74000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C95 PUSH1 0x11 DUP4 PUSH2 0x1E01 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CA0 DUP3 PUSH2 0x2C61 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2CC2 DUP2 PUSH2 0x2C89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2D00 DUP3 PUSH2 0x1F0C JUMP JUMPDEST SWAP2 POP PUSH2 0x2D0B DUP4 PUSH2 0x1F0C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2D23 JUMPI PUSH2 0x2D22 PUSH2 0x2CC9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2D3C PUSH0 DUP4 ADD DUP7 PUSH2 0x227F JUMP JUMPDEST PUSH2 0x2D49 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1FB0 JUMP JUMPDEST PUSH2 0x2D56 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1FB0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D92 PUSH1 0x14 DUP4 PUSH2 0x1E01 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D9D DUP3 PUSH2 0x2D5E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2DBF DUP2 PUSH2 0x2D86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2DFA PUSH1 0x10 DUP4 PUSH2 0x1E01 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E05 DUP3 PUSH2 0x2DC6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E27 DUP2 PUSH2 0x2DEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0xDD DUP8 SWAP10 SAR RETURNDATASIZE REVERT ORIGIN PUSH10 0xEE70B4E1B3A1856C4210 0xA5 COINBASE BASEFEE PUSH28 0x49AD605B1370BA413164736F6C634300081400330000000000000000 ",
							"sourceMap": "224:6809:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2448:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3902:186:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2803:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4556:367:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4680:244:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2815:98:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;464:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2977:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6520:65;;;:::i;:::-;;6680:91;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6196:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;607:55;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1615:84:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;548:53:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2933:116:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:1;;;:::i;:::-;;6928:103:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5672:122;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5922:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6401:61;;;:::i;:::-;;1638:85:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2612:102:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3194:345;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3244:178:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3669:270:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1651:733;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;409:49;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4079:335;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3455:140:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5117:411:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2448:98:0;2502:13;2534:5;2527:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2448:98;:::o;3902:186:4:-;3975:4;3991:13;4007:12;:10;:12::i;:::-;3991:28;;4029:31;4038:5;4045:7;4054:5;4029:8;:31::i;:::-;4077:4;4070:11;;;3902:186;;;;:::o;2803:97::-;2855:7;2881:12;;2874:19;;2803:97;:::o;4556:367:0:-;1531:13:1;:11;:13::i;:::-;4693:1:0::1;4670:25;;:11;:25;;::::0;4662:65:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4770:1;4751:8;4745:22;:26;4737:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;4848:8;4811:21;:34;4833:11;4811:34;;;;;;;;;;;;;;;:45;;;;;;:::i;:::-;;4894:11;4871:45;;;4907:8;4871:45;;;;;;:::i;:::-;;;;;;;;4556:367:::0;;:::o;4680:244:4:-;4767:4;4783:15;4801:12;:10;:12::i;:::-;4783:30;;4823:37;4839:4;4845:7;4854:5;4823:15;:37::i;:::-;4870:26;4880:4;4886:2;4890:5;4870:9;:26::i;:::-;4913:4;4906:11;;;4680:244;;;;;:::o;2815:98:0:-;2873:5;2897:9;;;;;;;;;;;2890:16;;2815:98;:::o;464:48::-;;;;;;;;;;;;;;;;;;;;;;:::o;2977:90::-;3025:4;3048:12;;;;;;;;;;;3041:19;;2977:90;:::o;6520:65::-;1531:13:1;:11;:13::i;:::-;6568:10:0::1;:8;:10::i;:::-;6520:65::o:0;6680:91::-;1531:13:1;:11;:13::i;:::-;6739:25:0::1;6745:10;6757:6;6739:5;:25::i;:::-;6680:91:::0;:::o;6196:149::-;6272:13;6304:21;:34;6326:11;6304:34;;;;;;;;;;;;;;;6297:41;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6196:149;;;:::o;607:55::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1615:84:3:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;548:53:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2933:116:4:-;2998:7;3024:9;:18;3034:7;3024:18;;;;;;;;;;;;;;;;3017:25;;2933:116;;;:::o;2293:101:1:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;6928:103:0:-;1531:13:1;:11;:13::i;:::-;7005:19:0::1;7011:4;7017:6;7005:5;:19::i;:::-;6928:103:::0;;:::o;5672:122::-;5738:7;5764:14;:23;5779:7;5764:23;;;;;;;;;;;;;;;;5757:30;;5672:122;;;:::o;5922:140::-;6000:7;6026:19;6046:8;6026:29;;;;;;:::i;:::-;;;;;;;;;;;;;;6019:36;;5922:140;;;:::o;6401:61::-;1531:13:1;:11;:13::i;:::-;6447:8:0::1;:6;:8::i;:::-;6401:61::o:0;1638:85:1:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2612:102:0:-;2668:13;2700:7;2693:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2612:102;:::o;3194:345::-;1531:13:1;:11;:13::i;:::-;3311:1:0::1;3284:29;;:15;:29;;::::0;3276:66:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3361:16;:33;3378:15;3361:33;;;;;;;;;;;;;;;;;;;;;;;;;3360:34;3352:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;3476:4;3440:16;:33;3457:15;3440:33;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3516:15;3495:37;;;;;;;;;;;;3194:345:::0;:::o;3244:178:4:-;3313:4;3329:13;3345:12;:10;:12::i;:::-;3329:28;;3367:27;3377:5;3384:2;3388:5;3367:9;:27::i;:::-;3411:4;3404:11;;;3244:178;;;;:::o;3669:270:0:-;1531:13:1;:11;:13::i;:::-;3762:16:0::1;:33;3779:15;3762:33;;;;;;;;;;;;;;;;;;;;;;;;;3754:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;3873:5;3837:16;:33;3854:15;3837:33;;;;;;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;3916:15;3893:39;;;;;;;;;;;;3669:270:::0;:::o;1651:733::-;1819:12;;;;;;;;;;;1818:13;1810:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;1895:1;1879:5;1873:19;:23;1865:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1963:1;1945:7;1939:21;:25;1931:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;2024:1;2009:12;:16;2001:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2101:1;2083:20;;:6;:20;;;2075:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;2148:5;2140;:13;;;;;;:::i;:::-;;2173:7;2163;:17;;;;;;:::i;:::-;;2202:2;2190:9;;:14;;;;;;;;;;;;;;;;;;2215:26;2234:6;2215:18;:26::i;:::-;2251:27;2257:6;2265:12;2251:5;:27::i;:::-;2303:4;2288:12;;:19;;;;;;;;;;;;;;;;;;2323:54;2340:5;2347:7;2356:12;2370:6;2323:54;;;;;;;;;:::i;:::-;;;;;;;;1651:733;;;;:::o;409:49::-;;;;;;;;;;;;;;;;;:::o;4079:335::-;1531:13:1;:11;:13::i;:::-;4212:1:0::1;4193:8;4187:22;:26;4179:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;4269:1;4260:6;:10;4252:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;4347:6;4315:19;4335:8;4315:29;;;;;;:::i;:::-;;;;;;;;;;;;;:38;;;;4368:39;4390:8;4400:6;4368:39;;;;;;;:::i;:::-;;;;;;;;4079:335:::0;;:::o;3455:140:4:-;3535:7;3561:11;:18;3573:5;3561:18;;;;;;;;;;;;;;;:27;3580:7;3561:27;;;;;;;;;;;;;;;;3554:34;;3455:140;;;;:::o;5117:411:0:-;1531:13:1;:11;:13::i;:::-;5276:1:0::1;5262:16;;:2;:16;;::::0;5254:46:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;5327:1;5318:6;:10;5310:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;5380:16;:33;5397:15;5380:33;;;;;;;;;;;;;;;;;;;;;;;;;5372:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;5475:6;5453:14;:18;5468:2;5453:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;5491:30;5497:15;5514:6;5491:5;:30::i;:::-;5117:411:::0;;;:::o;2543:215:1:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8630:128:4:-;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;1796:162:1:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;10319:476:4:-;10418:24;10445:25;10455:5;10462:7;10445:9;:25::i;:::-;10418:52;;10503:17;10484:16;:36;10480:309;;;10559:5;10540:16;:24;10536:130;;;10618:7;10627:16;10645:5;10591:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10536:130;10707:57;10716:5;10723:7;10751:5;10732:16;:24;10758:5;10707:8;:57::i;:::-;10480:309;10408:387;10319:476;;;:::o;5297:300::-;5396:1;5380:18;;:4;:18;;;5376:86;;5448:1;5421:30;;;;;;;;;;;:::i;:::-;;;;;;;;5376:86;5489:1;5475:16;;:2;:16;;;5471:86;;5543:1;5514:32;;;;;;;;;;;:::i;:::-;;;;;;;;5471:86;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;:::-;5297:300;;;:::o;2433:117:3:-;1486:16;:14;:16::i;:::-;2501:5:::1;2491:7;;:15;;;;;;;;;;;;;;;;;;2521:22;2530:12;:10;:12::i;:::-;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;7888:206:4:-;7977:1;7958:21;;:7;:21;;;7954:89;;8029:1;8002:30;;;;;;;;;;;:::i;:::-;;;;;;;;7954:89;8052:35;8060:7;8077:1;8081:5;8052:7;:35::i;:::-;7888:206;;:::o;2912:187:1:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2186:115:3:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:7;;:14;;;;;;;;;;;;;;;;;;2274:20;2281:12;:10;:12::i;:::-;2274:20;;;;;;:::i;:::-;;;;;;;;2186:115::o:0;7362:208:4:-;7451:1;7432:21;;:7;:21;;;7428:91;;7505:1;7476:32;;;;;;;;;;;:::i;:::-;;;;;;;;7428:91;7528:35;7544:1;7548:7;7557:5;7528:7;:35::i;:::-;7362:208;;:::o;9605:432::-;9734:1;9717:19;;:5;:19;;;9713:89;;9788:1;9759:32;;;;;;;;;;;:::i;:::-;;;;;;;;9713:89;9834:1;9815:21;;:7;:21;;;9811:90;;9887:1;9859:31;;;;;;;;;;;:::i;:::-;;;;;;;;9811:90;9940:5;9910:11;:18;9922:5;9910:18;;;;;;;;;;;;;;;:27;9929:7;9910:27;;;;;;;;;;;;;;;:35;;;;9959:9;9955:76;;;10005:7;9989:31;;9998:5;9989:31;;;10014:5;9989:31;;;;;;:::i;:::-;;;;;;;;9955:76;9605:432;;;;:::o;5912:1107::-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;1945:106:3:-;2011:8;:6;:8::i;:::-;2003:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1945:106::o;1767:::-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1349:75::-;1382:6;1415:2;1409:9;1399:19;;1349:75;:::o;1430:117::-;1539:1;1536;1529:12;1553:117;1662:1;1659;1652:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:117::-;3907:1;3904;3897:12;3921:117;4030:1;4027;4020:12;4044:180;4092:77;4089:1;4082:88;4189:4;4186:1;4179:15;4213:4;4210:1;4203:15;4230:281;4313:27;4335:4;4313:27;:::i;:::-;4305:6;4301:40;4443:6;4431:10;4428:22;4407:18;4395:10;4392:34;4389:62;4386:88;;;4454:18;;:::i;:::-;4386:88;4494:10;4490:2;4483:22;4273:238;4230:281;;:::o;4517:129::-;4551:6;4578:20;;:::i;:::-;4568:30;;4607:33;4635:4;4627:6;4607:33;:::i;:::-;4517:129;;;:::o;4652:308::-;4714:4;4804:18;4796:6;4793:30;4790:56;;;4826:18;;:::i;:::-;4790:56;4864:29;4886:6;4864:29;:::i;:::-;4856:37;;4948:4;4942;4938:15;4930:23;;4652:308;;;:::o;4966:146::-;5063:6;5058:3;5053;5040:30;5104:1;5095:6;5090:3;5086:16;5079:27;4966:146;;;:::o;5118:425::-;5196:5;5221:66;5237:49;5279:6;5237:49;:::i;:::-;5221:66;:::i;:::-;5212:75;;5310:6;5303:5;5296:21;5348:4;5341:5;5337:16;5386:3;5377:6;5372:3;5368:16;5365:25;5362:112;;;5393:79;;:::i;:::-;5362:112;5483:54;5530:6;5525:3;5520;5483:54;:::i;:::-;5202:341;5118:425;;;;;:::o;5563:340::-;5619:5;5668:3;5661:4;5653:6;5649:17;5645:27;5635:122;;5676:79;;:::i;:::-;5635:122;5793:6;5780:20;5818:79;5893:3;5885:6;5878:4;5870:6;5866:17;5818:79;:::i;:::-;5809:88;;5625:278;5563:340;;;;:::o;5909:654::-;5987:6;5995;6044:2;6032:9;6023:7;6019:23;6015:32;6012:119;;;6050:79;;:::i;:::-;6012:119;6170:1;6195:53;6240:7;6231:6;6220:9;6216:22;6195:53;:::i;:::-;6185:63;;6141:117;6325:2;6314:9;6310:18;6297:32;6356:18;6348:6;6345:30;6342:117;;;6378:79;;:::i;:::-;6342:117;6483:63;6538:7;6529:6;6518:9;6514:22;6483:63;:::i;:::-;6473:73;;6268:288;5909:654;;;;;:::o;6569:619::-;6646:6;6654;6662;6711:2;6699:9;6690:7;6686:23;6682:32;6679:119;;;6717:79;;:::i;:::-;6679:119;6837:1;6862:53;6907:7;6898:6;6887:9;6883:22;6862:53;:::i;:::-;6852:63;;6808:117;6964:2;6990:53;7035:7;7026:6;7015:9;7011:22;6990:53;:::i;:::-;6980:63;;6935:118;7092:2;7118:53;7163:7;7154:6;7143:9;7139:22;7118:53;:::i;:::-;7108:63;;7063:118;6569:619;;;;;:::o;7194:86::-;7229:7;7269:4;7262:5;7258:16;7247:27;;7194:86;;;:::o;7286:112::-;7369:22;7385:5;7369:22;:::i;:::-;7364:3;7357:35;7286:112;;:::o;7404:214::-;7493:4;7531:2;7520:9;7516:18;7508:26;;7544:67;7608:1;7597:9;7593:17;7584:6;7544:67;:::i;:::-;7404:214;;;;:::o;7624:329::-;7683:6;7732:2;7720:9;7711:7;7707:23;7703:32;7700:119;;;7738:79;;:::i;:::-;7700:119;7858:1;7883:53;7928:7;7919:6;7908:9;7904:22;7883:53;:::i;:::-;7873:63;;7829:117;7624:329;;;;:::o;7959:::-;8018:6;8067:2;8055:9;8046:7;8042:23;8038:32;8035:119;;;8073:79;;:::i;:::-;8035:119;8193:1;8218:53;8263:7;8254:6;8243:9;8239:22;8218:53;:::i;:::-;8208:63;;8164:117;7959:329;;;;:::o;8294:509::-;8363:6;8412:2;8400:9;8391:7;8387:23;8383:32;8380:119;;;8418:79;;:::i;:::-;8380:119;8566:1;8555:9;8551:17;8538:31;8596:18;8588:6;8585:30;8582:117;;;8618:79;;:::i;:::-;8582:117;8723:63;8778:7;8769:6;8758:9;8754:22;8723:63;:::i;:::-;8713:73;;8509:287;8294:509;;;;:::o;8809:118::-;8896:24;8914:5;8896:24;:::i;:::-;8891:3;8884:37;8809:118;;:::o;8933:222::-;9026:4;9064:2;9053:9;9049:18;9041:26;;9077:71;9145:1;9134:9;9130:17;9121:6;9077:71;:::i;:::-;8933:222;;;;:::o;9161:1125::-;9267:6;9275;9283;9291;9340:3;9328:9;9319:7;9315:23;9311:33;9308:120;;;9347:79;;:::i;:::-;9308:120;9495:1;9484:9;9480:17;9467:31;9525:18;9517:6;9514:30;9511:117;;;9547:79;;:::i;:::-;9511:117;9652:63;9707:7;9698:6;9687:9;9683:22;9652:63;:::i;:::-;9642:73;;9438:287;9792:2;9781:9;9777:18;9764:32;9823:18;9815:6;9812:30;9809:117;;;9845:79;;:::i;:::-;9809:117;9950:63;10005:7;9996:6;9985:9;9981:22;9950:63;:::i;:::-;9940:73;;9735:288;10062:2;10088:53;10133:7;10124:6;10113:9;10109:22;10088:53;:::i;:::-;10078:63;;10033:118;10190:2;10216:53;10261:7;10252:6;10241:9;10237:22;10216:53;:::i;:::-;10206:63;;10161:118;9161:1125;;;;;;;:::o;10292:654::-;10370:6;10378;10427:2;10415:9;10406:7;10402:23;10398:32;10395:119;;;10433:79;;:::i;:::-;10395:119;10581:1;10570:9;10566:17;10553:31;10611:18;10603:6;10600:30;10597:117;;;10633:79;;:::i;:::-;10597:117;10738:63;10793:7;10784:6;10773:9;10769:22;10738:63;:::i;:::-;10728:73;;10524:287;10850:2;10876:53;10921:7;10912:6;10901:9;10897:22;10876:53;:::i;:::-;10866:63;;10821:118;10292:654;;;;;:::o;10952:474::-;11020:6;11028;11077:2;11065:9;11056:7;11052:23;11048:32;11045:119;;;11083:79;;:::i;:::-;11045:119;11203:1;11228:53;11273:7;11264:6;11253:9;11249:22;11228:53;:::i;:::-;11218:63;;11174:117;11330:2;11356:53;11401:7;11392:6;11381:9;11377:22;11356:53;:::i;:::-;11346:63;;11301:118;10952:474;;;;;:::o;11432:619::-;11509:6;11517;11525;11574:2;11562:9;11553:7;11549:23;11545:32;11542:119;;;11580:79;;:::i;:::-;11542:119;11700:1;11725:53;11770:7;11761:6;11750:9;11746:22;11725:53;:::i;:::-;11715:63;;11671:117;11827:2;11853:53;11898:7;11889:6;11878:9;11874:22;11853:53;:::i;:::-;11843:63;;11798:118;11955:2;11981:53;12026:7;12017:6;12006:9;12002:22;11981:53;:::i;:::-;11971:63;;11926:118;11432:619;;;;;:::o;12057:180::-;12105:77;12102:1;12095:88;12202:4;12199:1;12192:15;12226:4;12223:1;12216:15;12243:320;12287:6;12324:1;12318:4;12314:12;12304:22;;12371:1;12365:4;12361:12;12392:18;12382:81;;12448:4;12440:6;12436:17;12426:27;;12382:81;12510:2;12502:6;12499:14;12479:18;12476:38;12473:84;;12529:18;;:::i;:::-;12473:84;12294:269;12243:320;;;:::o;12569:177::-;12709:29;12705:1;12697:6;12693:14;12686:53;12569:177;:::o;12752:366::-;12894:3;12915:67;12979:2;12974:3;12915:67;:::i;:::-;12908:74;;12991:93;13080:3;12991:93;:::i;:::-;13109:2;13104:3;13100:12;13093:19;;12752:366;;;:::o;13124:419::-;13290:4;13328:2;13317:9;13313:18;13305:26;;13377:9;13371:4;13367:20;13363:1;13352:9;13348:17;13341:47;13405:131;13531:4;13405:131;:::i;:::-;13397:139;;13124:419;;;:::o;13549:174::-;13689:26;13685:1;13677:6;13673:14;13666:50;13549:174;:::o;13729:366::-;13871:3;13892:67;13956:2;13951:3;13892:67;:::i;:::-;13885:74;;13968:93;14057:3;13968:93;:::i;:::-;14086:2;14081:3;14077:12;14070:19;;13729:366;;;:::o;14101:419::-;14267:4;14305:2;14294:9;14290:18;14282:26;;14354:9;14348:4;14344:20;14340:1;14329:9;14325:17;14318:47;14382:131;14508:4;14382:131;:::i;:::-;14374:139;;14101:419;;;:::o;14526:141::-;14575:4;14598:3;14590:11;;14621:3;14618:1;14611:14;14655:4;14652:1;14642:18;14634:26;;14526:141;;;:::o;14673:93::-;14710:6;14757:2;14752;14745:5;14741:14;14737:23;14727:33;;14673:93;;;:::o;14772:107::-;14816:8;14866:5;14860:4;14856:16;14835:37;;14772:107;;;;:::o;14885:393::-;14954:6;15004:1;14992:10;14988:18;15027:97;15057:66;15046:9;15027:97;:::i;:::-;15145:39;15175:8;15164:9;15145:39;:::i;:::-;15133:51;;15217:4;15213:9;15206:5;15202:21;15193:30;;15266:4;15256:8;15252:19;15245:5;15242:30;15232:40;;14961:317;;14885:393;;;;;:::o;15284:60::-;15312:3;15333:5;15326:12;;15284:60;;;:::o;15350:142::-;15400:9;15433:53;15451:34;15460:24;15478:5;15460:24;:::i;:::-;15451:34;:::i;:::-;15433:53;:::i;:::-;15420:66;;15350:142;;;:::o;15498:75::-;15541:3;15562:5;15555:12;;15498:75;;;:::o;15579:269::-;15689:39;15720:7;15689:39;:::i;:::-;15750:91;15799:41;15823:16;15799:41;:::i;:::-;15791:6;15784:4;15778:11;15750:91;:::i;:::-;15744:4;15737:105;15655:193;15579:269;;;:::o;15854:73::-;15899:3;15854:73;:::o;15933:189::-;16010:32;;:::i;:::-;16051:65;16109:6;16101;16095:4;16051:65;:::i;:::-;15986:136;15933:189;;:::o;16128:186::-;16188:120;16205:3;16198:5;16195:14;16188:120;;;16259:39;16296:1;16289:5;16259:39;:::i;:::-;16232:1;16225:5;16221:13;16212:22;;16188:120;;;16128:186;;:::o;16320:543::-;16421:2;16416:3;16413:11;16410:446;;;16455:38;16487:5;16455:38;:::i;:::-;16539:29;16557:10;16539:29;:::i;:::-;16529:8;16525:44;16722:2;16710:10;16707:18;16704:49;;;16743:8;16728:23;;16704:49;16766:80;16822:22;16840:3;16822:22;:::i;:::-;16812:8;16808:37;16795:11;16766:80;:::i;:::-;16425:431;;16410:446;16320:543;;;:::o;16869:117::-;16923:8;16973:5;16967:4;16963:16;16942:37;;16869:117;;;;:::o;16992:169::-;17036:6;17069:51;17117:1;17113:6;17105:5;17102:1;17098:13;17069:51;:::i;:::-;17065:56;17150:4;17144;17140:15;17130:25;;17043:118;16992:169;;;;:::o;17166:295::-;17242:4;17388:29;17413:3;17407:4;17388:29;:::i;:::-;17380:37;;17450:3;17447:1;17443:11;17437:4;17434:21;17426:29;;17166:295;;;;:::o;17466:1395::-;17583:37;17616:3;17583:37;:::i;:::-;17685:18;17677:6;17674:30;17671:56;;;17707:18;;:::i;:::-;17671:56;17751:38;17783:4;17777:11;17751:38;:::i;:::-;17836:67;17896:6;17888;17882:4;17836:67;:::i;:::-;17930:1;17954:4;17941:17;;17986:2;17978:6;17975:14;18003:1;17998:618;;;;18660:1;18677:6;18674:77;;;18726:9;18721:3;18717:19;18711:26;18702:35;;18674:77;18777:67;18837:6;18830:5;18777:67;:::i;:::-;18771:4;18764:81;18633:222;17968:887;;17998:618;18050:4;18046:9;18038:6;18034:22;18084:37;18116:4;18084:37;:::i;:::-;18143:1;18157:208;18171:7;18168:1;18165:14;18157:208;;;18250:9;18245:3;18241:19;18235:26;18227:6;18220:42;18301:1;18293:6;18289:14;18279:24;;18348:2;18337:9;18333:18;18320:31;;18194:4;18191:1;18187:12;18182:17;;18157:208;;;18393:6;18384:7;18381:19;18378:179;;;18451:9;18446:3;18442:19;18436:26;18494:48;18536:4;18528:6;18524:17;18513:9;18494:48;:::i;:::-;18486:6;18479:64;18401:156;18378:179;18603:1;18599;18591:6;18587:14;18583:22;18577:4;18570:36;18005:611;;;17968:887;;17558:1303;;;17466:1395;;:::o;18867:148::-;18969:11;19006:3;18991:18;;18867:148;;;;:::o;19021:390::-;19127:3;19155:39;19188:5;19155:39;:::i;:::-;19210:89;19292:6;19287:3;19210:89;:::i;:::-;19203:96;;19308:65;19366:6;19361:3;19354:4;19347:5;19343:16;19308:65;:::i;:::-;19398:6;19393:3;19389:16;19382:23;;19131:280;19021:390;;;;:::o;19417:275::-;19549:3;19571:95;19662:3;19653:6;19571:95;:::i;:::-;19564:102;;19683:3;19676:10;;19417:275;;;;:::o;19698:174::-;19838:26;19834:1;19826:6;19822:14;19815:50;19698:174;:::o;19878:366::-;20020:3;20041:67;20105:2;20100:3;20041:67;:::i;:::-;20034:74;;20117:93;20206:3;20117:93;:::i;:::-;20235:2;20230:3;20226:12;20219:19;;19878:366;;;:::o;20250:419::-;20416:4;20454:2;20443:9;20439:18;20431:26;;20503:9;20497:4;20493:20;20489:1;20478:9;20474:17;20467:47;20531:131;20657:4;20531:131;:::i;:::-;20523:139;;20250:419;;;:::o;20675:180::-;20815:32;20811:1;20803:6;20799:14;20792:56;20675:180;:::o;20861:366::-;21003:3;21024:67;21088:2;21083:3;21024:67;:::i;:::-;21017:74;;21100:93;21189:3;21100:93;:::i;:::-;21218:2;21213:3;21209:12;21202:19;;20861:366;;;:::o;21233:419::-;21399:4;21437:2;21426:9;21422:18;21414:26;;21486:9;21480:4;21476:20;21472:1;21461:9;21457:17;21450:47;21514:131;21640:4;21514:131;:::i;:::-;21506:139;;21233:419;;;:::o;21658:176::-;21798:28;21794:1;21786:6;21782:14;21775:52;21658:176;:::o;21840:366::-;21982:3;22003:67;22067:2;22062:3;22003:67;:::i;:::-;21996:74;;22079:93;22168:3;22079:93;:::i;:::-;22197:2;22192:3;22188:12;22181:19;;21840:366;;;:::o;22212:419::-;22378:4;22416:2;22405:9;22401:18;22393:26;;22465:9;22459:4;22455:20;22451:1;22440:9;22436:17;22429:47;22493:131;22619:4;22493:131;:::i;:::-;22485:139;;22212:419;;;:::o;22637:169::-;22777:21;22773:1;22765:6;22761:14;22754:45;22637:169;:::o;22812:366::-;22954:3;22975:67;23039:2;23034:3;22975:67;:::i;:::-;22968:74;;23051:93;23140:3;23051:93;:::i;:::-;23169:2;23164:3;23160:12;23153:19;;22812:366;;;:::o;23184:419::-;23350:4;23388:2;23377:9;23373:18;23365:26;;23437:9;23431:4;23427:20;23423:1;23412:9;23408:17;23401:47;23465:131;23591:4;23465:131;:::i;:::-;23457:139;;23184:419;;;:::o;23609:170::-;23749:22;23745:1;23737:6;23733:14;23726:46;23609:170;:::o;23785:366::-;23927:3;23948:67;24012:2;24007:3;23948:67;:::i;:::-;23941:74;;24024:93;24113:3;24024:93;:::i;:::-;24142:2;24137:3;24133:12;24126:19;;23785:366;;;:::o;24157:419::-;24323:4;24361:2;24350:9;24346:18;24338:26;;24410:9;24404:4;24400:20;24396:1;24385:9;24381:17;24374:47;24438:131;24564:4;24438:131;:::i;:::-;24430:139;;24157:419;;;:::o;24582:172::-;24722:24;24718:1;24710:6;24706:14;24699:48;24582:172;:::o;24760:366::-;24902:3;24923:67;24987:2;24982:3;24923:67;:::i;:::-;24916:74;;24999:93;25088:3;24999:93;:::i;:::-;25117:2;25112:3;25108:12;25101:19;;24760:366;;;:::o;25132:419::-;25298:4;25336:2;25325:9;25321:18;25313:26;;25385:9;25379:4;25375:20;25371:1;25360:9;25356:17;25349:47;25413:131;25539:4;25413:131;:::i;:::-;25405:139;;25132:419;;;:::o;25557:222::-;25697:34;25693:1;25685:6;25681:14;25674:58;25766:5;25761:2;25753:6;25749:15;25742:30;25557:222;:::o;25785:366::-;25927:3;25948:67;26012:2;26007:3;25948:67;:::i;:::-;25941:74;;26024:93;26113:3;26024:93;:::i;:::-;26142:2;26137:3;26133:12;26126:19;;25785:366;;;:::o;26157:419::-;26323:4;26361:2;26350:9;26346:18;26338:26;;26410:9;26404:4;26400:20;26396:1;26385:9;26381:17;26374:47;26438:131;26564:4;26438:131;:::i;:::-;26430:139;;26157:419;;;:::o;26582:171::-;26722:23;26718:1;26710:6;26706:14;26699:47;26582:171;:::o;26759:366::-;26901:3;26922:67;26986:2;26981:3;26922:67;:::i;:::-;26915:74;;26998:93;27087:3;26998:93;:::i;:::-;27116:2;27111:3;27107:12;27100:19;;26759:366;;;:::o;27131:419::-;27297:4;27335:2;27324:9;27320:18;27312:26;;27384:9;27378:4;27374:20;27370:1;27359:9;27355:17;27348:47;27412:131;27538:4;27412:131;:::i;:::-;27404:139;;27131:419;;;:::o;27556:735::-;27773:4;27811:3;27800:9;27796:19;27788:27;;27861:9;27855:4;27851:20;27847:1;27836:9;27832:17;27825:47;27889:78;27962:4;27953:6;27889:78;:::i;:::-;27881:86;;28014:9;28008:4;28004:20;27999:2;27988:9;27984:18;27977:48;28042:78;28115:4;28106:6;28042:78;:::i;:::-;28034:86;;28130:72;28198:2;28187:9;28183:18;28174:6;28130:72;:::i;:::-;28212;28280:2;28269:9;28265:18;28256:6;28212:72;:::i;:::-;27556:735;;;;;;;:::o;28297:179::-;28437:31;28433:1;28425:6;28421:14;28414:55;28297:179;:::o;28482:366::-;28624:3;28645:67;28709:2;28704:3;28645:67;:::i;:::-;28638:74;;28721:93;28810:3;28721:93;:::i;:::-;28839:2;28834:3;28830:12;28823:19;;28482:366;;;:::o;28854:419::-;29020:4;29058:2;29047:9;29043:18;29035:26;;29107:9;29101:4;29097:20;29093:1;29082:9;29078:17;29071:47;29135:131;29261:4;29135:131;:::i;:::-;29127:139;;28854:419;;;:::o;29279:423::-;29420:4;29458:2;29447:9;29443:18;29435:26;;29507:9;29501:4;29497:20;29493:1;29482:9;29478:17;29471:47;29535:78;29608:4;29599:6;29535:78;:::i;:::-;29527:86;;29623:72;29691:2;29680:9;29676:18;29667:6;29623:72;:::i;:::-;29279:423;;;;;:::o;29708:167::-;29848:19;29844:1;29836:6;29832:14;29825:43;29708:167;:::o;29881:366::-;30023:3;30044:67;30108:2;30103:3;30044:67;:::i;:::-;30037:74;;30120:93;30209:3;30120:93;:::i;:::-;30238:2;30233:3;30229:12;30222:19;;29881:366;;;:::o;30253:419::-;30419:4;30457:2;30446:9;30442:18;30434:26;;30506:9;30500:4;30496:20;30492:1;30481:9;30477:17;30470:47;30534:131;30660:4;30534:131;:::i;:::-;30526:139;;30253:419;;;:::o;30678:180::-;30726:77;30723:1;30716:88;30823:4;30820:1;30813:15;30847:4;30844:1;30837:15;30864:191;30904:3;30923:20;30941:1;30923:20;:::i;:::-;30918:25;;30957:20;30975:1;30957:20;:::i;:::-;30952:25;;31000:1;30997;30993:9;30986:16;;31021:3;31018:1;31015:10;31012:36;;;31028:18;;:::i;:::-;31012:36;30864:191;;;;:::o;31061:442::-;31210:4;31248:2;31237:9;31233:18;31225:26;;31261:71;31329:1;31318:9;31314:17;31305:6;31261:71;:::i;:::-;31342:72;31410:2;31399:9;31395:18;31386:6;31342:72;:::i;:::-;31424;31492:2;31481:9;31477:18;31468:6;31424:72;:::i;:::-;31061:442;;;;;;:::o;31509:170::-;31649:22;31645:1;31637:6;31633:14;31626:46;31509:170;:::o;31685:366::-;31827:3;31848:67;31912:2;31907:3;31848:67;:::i;:::-;31841:74;;31924:93;32013:3;31924:93;:::i;:::-;32042:2;32037:3;32033:12;32026:19;;31685:366;;;:::o;32057:419::-;32223:4;32261:2;32250:9;32246:18;32238:26;;32310:9;32304:4;32300:20;32296:1;32285:9;32281:17;32274:47;32338:131;32464:4;32338:131;:::i;:::-;32330:139;;32057:419;;;:::o;32482:166::-;32622:18;32618:1;32610:6;32606:14;32599:42;32482:166;:::o;32654:366::-;32796:3;32817:67;32881:2;32876:3;32817:67;:::i;:::-;32810:74;;32893:93;32982:3;32893:93;:::i;:::-;33011:2;33006:3;33002:12;32995:19;;32654:366;;;:::o;33026:419::-;33192:4;33230:2;33219:9;33215:18;33207:26;;33279:9;33273:4;33269:20;33265:1;33254:9;33250:17;33243:47;33307:131;33433:4;33307:131;:::i;:::-;33299:139;;33026:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2375200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addVestingContract(address)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2940",
								"beneficiaryCategories(address)": "infinite",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"categoryAllocations(string)": "infinite",
								"decimals()": "2563",
								"getBeneficiaryCategory(address)": "infinite",
								"getCategoryAllocation(string)": "infinite",
								"getVestedBalance(address)": "2919",
								"initialize(string,string,uint256,address)": "infinite",
								"isInitialized()": "2519",
								"mintWithVesting(address,uint256,address)": "infinite",
								"name()": "infinite",
								"owner()": "2582",
								"pause()": "infinite",
								"paused()": "2591",
								"removeVestingContract(address)": "infinite",
								"renounceOwnership()": "infinite",
								"setBeneficiaryCategory(address,string)": "infinite",
								"setCategoryAllocation(string,uint256)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2523",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite",
								"vestedBalances(address)": "2913",
								"vestingContracts(address)": "2945"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 224,
									"end": 7033,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 224,
									"end": 7033,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 224,
									"end": 7033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1229,
									"end": 1418,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1229,
									"end": 1418,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1229,
									"end": 1418,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1229,
									"end": 1418,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1229,
									"end": 1418,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1229,
									"end": 1418,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1229,
									"end": 1418,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1229,
									"end": 1418,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1229,
									"end": 1418,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1229,
									"end": 1418,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1229,
									"end": 1418,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1265,
									"end": 1275,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 224,
									"end": 7033,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 224,
									"end": 7033,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 224,
									"end": 7033,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 224,
									"end": 7033,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 224,
									"end": 7033,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 7033,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 224,
									"end": 7033,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 7033,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 7033,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 224,
									"end": 7033,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 7033,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c9dd87991d3dfd3269ee70b4e1b3a1856c4210a541487b49ad605b1370ba413164736f6c63430008140033",
									".code": [
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "D6458285"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "D6458285"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "ECBC5095"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "BC3BEA5E"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "BD3A13F6"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "CB3FDB61"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "8456CB59"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "8456CB59"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "A00686F1"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "79CC6790"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "7F58B9D3"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "7FB36099"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "392E53CD"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "4EBC47F8"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "4EBC47F8"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "66368FB6"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "392E53CD"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "3F4BA83A"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "4CF590B0"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "19ECCDFD"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "19ECCDFD"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "37915874"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 7033,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2546,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2448,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2448,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2448,
											"end": 2546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2546,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2448,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2448,
											"end": 2546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2448,
											"end": 2546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2448,
											"end": 2546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2546,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2448,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2448,
											"end": 2546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2546,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2546,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4556,
											"end": 4923,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4556,
											"end": 4923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 4556,
											"end": 4923,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4556,
											"end": 4923,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4923,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4923,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4556,
											"end": 4923,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 4556,
											"end": 4923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4923,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4556,
											"end": 4923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4556,
											"end": 4923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4923,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 4556,
											"end": 4923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4923,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2815,
											"end": 2913,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2815,
											"end": 2913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2815,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2815,
											"end": 2913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2913,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2815,
											"end": 2913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2815,
											"end": 2913,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2815,
											"end": 2913,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2815,
											"end": 2913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2913,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2815,
											"end": 2913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2815,
											"end": 2913,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2913,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2913,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2913,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2913,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 464,
											"end": 512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 464,
											"end": 512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 464,
											"end": 512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3067,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2977,
											"end": 3067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2977,
											"end": 3067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2977,
											"end": 3067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3067,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2977,
											"end": 3067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3067,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2977,
											"end": 3067,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2977,
											"end": 3067,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2977,
											"end": 3067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3067,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2977,
											"end": 3067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3067,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2977,
											"end": 3067,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3067,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3067,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3067,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3067,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6520,
											"end": 6585,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6520,
											"end": 6585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6520,
											"end": 6585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 6520,
											"end": 6585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 6520,
											"end": 6585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6520,
											"end": 6585,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 6520,
											"end": 6585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6520,
											"end": 6585,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6680,
											"end": 6771,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6680,
											"end": 6771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6680,
											"end": 6771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 6680,
											"end": 6771,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6680,
											"end": 6771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6680,
											"end": 6771,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6680,
											"end": 6771,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6680,
											"end": 6771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6680,
											"end": 6771,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6680,
											"end": 6771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6680,
											"end": 6771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6680,
											"end": 6771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6680,
											"end": 6771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6680,
											"end": 6771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6680,
											"end": 6771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6680,
											"end": 6771,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6680,
											"end": 6771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6680,
											"end": 6771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 6680,
											"end": 6771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6680,
											"end": 6771,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 6680,
											"end": 6771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6680,
											"end": 6771,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 6196,
											"end": 6345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6196,
											"end": 6345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 6196,
											"end": 6345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 607,
											"end": 662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 607,
											"end": 662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 607,
											"end": 662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 548,
											"end": 601,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 548,
											"end": 601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 548,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 548,
											"end": 601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 548,
											"end": 601,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 548,
											"end": 601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 548,
											"end": 601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 548,
											"end": 601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 548,
											"end": 601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 548,
											"end": 601,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 548,
											"end": 601,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 548,
											"end": 601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 548,
											"end": 601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 548,
											"end": 601,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 7031,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6928,
											"end": 7031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6928,
											"end": 7031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 6928,
											"end": 7031,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6928,
											"end": 7031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6928,
											"end": 7031,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6928,
											"end": 7031,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6928,
											"end": 7031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6928,
											"end": 7031,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6928,
											"end": 7031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6928,
											"end": 7031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 6928,
											"end": 7031,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6928,
											"end": 7031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6928,
											"end": 7031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 6928,
											"end": 7031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6928,
											"end": 7031,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 6928,
											"end": 7031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6928,
											"end": 7031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6928,
											"end": 7031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6928,
											"end": 7031,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 6928,
											"end": 7031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6928,
											"end": 7031,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5672,
											"end": 5794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 5672,
											"end": 5794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 5672,
											"end": 5794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5922,
											"end": 6062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 5922,
											"end": 6062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 5922,
											"end": 6062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6401,
											"end": 6462,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6401,
											"end": 6462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6401,
											"end": 6462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 6401,
											"end": 6462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 6401,
											"end": 6462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6401,
											"end": 6462,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 6401,
											"end": 6462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6401,
											"end": 6462,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2612,
											"end": 2714,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2612,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2612,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2612,
											"end": 2714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 2714,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2612,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 2714,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2612,
											"end": 2714,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2612,
											"end": 2714,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 2714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2612,
											"end": 2714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 2714,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2612,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 2714,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2612,
											"end": 2714,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 2714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 2714,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 2714,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 2714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 2714,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3539,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3194,
											"end": 3539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3194,
											"end": 3539,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3194,
											"end": 3539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3539,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3539,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3194,
											"end": 3539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3194,
											"end": 3539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3539,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3194,
											"end": 3539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3194,
											"end": 3539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3539,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3194,
											"end": 3539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3539,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3669,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3669,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3669,
											"end": 3939,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3669,
											"end": 3939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3939,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3939,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3669,
											"end": 3939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3669,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3669,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3669,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3669,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3939,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 2384,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1651,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1651,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1651,
											"end": 2384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 2384,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 2384,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 2384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 2384,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 2384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1651,
											"end": 2384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 2384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1651,
											"end": 2384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 2384,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1651,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1651,
											"end": 2384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 2384,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1651,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 2384,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 409,
											"end": 458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 409,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 409,
											"end": 458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 409,
											"end": 458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 409,
											"end": 458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 409,
											"end": 458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 409,
											"end": 458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 409,
											"end": 458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 409,
											"end": 458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 409,
											"end": 458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 409,
											"end": 458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 409,
											"end": 458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 409,
											"end": 458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4414,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4079,
											"end": 4414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 4079,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4079,
											"end": 4414,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4414,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4414,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4079,
											"end": 4414,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 4079,
											"end": 4414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4414,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4079,
											"end": 4414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 4079,
											"end": 4414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4414,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 4079,
											"end": 4414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4414,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5117,
											"end": 5528,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5117,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5117,
											"end": 5528,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5117,
											"end": 5528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5528,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5528,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5117,
											"end": 5528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5117,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5528,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5117,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5117,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5528,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5117,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5528,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2546,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2448,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2502,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2534,
											"end": 2539,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2527,
											"end": 2539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2527,
											"end": 2539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3975,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 4004,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 4007,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 4007,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 4038,
											"end": 4043,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4029,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 4029,
											"end": 4060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4077,
											"end": 4081,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2855,
											"end": 2862,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4556,
											"end": 4923,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4556,
											"end": 4923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4693,
											"end": 4694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4670,
											"end": 4695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4670,
											"end": 4695,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4681,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4670,
											"end": 4695,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4695,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4727,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 4662,
											"end": 4727,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4662,
											"end": 4727,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4662,
											"end": 4727,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4727,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4662,
											"end": 4727,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4727,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 4662,
											"end": 4727,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4727,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 4662,
											"end": 4727,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4727,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 4662,
											"end": 4727,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4662,
											"end": 4727,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4727,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4727,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4727,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4727,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4727,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4727,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 4662,
											"end": 4727,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4751,
											"end": 4759,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4745,
											"end": 4767,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4745,
											"end": 4771,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4737,
											"end": 4800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 4737,
											"end": 4800,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4737,
											"end": 4800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4737,
											"end": 4800,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4737,
											"end": 4800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4737,
											"end": 4800,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4737,
											"end": 4800,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4737,
											"end": 4800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4737,
											"end": 4800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4737,
											"end": 4800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 4737,
											"end": 4800,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4737,
											"end": 4800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 4737,
											"end": 4800,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4737,
											"end": 4800,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 4737,
											"end": 4800,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4737,
											"end": 4800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4737,
											"end": 4800,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4737,
											"end": 4800,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4737,
											"end": 4800,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4737,
											"end": 4800,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4737,
											"end": 4800,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4737,
											"end": 4800,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4737,
											"end": 4800,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 4737,
											"end": 4800,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4848,
											"end": 4856,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 4811,
											"end": 4845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4833,
											"end": 4844,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4811,
											"end": 4845,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4811,
											"end": 4845,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4845,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4845,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4811,
											"end": 4845,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4845,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4845,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4845,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4811,
											"end": 4845,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4811,
											"end": 4845,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4856,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4856,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4856,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 4811,
											"end": 4856,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4856,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4856,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 4811,
											"end": 4856,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4856,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 4811,
											"end": 4856,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4856,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4894,
											"end": 4905,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4871,
											"end": 4916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4871,
											"end": 4916,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4871,
											"end": 4916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A110B2DAA9B9328E235E98C75405F18D092B0D0EDD4574CC8D80A41908FBF0BF"
										},
										{
											"begin": 4907,
											"end": 4915,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4871,
											"end": 4916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4871,
											"end": 4916,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4871,
											"end": 4916,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 4871,
											"end": 4916,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4871,
											"end": 4916,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4871,
											"end": 4916,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4871,
											"end": 4916,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4871,
											"end": 4916,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 4871,
											"end": 4916,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4871,
											"end": 4916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4871,
											"end": 4916,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4871,
											"end": 4916,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4871,
											"end": 4916,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4871,
											"end": 4916,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4871,
											"end": 4916,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4871,
											"end": 4916,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4771,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4783,
											"end": 4798,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 4801,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 4801,
											"end": 4813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 4839,
											"end": 4843,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4845,
											"end": 4852,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4854,
											"end": 4859,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4823,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 4823,
											"end": 4860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 4880,
											"end": 4884,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4886,
											"end": 4888,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4890,
											"end": 4895,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4870,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 4870,
											"end": 4896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4913,
											"end": 4917,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2815,
											"end": 2913,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2815,
											"end": 2913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2873,
											"end": 2878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2897,
											"end": 2906,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2897,
											"end": 2906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2897,
											"end": 2906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2897,
											"end": 2906,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2897,
											"end": 2906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2897,
											"end": 2906,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2897,
											"end": 2906,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2897,
											"end": 2906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2897,
											"end": 2906,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2897,
											"end": 2906,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2897,
											"end": 2906,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2890,
											"end": 2906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2890,
											"end": 2906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 464,
											"end": 512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3067,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2977,
											"end": 3067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3025,
											"end": 3029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3060,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 3048,
											"end": 3060,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3048,
											"end": 3060,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3048,
											"end": 3060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3048,
											"end": 3060,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3048,
											"end": 3060,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3048,
											"end": 3060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3048,
											"end": 3060,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3048,
											"end": 3060,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3048,
											"end": 3060,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6520,
											"end": 6585,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 6520,
											"end": 6585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6568,
											"end": 6578,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 6568,
											"end": 6576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 6568,
											"end": 6578,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6578,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 6568,
											"end": 6578,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6520,
											"end": 6585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6680,
											"end": 6771,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 6680,
											"end": 6771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6739,
											"end": 6764,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 6745,
											"end": 6755,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6757,
											"end": 6763,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6739,
											"end": 6744,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 6739,
											"end": 6764,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6739,
											"end": 6764,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 6739,
											"end": 6764,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6680,
											"end": 6771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6680,
											"end": 6771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6285,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6304,
											"end": 6325,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 6304,
											"end": 6338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6326,
											"end": 6337,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6338,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6304,
											"end": 6338,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6338,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6304,
											"end": 6338,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6338,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6304,
											"end": 6338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6338,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6304,
											"end": 6338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6304,
											"end": 6338,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 6297,
											"end": 6338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 6297,
											"end": 6338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 607,
											"end": 662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 607,
											"end": 662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 607,
											"end": 662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 548,
											"end": 601,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 548,
											"end": 601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 548,
											"end": 601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 548,
											"end": 601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 548,
											"end": 601,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 548,
											"end": 601,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 601,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 548,
											"end": 601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3033,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3041,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 7031,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6928,
											"end": 7031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7005,
											"end": 7024,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 7011,
											"end": 7015,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7023,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7010,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 7005,
											"end": 7024,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7024,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 7005,
											"end": 7024,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6928,
											"end": 7031,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6928,
											"end": 7031,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6928,
											"end": 7031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5738,
											"end": 5745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5764,
											"end": 5778,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5764,
											"end": 5787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5779,
											"end": 5786,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5764,
											"end": 5787,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5764,
											"end": 5787,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5764,
											"end": 5787,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5764,
											"end": 5787,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5764,
											"end": 5787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5764,
											"end": 5787,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5764,
											"end": 5787,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5764,
											"end": 5787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5764,
											"end": 5787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5764,
											"end": 5787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5764,
											"end": 5787,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5764,
											"end": 5787,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5764,
											"end": 5787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5764,
											"end": 5787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5764,
											"end": 5787,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5764,
											"end": 5787,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5757,
											"end": 5787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5757,
											"end": 5787,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5672,
											"end": 5794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5672,
											"end": 5794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6000,
											"end": 6007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6026,
											"end": 6045,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 6046,
											"end": 6054,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6026,
											"end": 6055,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6026,
											"end": 6055,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6026,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 6026,
											"end": 6055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6026,
											"end": 6055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6026,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 6026,
											"end": 6055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6026,
											"end": 6055,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 6026,
											"end": 6055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6026,
											"end": 6055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6026,
											"end": 6055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6026,
											"end": 6055,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6026,
											"end": 6055,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6026,
											"end": 6055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6026,
											"end": 6055,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6026,
											"end": 6055,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6026,
											"end": 6055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6026,
											"end": 6055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6026,
											"end": 6055,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6026,
											"end": 6055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6026,
											"end": 6055,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6026,
											"end": 6055,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6019,
											"end": 6055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6019,
											"end": 6055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 6062,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 6062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6401,
											"end": 6462,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 6401,
											"end": 6462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6447,
											"end": 6455,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 6447,
											"end": 6453,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 6447,
											"end": 6455,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6447,
											"end": 6455,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 6447,
											"end": 6455,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6401,
											"end": 6462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2612,
											"end": 2714,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2612,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2668,
											"end": 2681,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2700,
											"end": 2707,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2693,
											"end": 2707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2693,
											"end": 2707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 2714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 2714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3539,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3194,
											"end": 3539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3311,
											"end": 3312,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3284,
											"end": 3313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3284,
											"end": 3313,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3284,
											"end": 3299,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3284,
											"end": 3313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3284,
											"end": 3313,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3342,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 3276,
											"end": 3342,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3342,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3276,
											"end": 3342,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3342,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3276,
											"end": 3342,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3342,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3342,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3276,
											"end": 3342,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3342,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 3276,
											"end": 3342,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3342,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 3276,
											"end": 3342,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3342,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 3276,
											"end": 3342,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3342,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3276,
											"end": 3342,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3342,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3342,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3342,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3342,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3342,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3342,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 3276,
											"end": 3342,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3361,
											"end": 3377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 3361,
											"end": 3394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3378,
											"end": 3393,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3361,
											"end": 3394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3361,
											"end": 3394,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3361,
											"end": 3394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3361,
											"end": 3394,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3361,
											"end": 3394,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3361,
											"end": 3394,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3361,
											"end": 3394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3361,
											"end": 3394,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3361,
											"end": 3394,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3361,
											"end": 3394,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3361,
											"end": 3394,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3361,
											"end": 3394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3361,
											"end": 3394,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3361,
											"end": 3394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3361,
											"end": 3394,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3361,
											"end": 3394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3361,
											"end": 3394,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3361,
											"end": 3394,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3361,
											"end": 3394,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3361,
											"end": 3394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3361,
											"end": 3394,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3361,
											"end": 3394,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3361,
											"end": 3394,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3361,
											"end": 3394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3361,
											"end": 3394,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 3394,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3429,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 3352,
											"end": 3429,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3352,
											"end": 3429,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3352,
											"end": 3429,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3429,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3352,
											"end": 3429,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3429,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 3352,
											"end": 3429,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3429,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 3352,
											"end": 3429,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3429,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 3352,
											"end": 3429,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3352,
											"end": 3429,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3429,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3429,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3429,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3429,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3429,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3429,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 3352,
											"end": 3429,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3440,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 3440,
											"end": 3473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3457,
											"end": 3472,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3440,
											"end": 3473,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3440,
											"end": 3473,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3473,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3473,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3440,
											"end": 3473,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3473,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3473,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3473,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3440,
											"end": 3473,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3440,
											"end": 3473,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3440,
											"end": 3480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3440,
											"end": 3480,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3480,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3480,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3480,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3440,
											"end": 3480,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3480,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3480,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3480,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3480,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3480,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3480,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3480,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3480,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3480,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3480,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3480,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3516,
											"end": 3531,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3495,
											"end": 3532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3495,
											"end": 3532,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3495,
											"end": 3532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6A45208724D4B6F6774A21924D8ADA0231F197811681096D5FD6B5F22E6E73D3"
										},
										{
											"begin": 3495,
											"end": 3532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3495,
											"end": 3532,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3495,
											"end": 3532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3495,
											"end": 3532,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3495,
											"end": 3532,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3495,
											"end": 3532,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3495,
											"end": 3532,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3495,
											"end": 3532,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3495,
											"end": 3532,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3313,
											"end": 3317,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3342,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 3345,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 3345,
											"end": 3357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 3377,
											"end": 3382,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3384,
											"end": 3386,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3388,
											"end": 3393,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 3367,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3669,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3669,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3762,
											"end": 3778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 3762,
											"end": 3795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3779,
											"end": 3794,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3762,
											"end": 3795,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3762,
											"end": 3795,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3795,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3795,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3762,
											"end": 3795,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3795,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3795,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3795,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3762,
											"end": 3795,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3795,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3795,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3795,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3795,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3762,
											"end": 3795,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3795,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3795,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3762,
											"end": 3795,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3754,
											"end": 3826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 3754,
											"end": 3826,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3754,
											"end": 3826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3754,
											"end": 3826,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3754,
											"end": 3826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3754,
											"end": 3826,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3754,
											"end": 3826,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3754,
											"end": 3826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3754,
											"end": 3826,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3754,
											"end": 3826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 3754,
											"end": 3826,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3754,
											"end": 3826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 3754,
											"end": 3826,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3754,
											"end": 3826,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 3754,
											"end": 3826,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3754,
											"end": 3826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3754,
											"end": 3826,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3754,
											"end": 3826,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3754,
											"end": 3826,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3754,
											"end": 3826,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3754,
											"end": 3826,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3754,
											"end": 3826,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3754,
											"end": 3826,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 3754,
											"end": 3826,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3873,
											"end": 3878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3837,
											"end": 3853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 3837,
											"end": 3870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3854,
											"end": 3869,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3837,
											"end": 3870,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3837,
											"end": 3870,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3870,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3870,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3837,
											"end": 3870,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3870,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3870,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3870,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3837,
											"end": 3870,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3837,
											"end": 3870,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3837,
											"end": 3878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3837,
											"end": 3878,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3878,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3878,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3878,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3837,
											"end": 3878,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3878,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3878,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3878,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3878,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3878,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3878,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3878,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3878,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3878,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3878,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3878,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3931,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3893,
											"end": 3932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3893,
											"end": 3932,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3893,
											"end": 3932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "93C4DACA93FE23045EA63D803DB724CCFF33790F1B2434276479F728A4E38F99"
										},
										{
											"begin": 3893,
											"end": 3932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3893,
											"end": 3932,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3893,
											"end": 3932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3893,
											"end": 3932,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3893,
											"end": 3932,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3893,
											"end": 3932,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3893,
											"end": 3932,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3893,
											"end": 3932,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3893,
											"end": 3932,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 2384,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1651,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1831,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 1819,
											"end": 1831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1831,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1831,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1819,
											"end": 1831,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1831,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1831,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1819,
											"end": 1831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1831,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1810,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1810,
											"end": 1855,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1810,
											"end": 1855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1810,
											"end": 1855,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1810,
											"end": 1855,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1810,
											"end": 1855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1810,
											"end": 1855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1810,
											"end": 1855,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1810,
											"end": 1855,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1810,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1810,
											"end": 1855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1810,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1810,
											"end": 1855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1810,
											"end": 1855,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1810,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1810,
											"end": 1855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1810,
											"end": 1855,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1810,
											"end": 1855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1810,
											"end": 1855,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1810,
											"end": 1855,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1810,
											"end": 1855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1810,
											"end": 1855,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1810,
											"end": 1855,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1810,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1884,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1873,
											"end": 1892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1873,
											"end": 1896,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 1865,
											"end": 1921,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1921,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1865,
											"end": 1921,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1921,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1865,
											"end": 1921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1921,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1921,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1865,
											"end": 1921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1865,
											"end": 1921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1865,
											"end": 1921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1921,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1865,
											"end": 1921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1921,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1865,
											"end": 1921,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1921,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1921,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1921,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 1865,
											"end": 1921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1963,
											"end": 1964,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 1952,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 1960,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 1964,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1931,
											"end": 1991,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1991,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1931,
											"end": 1991,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1991,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1931,
											"end": 1991,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1991,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1991,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1931,
											"end": 1991,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1931,
											"end": 1991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1931,
											"end": 1991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1991,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1931,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1991,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1931,
											"end": 1991,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1991,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1991,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1991,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1991,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1931,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2025,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2009,
											"end": 2021,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2009,
											"end": 2025,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2001,
											"end": 2065,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2065,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2001,
											"end": 2065,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2065,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2001,
											"end": 2065,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2065,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2065,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2001,
											"end": 2065,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2001,
											"end": 2065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 2001,
											"end": 2065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2065,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2001,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2065,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2001,
											"end": 2065,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2065,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2065,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2065,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2065,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2065,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2001,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2101,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2083,
											"end": 2103,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2083,
											"end": 2103,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2103,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 2075,
											"end": 2129,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2129,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2075,
											"end": 2129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2129,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2075,
											"end": 2129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 2075,
											"end": 2129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 2075,
											"end": 2129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2129,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 2075,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2129,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2129,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2129,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 2075,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2140,
											"end": 2145,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2140,
											"end": 2153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2140,
											"end": 2153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2140,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 2140,
											"end": 2153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2140,
											"end": 2153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2140,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2140,
											"end": 2153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2140,
											"end": 2153,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 2140,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2140,
											"end": 2153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2180,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2170,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2163,
											"end": 2180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 2163,
											"end": 2180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2163,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2180,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 2163,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2204,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2190,
											"end": 2199,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2190,
											"end": 2199,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2190,
											"end": 2204,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2190,
											"end": 2204,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2204,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2204,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2190,
											"end": 2204,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2204,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2204,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2204,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2204,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2190,
											"end": 2204,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2204,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2204,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2204,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 2234,
											"end": 2240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2215,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 2215,
											"end": 2241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2251,
											"end": 2278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 2257,
											"end": 2263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2265,
											"end": 2277,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2251,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 2251,
											"end": 2278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2251,
											"end": 2278,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 2251,
											"end": 2278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2307,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2288,
											"end": 2300,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 2288,
											"end": 2300,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2288,
											"end": 2307,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2288,
											"end": 2307,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2307,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2307,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2288,
											"end": 2307,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2307,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2307,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2307,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2307,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2307,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2307,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2307,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2307,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2377,
											"name": "PUSH",
											"source": 0,
											"value": "12BDFD2F29CF0194CD626FBD8A4B8FD1DE36748D1A1B936EAC39FE35845C585A"
										},
										{
											"begin": 2340,
											"end": 2345,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2347,
											"end": 2354,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2368,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2376,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2377,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2323,
											"end": 2377,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 2323,
											"end": 2377,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2377,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2377,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 2323,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2377,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 2323,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2377,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2323,
											"end": 2377,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2377,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2377,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 2384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 2384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 2384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 2384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 2384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 409,
											"end": 458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 409,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 409,
											"end": 458,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 458,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 409,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 458,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 409,
											"end": 458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4414,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 4079,
											"end": 4414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4193,
											"end": 4201,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4187,
											"end": 4209,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4187,
											"end": 4213,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4242,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 4179,
											"end": 4242,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4179,
											"end": 4242,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4179,
											"end": 4242,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4242,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4179,
											"end": 4242,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4242,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 4179,
											"end": 4242,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4242,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 4179,
											"end": 4242,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4242,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 4179,
											"end": 4242,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4179,
											"end": 4242,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4242,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4242,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4242,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4242,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4242,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4242,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 4179,
											"end": 4242,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4270,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4260,
											"end": 4266,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4260,
											"end": 4270,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 4252,
											"end": 4304,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4252,
											"end": 4304,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4252,
											"end": 4304,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4304,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4252,
											"end": 4304,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 4252,
											"end": 4304,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 4252,
											"end": 4304,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4304,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 4252,
											"end": 4304,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4252,
											"end": 4304,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4304,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4304,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4304,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4304,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4304,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4304,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 4252,
											"end": 4304,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4353,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 4335,
											"end": 4343,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4315,
											"end": 4344,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4344,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 4315,
											"end": 4344,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4344,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4344,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 4315,
											"end": 4344,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4344,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 4315,
											"end": 4344,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4344,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4344,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4344,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4315,
											"end": 4344,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4315,
											"end": 4344,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4344,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4344,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4344,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4344,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4344,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4353,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4353,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4353,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4353,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40595E4D22661278FEEFF293E3DE4334B9132B0BF1C2AAC89A8EC5AEDB2C11A4"
										},
										{
											"begin": 4390,
											"end": 4398,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4406,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4368,
											"end": 4407,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4407,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 4368,
											"end": 4407,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4407,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4407,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4407,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 4368,
											"end": 4407,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4407,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 4368,
											"end": 4407,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4368,
											"end": 4407,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4407,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4407,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4407,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4407,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4407,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4414,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4414,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3542,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3572,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3587,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5117,
											"end": 5528,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5117,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5276,
											"end": 5277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5262,
											"end": 5278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5262,
											"end": 5278,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5262,
											"end": 5264,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5262,
											"end": 5278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5262,
											"end": 5278,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5262,
											"end": 5278,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5300,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 5254,
											"end": 5300,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5254,
											"end": 5300,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5254,
											"end": 5300,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5300,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5254,
											"end": 5300,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5300,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 5254,
											"end": 5300,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5300,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 5254,
											"end": 5300,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5300,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 5254,
											"end": 5300,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5254,
											"end": 5300,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5300,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5300,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5300,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5300,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5300,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5300,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 5254,
											"end": 5300,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5327,
											"end": 5328,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5318,
											"end": 5324,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5318,
											"end": 5328,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5310,
											"end": 5362,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 5310,
											"end": 5362,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5310,
											"end": 5362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5310,
											"end": 5362,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5310,
											"end": 5362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5310,
											"end": 5362,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5310,
											"end": 5362,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5310,
											"end": 5362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5310,
											"end": 5362,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5310,
											"end": 5362,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 5310,
											"end": 5362,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5310,
											"end": 5362,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 5310,
											"end": 5362,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5310,
											"end": 5362,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 5310,
											"end": 5362,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5310,
											"end": 5362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5310,
											"end": 5362,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5310,
											"end": 5362,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5310,
											"end": 5362,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5310,
											"end": 5362,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5310,
											"end": 5362,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5310,
											"end": 5362,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5310,
											"end": 5362,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 5310,
											"end": 5362,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5396,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 5380,
											"end": 5413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5397,
											"end": 5412,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5413,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5413,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5413,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5413,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5380,
											"end": 5413,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5413,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5413,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5413,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5380,
											"end": 5413,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5413,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5413,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5413,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5413,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5380,
											"end": 5413,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5413,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5413,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5380,
											"end": 5413,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5372,
											"end": 5442,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 5372,
											"end": 5442,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5372,
											"end": 5442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5372,
											"end": 5442,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5372,
											"end": 5442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5372,
											"end": 5442,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5372,
											"end": 5442,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5372,
											"end": 5442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5372,
											"end": 5442,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5372,
											"end": 5442,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 5372,
											"end": 5442,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5372,
											"end": 5442,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 5372,
											"end": 5442,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5372,
											"end": 5442,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 5372,
											"end": 5442,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5372,
											"end": 5442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5372,
											"end": 5442,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5372,
											"end": 5442,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5372,
											"end": 5442,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5372,
											"end": 5442,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5372,
											"end": 5442,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5372,
											"end": 5442,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5372,
											"end": 5442,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 5372,
											"end": 5442,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5475,
											"end": 5481,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5453,
											"end": 5471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5468,
											"end": 5470,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5453,
											"end": 5471,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5453,
											"end": 5471,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5471,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5471,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5453,
											"end": 5471,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5471,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5471,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5471,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5453,
											"end": 5471,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5453,
											"end": 5471,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5453,
											"end": 5481,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5481,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5481,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5481,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 5453,
											"end": 5481,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5481,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5481,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 5453,
											"end": 5481,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5481,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 5453,
											"end": 5481,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5481,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5481,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5481,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5481,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5481,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5481,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5481,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5491,
											"end": 5521,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 5497,
											"end": 5512,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5514,
											"end": 5520,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5491,
											"end": 5496,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 5491,
											"end": 5521,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5491,
											"end": 5521,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 5491,
											"end": 5521,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 8723,
											"end": 8728,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8730,
											"end": 8737,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8739,
											"end": 8744,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8746,
											"end": 8750,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8714,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 8714,
											"end": 8751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "tag",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8630,
											"end": 8758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10418,
											"end": 10442,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 10455,
											"end": 10460,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10462,
											"end": 10469,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10445,
											"end": 10454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 10445,
											"end": 10470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "tag",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10503,
											"end": 10520,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10484,
											"end": 10500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10484,
											"end": 10520,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10559,
											"end": 10564,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10540,
											"end": 10556,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10540,
											"end": 10564,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10618,
											"end": 10625,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10643,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10645,
											"end": 10650,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 4,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 10591,
											"end": 10651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "tag",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "tag",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 10716,
											"end": 10721,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10730,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10751,
											"end": 10756,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10732,
											"end": 10748,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10758,
											"end": 10763,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 10707,
											"end": 10764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "tag",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "tag",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10408,
											"end": 10795,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10319,
											"end": 10795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5396,
											"end": 5397,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5380,
											"end": 5384,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5448,
											"end": 5449,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 5421,
											"end": 5451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "tag",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "tag",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5489,
											"end": 5490,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5475,
											"end": 5477,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5543,
											"end": 5544,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 5514,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "tag",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "tag",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 5574,
											"end": 5578,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5580,
											"end": 5582,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5584,
											"end": 5589,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5566,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 5566,
											"end": 5590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "tag",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5297,
											"end": 5597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 2530,
											"end": 2540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2530,
											"end": 2542,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2521,
											"end": 2543,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7977,
											"end": 7978,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7958,
											"end": 7965,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "343"
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8029,
											"end": 8030,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 8002,
											"end": 8032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "tag",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "tag",
											"source": 4,
											"value": "343"
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8052,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8077,
											"end": 8078,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8081,
											"end": 8086,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8052,
											"end": 8059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 8052,
											"end": 8087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8052,
											"end": 8087,
											"name": "tag",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 8052,
											"end": 8087,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7888,
											"end": 8094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 2281,
											"end": 2291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2281,
											"end": 2293,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2274,
											"end": 2294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2186,
											"end": 2301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7451,
											"end": 7452,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7432,
											"end": 7439,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 7476,
											"end": 7508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "tag",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "tag",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 7544,
											"end": 7545,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7548,
											"end": 7555,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7557,
											"end": 7562,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 7528,
											"end": 7563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "tag",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7362,
											"end": 7570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "tag",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9734,
											"end": 9735,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9717,
											"end": 9722,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "358"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9788,
											"end": 9789,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 4,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "359"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 9759,
											"end": 9791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "tag",
											"source": 4,
											"value": "359"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "tag",
											"source": 4,
											"value": "358"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9834,
											"end": 9835,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9815,
											"end": 9822,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "360"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9887,
											"end": 9888,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 4,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "361"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 9859,
											"end": 9890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "tag",
											"source": 4,
											"value": "361"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "tag",
											"source": 4,
											"value": "360"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9940,
											"end": 9945,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9921,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9927,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9929,
											"end": 9936,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9959,
											"end": 9968,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "362"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10005,
											"end": 10012,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9998,
											"end": 10003,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10014,
											"end": 10019,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "363"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 9989,
											"end": 10020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "tag",
											"source": 4,
											"value": "363"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "tag",
											"source": 4,
											"value": "362"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 10037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "tag",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6017,
											"end": 6018,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6001,
											"end": 6005,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "365"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6153,
											"end": 6158,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "366"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 6137,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "tag",
											"source": 4,
											"value": "366"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "367"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 4,
											"value": "365"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6189,
											"end": 6208,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6220,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6258,
											"end": 6263,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6244,
											"end": 6255,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "368"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6315,
											"end": 6319,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6334,
											"end": 6339,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 4,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 6290,
											"end": 6340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "tag",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "tag",
											"source": 4,
											"value": "368"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6507,
											"end": 6512,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6504,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6484,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6485,
											"end": 6489,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6175,
											"end": 6537,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 4,
											"value": "367"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6565,
											"end": 6566,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6551,
											"end": 6553,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "370"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6730,
											"end": 6735,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "371"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 4,
											"value": "370"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6942,
											"end": 6947,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6934,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6935,
											"end": 6937,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 4,
											"value": "371"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7004,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6996,
											"end": 7000,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7006,
											"end": 7011,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "372"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 6987,
											"end": 7012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "tag",
											"source": 4,
											"value": "372"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5912,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2011,
											"end": 2019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "tag",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 2003,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1837,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "tag",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 1828,
											"end": 1866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1767,
											"end": 1873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1349,
											"end": 1424,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 1349,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1382,
											"end": 1388,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1417,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1399,
											"end": 1418,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1399,
											"end": 1418,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1349,
											"end": 1424,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1349,
											"end": 1424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1553,
											"end": 1670,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 1553,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1662,
											"end": 1663,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1659,
											"end": 1660,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1652,
											"end": 1664,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 3915,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 3798,
											"end": 3915,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3907,
											"end": 3908,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3904,
											"end": 3905,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3897,
											"end": 3909,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3921,
											"end": 4038,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 3921,
											"end": 4038,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4030,
											"end": 4031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4027,
											"end": 4028,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4020,
											"end": 4032,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4044,
											"end": 4224,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 4044,
											"end": 4224,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4092,
											"end": 4169,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4089,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4082,
											"end": 4170,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4189,
											"end": 4193,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 4186,
											"end": 4187,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4179,
											"end": 4194,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4213,
											"end": 4217,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4210,
											"end": 4211,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4203,
											"end": 4218,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4511,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 4230,
											"end": 4511,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4313,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 4335,
											"end": 4339,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4313,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 4313,
											"end": 4340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4313,
											"end": 4340,
											"name": "tag",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 4313,
											"end": 4340,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4305,
											"end": 4311,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4301,
											"end": 4341,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4443,
											"end": 4449,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4431,
											"end": 4441,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4428,
											"end": 4450,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4407,
											"end": 4425,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4395,
											"end": 4405,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4392,
											"end": 4426,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4389,
											"end": 4451,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4386,
											"end": 4474,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4386,
											"end": 4474,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 4386,
											"end": 4474,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4454,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 4454,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 4454,
											"end": 4472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4454,
											"end": 4472,
											"name": "tag",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 4454,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4386,
											"end": 4474,
											"name": "tag",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 4386,
											"end": 4474,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4494,
											"end": 4504,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4490,
											"end": 4492,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4483,
											"end": 4505,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4273,
											"end": 4511,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4511,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4511,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4517,
											"end": 4646,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 4517,
											"end": 4646,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4551,
											"end": 4557,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4578,
											"end": 4598,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 4578,
											"end": 4598,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 4578,
											"end": 4598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4578,
											"end": 4598,
											"name": "tag",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 4578,
											"end": 4598,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4568,
											"end": 4598,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4568,
											"end": 4598,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4607,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 4635,
											"end": 4639,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4627,
											"end": 4633,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4607,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 4607,
											"end": 4640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4607,
											"end": 4640,
											"name": "tag",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 4607,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4517,
											"end": 4646,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4517,
											"end": 4646,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4517,
											"end": 4646,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4517,
											"end": 4646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4652,
											"end": 4960,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 4652,
											"end": 4960,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4714,
											"end": 4718,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4804,
											"end": 4822,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4796,
											"end": 4802,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4823,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4790,
											"end": 4846,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4790,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 4790,
											"end": 4846,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4826,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 4826,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 4826,
											"end": 4844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4826,
											"end": 4844,
											"name": "tag",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 4826,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4790,
											"end": 4846,
											"name": "tag",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 4790,
											"end": 4846,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4864,
											"end": 4893,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 4886,
											"end": 4892,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4864,
											"end": 4893,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 4864,
											"end": 4893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4864,
											"end": 4893,
											"name": "tag",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 4864,
											"end": 4893,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4856,
											"end": 4893,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4856,
											"end": 4893,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4948,
											"end": 4952,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4942,
											"end": 4946,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4938,
											"end": 4953,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4930,
											"end": 4953,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4930,
											"end": 4953,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4652,
											"end": 4960,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4652,
											"end": 4960,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4652,
											"end": 4960,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4652,
											"end": 4960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4966,
											"end": 5112,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 4966,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5063,
											"end": 5069,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5058,
											"end": 5061,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5053,
											"end": 5056,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5040,
											"end": 5070,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 5104,
											"end": 5105,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5095,
											"end": 5101,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5090,
											"end": 5093,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5102,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5079,
											"end": 5106,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4966,
											"end": 5112,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4966,
											"end": 5112,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4966,
											"end": 5112,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4966,
											"end": 5112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5118,
											"end": 5543,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 5118,
											"end": 5543,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5196,
											"end": 5201,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5221,
											"end": 5287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 5237,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 5279,
											"end": 5285,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5237,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 5237,
											"end": 5286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5237,
											"end": 5286,
											"name": "tag",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 5237,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5221,
											"end": 5287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 5221,
											"end": 5287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5221,
											"end": 5287,
											"name": "tag",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 5221,
											"end": 5287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5212,
											"end": 5287,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5212,
											"end": 5287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5310,
											"end": 5316,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5303,
											"end": 5308,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5296,
											"end": 5317,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5348,
											"end": 5352,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5346,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5337,
											"end": 5353,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5386,
											"end": 5389,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5377,
											"end": 5383,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5372,
											"end": 5375,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5368,
											"end": 5384,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5365,
											"end": 5390,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5362,
											"end": 5474,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5362,
											"end": 5474,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 5362,
											"end": 5474,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5393,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 5393,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 5393,
											"end": 5472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5393,
											"end": 5472,
											"name": "tag",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 5393,
											"end": 5472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5362,
											"end": 5474,
											"name": "tag",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 5362,
											"end": 5474,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5483,
											"end": 5537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 5530,
											"end": 5536,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5525,
											"end": 5528,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5520,
											"end": 5523,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5483,
											"end": 5537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 5483,
											"end": 5537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5483,
											"end": 5537,
											"name": "tag",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 5483,
											"end": 5537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5543,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5118,
											"end": 5543,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5118,
											"end": 5543,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5118,
											"end": 5543,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5118,
											"end": 5543,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5118,
											"end": 5543,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5118,
											"end": 5543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5563,
											"end": 5903,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 5563,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5619,
											"end": 5624,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5668,
											"end": 5671,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5661,
											"end": 5665,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5653,
											"end": 5659,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5649,
											"end": 5666,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5645,
											"end": 5672,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5635,
											"end": 5757,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 5635,
											"end": 5757,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5676,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 5676,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 5676,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5676,
											"end": 5755,
											"name": "tag",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 5676,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5635,
											"end": 5757,
											"name": "tag",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 5635,
											"end": 5757,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5793,
											"end": 5799,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5780,
											"end": 5800,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5818,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 5893,
											"end": 5896,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5885,
											"end": 5891,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5878,
											"end": 5882,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5870,
											"end": 5876,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5866,
											"end": 5883,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5818,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 5818,
											"end": 5897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5818,
											"end": 5897,
											"name": "tag",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 5818,
											"end": 5897,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5809,
											"end": 5897,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5809,
											"end": 5897,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5903,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5563,
											"end": 5903,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5563,
											"end": 5903,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5563,
											"end": 5903,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5563,
											"end": 5903,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5563,
											"end": 5903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5909,
											"end": 6563,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 5909,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5987,
											"end": 5993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5995,
											"end": 6001,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6044,
											"end": 6046,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6032,
											"end": 6041,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6023,
											"end": 6030,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6019,
											"end": 6042,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6015,
											"end": 6047,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6012,
											"end": 6131,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6012,
											"end": 6131,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 6012,
											"end": 6131,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6050,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 6050,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 6050,
											"end": 6129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6050,
											"end": 6129,
											"name": "tag",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 6050,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6012,
											"end": 6131,
											"name": "tag",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 6012,
											"end": 6131,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6170,
											"end": 6171,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6195,
											"end": 6248,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "534"
										},
										{
											"begin": 6240,
											"end": 6247,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6231,
											"end": 6237,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6220,
											"end": 6229,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6238,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6195,
											"end": 6248,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 6195,
											"end": 6248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6195,
											"end": 6248,
											"name": "tag",
											"source": 8,
											"value": "534"
										},
										{
											"begin": 6195,
											"end": 6248,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6185,
											"end": 6248,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6185,
											"end": 6248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6141,
											"end": 6258,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6325,
											"end": 6327,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6314,
											"end": 6323,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6310,
											"end": 6328,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6297,
											"end": 6329,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6356,
											"end": 6374,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6348,
											"end": 6354,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 6375,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6342,
											"end": 6459,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6342,
											"end": 6459,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 6342,
											"end": 6459,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6378,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 6378,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 6378,
											"end": 6457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6378,
											"end": 6457,
											"name": "tag",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 6378,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6342,
											"end": 6459,
											"name": "tag",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 6342,
											"end": 6459,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6483,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 6538,
											"end": 6545,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6529,
											"end": 6535,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6518,
											"end": 6527,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6514,
											"end": 6536,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6483,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 6483,
											"end": 6546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6483,
											"end": 6546,
											"name": "tag",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 6483,
											"end": 6546,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6473,
											"end": 6546,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6473,
											"end": 6546,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6268,
											"end": 6556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5909,
											"end": 6563,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5909,
											"end": 6563,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5909,
											"end": 6563,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5909,
											"end": 6563,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5909,
											"end": 6563,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5909,
											"end": 6563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6569,
											"end": 7188,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 6569,
											"end": 7188,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6646,
											"end": 6652,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6654,
											"end": 6660,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6662,
											"end": 6668,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6711,
											"end": 6713,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6699,
											"end": 6708,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6690,
											"end": 6697,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6686,
											"end": 6709,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6682,
											"end": 6714,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6679,
											"end": 6798,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6679,
											"end": 6798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 6679,
											"end": 6798,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6717,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 6717,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 6717,
											"end": 6796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6717,
											"end": 6796,
											"name": "tag",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 6717,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6679,
											"end": 6798,
											"name": "tag",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 6679,
											"end": 6798,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6837,
											"end": 6838,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6862,
											"end": 6915,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 6907,
											"end": 6914,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6898,
											"end": 6904,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6887,
											"end": 6896,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 6883,
											"end": 6905,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6862,
											"end": 6915,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 6862,
											"end": 6915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6862,
											"end": 6915,
											"name": "tag",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 6862,
											"end": 6915,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6852,
											"end": 6915,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6852,
											"end": 6915,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6808,
											"end": 6925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6964,
											"end": 6966,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6990,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 7035,
											"end": 7042,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7026,
											"end": 7032,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7015,
											"end": 7024,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7011,
											"end": 7033,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6990,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 6990,
											"end": 7043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6990,
											"end": 7043,
											"name": "tag",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 6990,
											"end": 7043,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6980,
											"end": 7043,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6980,
											"end": 7043,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 7053,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7092,
											"end": 7094,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7118,
											"end": 7171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 7163,
											"end": 7170,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7154,
											"end": 7160,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7143,
											"end": 7152,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7139,
											"end": 7161,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7118,
											"end": 7171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 7118,
											"end": 7171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7118,
											"end": 7171,
											"name": "tag",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 7118,
											"end": 7171,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7108,
											"end": 7171,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7108,
											"end": 7171,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7063,
											"end": 7181,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6569,
											"end": 7188,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6569,
											"end": 7188,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6569,
											"end": 7188,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6569,
											"end": 7188,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6569,
											"end": 7188,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6569,
											"end": 7188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7194,
											"end": 7280,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 7194,
											"end": 7280,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7229,
											"end": 7236,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7269,
											"end": 7273,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 7262,
											"end": 7267,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7258,
											"end": 7274,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7247,
											"end": 7274,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7247,
											"end": 7274,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7194,
											"end": 7280,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7194,
											"end": 7280,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7194,
											"end": 7280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7194,
											"end": 7280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7286,
											"end": 7398,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 7286,
											"end": 7398,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7369,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "546"
										},
										{
											"begin": 7385,
											"end": 7390,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7369,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 7369,
											"end": 7391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7369,
											"end": 7391,
											"name": "tag",
											"source": 8,
											"value": "546"
										},
										{
											"begin": 7369,
											"end": 7391,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7364,
											"end": 7367,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7357,
											"end": 7392,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7286,
											"end": 7398,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7286,
											"end": 7398,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7286,
											"end": 7398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7404,
											"end": 7618,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 7404,
											"end": 7618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7493,
											"end": 7497,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7531,
											"end": 7533,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7520,
											"end": 7529,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7516,
											"end": 7534,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7508,
											"end": 7534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7508,
											"end": 7534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7544,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 7608,
											"end": 7609,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7597,
											"end": 7606,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7584,
											"end": 7590,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7544,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 7544,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7544,
											"end": 7611,
											"name": "tag",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 7544,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7404,
											"end": 7618,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7404,
											"end": 7618,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7404,
											"end": 7618,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7404,
											"end": 7618,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7404,
											"end": 7618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7624,
											"end": 7953,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 7624,
											"end": 7953,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7683,
											"end": 7689,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7732,
											"end": 7734,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7720,
											"end": 7729,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7718,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7707,
											"end": 7730,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7703,
											"end": 7735,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 7700,
											"end": 7819,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7700,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "550"
										},
										{
											"begin": 7700,
											"end": 7819,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 7817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 7738,
											"end": 7817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 7738,
											"end": 7817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 7817,
											"name": "tag",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 7738,
											"end": 7817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7700,
											"end": 7819,
											"name": "tag",
											"source": 8,
											"value": "550"
										},
										{
											"begin": 7700,
											"end": 7819,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7858,
											"end": 7859,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7883,
											"end": 7936,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "552"
										},
										{
											"begin": 7928,
											"end": 7935,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7919,
											"end": 7925,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7908,
											"end": 7917,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7904,
											"end": 7926,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7883,
											"end": 7936,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 7883,
											"end": 7936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7883,
											"end": 7936,
											"name": "tag",
											"source": 8,
											"value": "552"
										},
										{
											"begin": 7883,
											"end": 7936,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7873,
											"end": 7936,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7873,
											"end": 7936,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7829,
											"end": 7946,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7624,
											"end": 7953,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7624,
											"end": 7953,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7624,
											"end": 7953,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7624,
											"end": 7953,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7624,
											"end": 7953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7959,
											"end": 8288,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 7959,
											"end": 8288,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8018,
											"end": 8024,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8067,
											"end": 8069,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8055,
											"end": 8064,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8046,
											"end": 8053,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8042,
											"end": 8065,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8038,
											"end": 8070,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 8035,
											"end": 8154,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8035,
											"end": 8154,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "554"
										},
										{
											"begin": 8035,
											"end": 8154,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8073,
											"end": 8152,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "555"
										},
										{
											"begin": 8073,
											"end": 8152,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 8073,
											"end": 8152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8073,
											"end": 8152,
											"name": "tag",
											"source": 8,
											"value": "555"
										},
										{
											"begin": 8073,
											"end": 8152,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8035,
											"end": 8154,
											"name": "tag",
											"source": 8,
											"value": "554"
										},
										{
											"begin": 8035,
											"end": 8154,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8193,
											"end": 8194,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8218,
											"end": 8271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "556"
										},
										{
											"begin": 8263,
											"end": 8270,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8254,
											"end": 8260,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8243,
											"end": 8252,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8261,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8218,
											"end": 8271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 8218,
											"end": 8271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8218,
											"end": 8271,
											"name": "tag",
											"source": 8,
											"value": "556"
										},
										{
											"begin": 8218,
											"end": 8271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8208,
											"end": 8271,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8208,
											"end": 8271,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8164,
											"end": 8281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7959,
											"end": 8288,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7959,
											"end": 8288,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7959,
											"end": 8288,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7959,
											"end": 8288,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7959,
											"end": 8288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8294,
											"end": 8803,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 8294,
											"end": 8803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8363,
											"end": 8369,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8412,
											"end": 8414,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8400,
											"end": 8409,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8391,
											"end": 8398,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8387,
											"end": 8410,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8383,
											"end": 8415,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8499,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "558"
										},
										{
											"begin": 8380,
											"end": 8499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8418,
											"end": 8497,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "559"
										},
										{
											"begin": 8418,
											"end": 8497,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 8418,
											"end": 8497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8418,
											"end": 8497,
											"name": "tag",
											"source": 8,
											"value": "559"
										},
										{
											"begin": 8418,
											"end": 8497,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8499,
											"name": "tag",
											"source": 8,
											"value": "558"
										},
										{
											"begin": 8380,
											"end": 8499,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8566,
											"end": 8567,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8555,
											"end": 8564,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8551,
											"end": 8568,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8538,
											"end": 8569,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 8596,
											"end": 8614,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8588,
											"end": 8594,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8585,
											"end": 8615,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8582,
											"end": 8699,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8582,
											"end": 8699,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "560"
										},
										{
											"begin": 8582,
											"end": 8699,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8618,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "561"
										},
										{
											"begin": 8618,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 8618,
											"end": 8697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8618,
											"end": 8697,
											"name": "tag",
											"source": 8,
											"value": "561"
										},
										{
											"begin": 8618,
											"end": 8697,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8582,
											"end": 8699,
											"name": "tag",
											"source": 8,
											"value": "560"
										},
										{
											"begin": 8582,
											"end": 8699,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8723,
											"end": 8786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "562"
										},
										{
											"begin": 8778,
											"end": 8785,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8769,
											"end": 8775,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8758,
											"end": 8767,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8754,
											"end": 8776,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8723,
											"end": 8786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 8723,
											"end": 8786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8723,
											"end": 8786,
											"name": "tag",
											"source": 8,
											"value": "562"
										},
										{
											"begin": 8723,
											"end": 8786,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8713,
											"end": 8786,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8713,
											"end": 8786,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8509,
											"end": 8796,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8294,
											"end": 8803,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8294,
											"end": 8803,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8294,
											"end": 8803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8294,
											"end": 8803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8294,
											"end": 8803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8809,
											"end": 8927,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 8809,
											"end": 8927,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8896,
											"end": 8920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "564"
										},
										{
											"begin": 8914,
											"end": 8919,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8896,
											"end": 8920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 8896,
											"end": 8920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8896,
											"end": 8920,
											"name": "tag",
											"source": 8,
											"value": "564"
										},
										{
											"begin": 8896,
											"end": 8920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8891,
											"end": 8894,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8884,
											"end": 8921,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8809,
											"end": 8927,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8809,
											"end": 8927,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8809,
											"end": 8927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 9155,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 8933,
											"end": 9155,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9026,
											"end": 9030,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9064,
											"end": 9066,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9053,
											"end": 9062,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9049,
											"end": 9067,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9041,
											"end": 9067,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9041,
											"end": 9067,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9077,
											"end": 9148,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 9145,
											"end": 9146,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9134,
											"end": 9143,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9130,
											"end": 9147,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9121,
											"end": 9127,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9077,
											"end": 9148,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 9077,
											"end": 9148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9077,
											"end": 9148,
											"name": "tag",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 9077,
											"end": 9148,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 9155,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 9155,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 9155,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 9155,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 9155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9161,
											"end": 10286,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 9161,
											"end": 10286,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9267,
											"end": 9273,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9275,
											"end": 9281,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9283,
											"end": 9289,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9291,
											"end": 9297,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9340,
											"end": 9343,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 9328,
											"end": 9337,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9319,
											"end": 9326,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 9315,
											"end": 9338,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9311,
											"end": 9344,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 9308,
											"end": 9428,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9308,
											"end": 9428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "568"
										},
										{
											"begin": 9308,
											"end": 9428,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9347,
											"end": 9426,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "569"
										},
										{
											"begin": 9347,
											"end": 9426,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 9347,
											"end": 9426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9347,
											"end": 9426,
											"name": "tag",
											"source": 8,
											"value": "569"
										},
										{
											"begin": 9347,
											"end": 9426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9308,
											"end": 9428,
											"name": "tag",
											"source": 8,
											"value": "568"
										},
										{
											"begin": 9308,
											"end": 9428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9495,
											"end": 9496,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9484,
											"end": 9493,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9480,
											"end": 9497,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9467,
											"end": 9498,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9517,
											"end": 9523,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9514,
											"end": 9544,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9511,
											"end": 9628,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9511,
											"end": 9628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "570"
										},
										{
											"begin": 9511,
											"end": 9628,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9547,
											"end": 9626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "571"
										},
										{
											"begin": 9547,
											"end": 9626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 9547,
											"end": 9626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9547,
											"end": 9626,
											"name": "tag",
											"source": 8,
											"value": "571"
										},
										{
											"begin": 9547,
											"end": 9626,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9511,
											"end": 9628,
											"name": "tag",
											"source": 8,
											"value": "570"
										},
										{
											"begin": 9511,
											"end": 9628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9652,
											"end": 9715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "572"
										},
										{
											"begin": 9707,
											"end": 9714,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 9698,
											"end": 9704,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9687,
											"end": 9696,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 9683,
											"end": 9705,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9652,
											"end": 9715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 9652,
											"end": 9715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9652,
											"end": 9715,
											"name": "tag",
											"source": 8,
											"value": "572"
										},
										{
											"begin": 9652,
											"end": 9715,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9642,
											"end": 9715,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 9642,
											"end": 9715,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9438,
											"end": 9725,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9792,
											"end": 9794,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9781,
											"end": 9790,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9777,
											"end": 9795,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9764,
											"end": 9796,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 9823,
											"end": 9841,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9821,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9812,
											"end": 9842,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9809,
											"end": 9926,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9809,
											"end": 9926,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "573"
										},
										{
											"begin": 9809,
											"end": 9926,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9845,
											"end": 9924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "574"
										},
										{
											"begin": 9845,
											"end": 9924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 9845,
											"end": 9924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9845,
											"end": 9924,
											"name": "tag",
											"source": 8,
											"value": "574"
										},
										{
											"begin": 9845,
											"end": 9924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9809,
											"end": 9926,
											"name": "tag",
											"source": 8,
											"value": "573"
										},
										{
											"begin": 9809,
											"end": 9926,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9950,
											"end": 10013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "575"
										},
										{
											"begin": 10005,
											"end": 10012,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 9996,
											"end": 10002,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9985,
											"end": 9994,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 9981,
											"end": 10003,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9950,
											"end": 10013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 9950,
											"end": 10013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9950,
											"end": 10013,
											"name": "tag",
											"source": 8,
											"value": "575"
										},
										{
											"begin": 9950,
											"end": 10013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9940,
											"end": 10013,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9940,
											"end": 10013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9735,
											"end": 10023,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10062,
											"end": 10064,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10088,
											"end": 10141,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "576"
										},
										{
											"begin": 10133,
											"end": 10140,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 10124,
											"end": 10130,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10113,
											"end": 10122,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 10109,
											"end": 10131,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10088,
											"end": 10141,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 10088,
											"end": 10141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10088,
											"end": 10141,
											"name": "tag",
											"source": 8,
											"value": "576"
										},
										{
											"begin": 10088,
											"end": 10141,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10078,
											"end": 10141,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10078,
											"end": 10141,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10033,
											"end": 10151,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10190,
											"end": 10192,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 10216,
											"end": 10269,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "577"
										},
										{
											"begin": 10261,
											"end": 10268,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 10252,
											"end": 10258,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10241,
											"end": 10250,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 10237,
											"end": 10259,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10216,
											"end": 10269,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 10216,
											"end": 10269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10216,
											"end": 10269,
											"name": "tag",
											"source": 8,
											"value": "577"
										},
										{
											"begin": 10216,
											"end": 10269,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10206,
											"end": 10269,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10206,
											"end": 10269,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10161,
											"end": 10279,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9161,
											"end": 10286,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9161,
											"end": 10286,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 9161,
											"end": 10286,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9161,
											"end": 10286,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 9161,
											"end": 10286,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9161,
											"end": 10286,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9161,
											"end": 10286,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9161,
											"end": 10286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10292,
											"end": 10946,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 10292,
											"end": 10946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10370,
											"end": 10376,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10378,
											"end": 10384,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10427,
											"end": 10429,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10415,
											"end": 10424,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10406,
											"end": 10413,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10402,
											"end": 10425,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10398,
											"end": 10430,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 10395,
											"end": 10514,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10395,
											"end": 10514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "579"
										},
										{
											"begin": 10395,
											"end": 10514,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10433,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "580"
										},
										{
											"begin": 10433,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 10433,
											"end": 10512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10433,
											"end": 10512,
											"name": "tag",
											"source": 8,
											"value": "580"
										},
										{
											"begin": 10433,
											"end": 10512,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10395,
											"end": 10514,
											"name": "tag",
											"source": 8,
											"value": "579"
										},
										{
											"begin": 10395,
											"end": 10514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10581,
											"end": 10582,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10570,
											"end": 10579,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10566,
											"end": 10583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10553,
											"end": 10584,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 10611,
											"end": 10629,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10603,
											"end": 10609,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10600,
											"end": 10630,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10597,
											"end": 10714,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10597,
											"end": 10714,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "581"
										},
										{
											"begin": 10597,
											"end": 10714,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10633,
											"end": 10712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "582"
										},
										{
											"begin": 10633,
											"end": 10712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 10633,
											"end": 10712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10633,
											"end": 10712,
											"name": "tag",
											"source": 8,
											"value": "582"
										},
										{
											"begin": 10633,
											"end": 10712,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10597,
											"end": 10714,
											"name": "tag",
											"source": 8,
											"value": "581"
										},
										{
											"begin": 10597,
											"end": 10714,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10738,
											"end": 10801,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "583"
										},
										{
											"begin": 10793,
											"end": 10800,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10784,
											"end": 10790,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10773,
											"end": 10782,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10769,
											"end": 10791,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10738,
											"end": 10801,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 10738,
											"end": 10801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10738,
											"end": 10801,
											"name": "tag",
											"source": 8,
											"value": "583"
										},
										{
											"begin": 10738,
											"end": 10801,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10728,
											"end": 10801,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10728,
											"end": 10801,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10524,
											"end": 10811,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10850,
											"end": 10852,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10876,
											"end": 10929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "584"
										},
										{
											"begin": 10921,
											"end": 10928,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10912,
											"end": 10918,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10901,
											"end": 10910,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10897,
											"end": 10919,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10876,
											"end": 10929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 10876,
											"end": 10929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10876,
											"end": 10929,
											"name": "tag",
											"source": 8,
											"value": "584"
										},
										{
											"begin": 10876,
											"end": 10929,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10866,
											"end": 10929,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10866,
											"end": 10929,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10821,
											"end": 10939,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10292,
											"end": 10946,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10292,
											"end": 10946,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10292,
											"end": 10946,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10292,
											"end": 10946,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10292,
											"end": 10946,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10292,
											"end": 10946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10952,
											"end": 11426,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 10952,
											"end": 11426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11020,
											"end": 11026,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11028,
											"end": 11034,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11077,
											"end": 11079,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11065,
											"end": 11074,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11056,
											"end": 11063,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11052,
											"end": 11075,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11048,
											"end": 11080,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 11045,
											"end": 11164,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11045,
											"end": 11164,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "586"
										},
										{
											"begin": 11045,
											"end": 11164,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11083,
											"end": 11162,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "587"
										},
										{
											"begin": 11083,
											"end": 11162,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 11083,
											"end": 11162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11083,
											"end": 11162,
											"name": "tag",
											"source": 8,
											"value": "587"
										},
										{
											"begin": 11083,
											"end": 11162,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11045,
											"end": 11164,
											"name": "tag",
											"source": 8,
											"value": "586"
										},
										{
											"begin": 11045,
											"end": 11164,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11203,
											"end": 11204,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11228,
											"end": 11281,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "588"
										},
										{
											"begin": 11273,
											"end": 11280,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11264,
											"end": 11270,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11253,
											"end": 11262,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11249,
											"end": 11271,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11228,
											"end": 11281,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 11228,
											"end": 11281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11228,
											"end": 11281,
											"name": "tag",
											"source": 8,
											"value": "588"
										},
										{
											"begin": 11228,
											"end": 11281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11218,
											"end": 11281,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11218,
											"end": 11281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11174,
											"end": 11291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11330,
											"end": 11332,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11356,
											"end": 11409,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "589"
										},
										{
											"begin": 11401,
											"end": 11408,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11392,
											"end": 11398,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11381,
											"end": 11390,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11377,
											"end": 11399,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11356,
											"end": 11409,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 11356,
											"end": 11409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11356,
											"end": 11409,
											"name": "tag",
											"source": 8,
											"value": "589"
										},
										{
											"begin": 11356,
											"end": 11409,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11346,
											"end": 11409,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11346,
											"end": 11409,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11301,
											"end": 11419,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10952,
											"end": 11426,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10952,
											"end": 11426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10952,
											"end": 11426,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10952,
											"end": 11426,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10952,
											"end": 11426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10952,
											"end": 11426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11432,
											"end": 12051,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 11432,
											"end": 12051,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11509,
											"end": 11515,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11517,
											"end": 11523,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11525,
											"end": 11531,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11574,
											"end": 11576,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 11562,
											"end": 11571,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11553,
											"end": 11560,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11549,
											"end": 11572,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11545,
											"end": 11577,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 11542,
											"end": 11661,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11542,
											"end": 11661,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "591"
										},
										{
											"begin": 11542,
											"end": 11661,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11580,
											"end": 11659,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "592"
										},
										{
											"begin": 11580,
											"end": 11659,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 11580,
											"end": 11659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11580,
											"end": 11659,
											"name": "tag",
											"source": 8,
											"value": "592"
										},
										{
											"begin": 11580,
											"end": 11659,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11542,
											"end": 11661,
											"name": "tag",
											"source": 8,
											"value": "591"
										},
										{
											"begin": 11542,
											"end": 11661,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11700,
											"end": 11701,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11725,
											"end": 11778,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "593"
										},
										{
											"begin": 11770,
											"end": 11777,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11761,
											"end": 11767,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11750,
											"end": 11759,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 11746,
											"end": 11768,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11725,
											"end": 11778,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 11725,
											"end": 11778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11725,
											"end": 11778,
											"name": "tag",
											"source": 8,
											"value": "593"
										},
										{
											"begin": 11725,
											"end": 11778,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11715,
											"end": 11778,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 11715,
											"end": 11778,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11671,
											"end": 11788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11827,
											"end": 11829,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11853,
											"end": 11906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "594"
										},
										{
											"begin": 11898,
											"end": 11905,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11889,
											"end": 11895,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11878,
											"end": 11887,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 11874,
											"end": 11896,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11853,
											"end": 11906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 11853,
											"end": 11906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11853,
											"end": 11906,
											"name": "tag",
											"source": 8,
											"value": "594"
										},
										{
											"begin": 11853,
											"end": 11906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11843,
											"end": 11906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11843,
											"end": 11906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11798,
											"end": 11916,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11955,
											"end": 11957,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11981,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "595"
										},
										{
											"begin": 12026,
											"end": 12033,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 12017,
											"end": 12023,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12006,
											"end": 12015,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 12002,
											"end": 12024,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11981,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 11981,
											"end": 12034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11981,
											"end": 12034,
											"name": "tag",
											"source": 8,
											"value": "595"
										},
										{
											"begin": 11981,
											"end": 12034,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11971,
											"end": 12034,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11971,
											"end": 12034,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11926,
											"end": 12044,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11432,
											"end": 12051,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11432,
											"end": 12051,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11432,
											"end": 12051,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11432,
											"end": 12051,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11432,
											"end": 12051,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11432,
											"end": 12051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12057,
											"end": 12237,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 12057,
											"end": 12237,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12105,
											"end": 12182,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12102,
											"end": 12103,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12095,
											"end": 12183,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12202,
											"end": 12206,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 12199,
											"end": 12200,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12192,
											"end": 12207,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12226,
											"end": 12230,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 12223,
											"end": 12224,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12216,
											"end": 12231,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12243,
											"end": 12563,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 12243,
											"end": 12563,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12287,
											"end": 12293,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12324,
											"end": 12325,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 12318,
											"end": 12322,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12314,
											"end": 12326,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 12304,
											"end": 12326,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12304,
											"end": 12326,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12371,
											"end": 12372,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 12365,
											"end": 12369,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12361,
											"end": 12373,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12392,
											"end": 12410,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12382,
											"end": 12463,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "598"
										},
										{
											"begin": 12382,
											"end": 12463,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12448,
											"end": 12452,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 12440,
											"end": 12446,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12436,
											"end": 12453,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12426,
											"end": 12453,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12426,
											"end": 12453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12382,
											"end": 12463,
											"name": "tag",
											"source": 8,
											"value": "598"
										},
										{
											"begin": 12382,
											"end": 12463,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12510,
											"end": 12512,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12502,
											"end": 12508,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12499,
											"end": 12513,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 12479,
											"end": 12497,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12476,
											"end": 12514,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12473,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "599"
										},
										{
											"begin": 12473,
											"end": 12557,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12529,
											"end": 12547,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "600"
										},
										{
											"begin": 12529,
											"end": 12547,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 12529,
											"end": 12547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12529,
											"end": 12547,
											"name": "tag",
											"source": 8,
											"value": "600"
										},
										{
											"begin": 12529,
											"end": 12547,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12473,
											"end": 12557,
											"name": "tag",
											"source": 8,
											"value": "599"
										},
										{
											"begin": 12473,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12294,
											"end": 12563,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12243,
											"end": 12563,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12243,
											"end": 12563,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12243,
											"end": 12563,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12243,
											"end": 12563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12569,
											"end": 12746,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 12569,
											"end": 12746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12709,
											"end": 12738,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C69642062656E656669636961727920616464726573730000000000"
										},
										{
											"begin": 12705,
											"end": 12706,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12697,
											"end": 12703,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12693,
											"end": 12707,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12686,
											"end": 12739,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12569,
											"end": 12746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12569,
											"end": 12746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12752,
											"end": 13118,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 12752,
											"end": 13118,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12894,
											"end": 12897,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12915,
											"end": 12982,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "603"
										},
										{
											"begin": 12979,
											"end": 12981,
											"name": "PUSH",
											"source": 8,
											"value": "1B"
										},
										{
											"begin": 12974,
											"end": 12977,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12915,
											"end": 12982,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 12915,
											"end": 12982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12915,
											"end": 12982,
											"name": "tag",
											"source": 8,
											"value": "603"
										},
										{
											"begin": 12915,
											"end": 12982,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12908,
											"end": 12982,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12908,
											"end": 12982,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12991,
											"end": 13084,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "604"
										},
										{
											"begin": 13080,
											"end": 13083,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12991,
											"end": 13084,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 12991,
											"end": 13084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12991,
											"end": 13084,
											"name": "tag",
											"source": 8,
											"value": "604"
										},
										{
											"begin": 12991,
											"end": 13084,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13109,
											"end": 13111,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13104,
											"end": 13107,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13100,
											"end": 13112,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13093,
											"end": 13112,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13093,
											"end": 13112,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12752,
											"end": 13118,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12752,
											"end": 13118,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12752,
											"end": 13118,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12752,
											"end": 13118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13124,
											"end": 13543,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 13124,
											"end": 13543,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13290,
											"end": 13294,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13328,
											"end": 13330,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13317,
											"end": 13326,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13313,
											"end": 13331,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13305,
											"end": 13331,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13305,
											"end": 13331,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13377,
											"end": 13386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13371,
											"end": 13375,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13367,
											"end": 13387,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13363,
											"end": 13364,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13352,
											"end": 13361,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13348,
											"end": 13365,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13341,
											"end": 13388,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13405,
											"end": 13536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "606"
										},
										{
											"begin": 13531,
											"end": 13535,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13405,
											"end": 13536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 13405,
											"end": 13536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13405,
											"end": 13536,
											"name": "tag",
											"source": 8,
											"value": "606"
										},
										{
											"begin": 13405,
											"end": 13536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13397,
											"end": 13536,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13397,
											"end": 13536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13124,
											"end": 13543,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13124,
											"end": 13543,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13124,
											"end": 13543,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13124,
											"end": 13543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13549,
											"end": 13723,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 13549,
											"end": 13723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13689,
											"end": 13715,
											"name": "PUSH",
											"source": 8,
											"value": "43617465676F72792063616E6E6F7420626520656D7074790000000000000000"
										},
										{
											"begin": 13685,
											"end": 13686,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13677,
											"end": 13683,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13673,
											"end": 13687,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13666,
											"end": 13716,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13549,
											"end": 13723,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13549,
											"end": 13723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13729,
											"end": 14095,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 13729,
											"end": 14095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13871,
											"end": 13874,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13892,
											"end": 13959,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "609"
										},
										{
											"begin": 13956,
											"end": 13958,
											"name": "PUSH",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 13951,
											"end": 13954,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13892,
											"end": 13959,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 13892,
											"end": 13959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13892,
											"end": 13959,
											"name": "tag",
											"source": 8,
											"value": "609"
										},
										{
											"begin": 13892,
											"end": 13959,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13885,
											"end": 13959,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13885,
											"end": 13959,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13968,
											"end": 14061,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "610"
										},
										{
											"begin": 14057,
											"end": 14060,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13968,
											"end": 14061,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 13968,
											"end": 14061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13968,
											"end": 14061,
											"name": "tag",
											"source": 8,
											"value": "610"
										},
										{
											"begin": 13968,
											"end": 14061,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14086,
											"end": 14088,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14081,
											"end": 14084,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14077,
											"end": 14089,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14070,
											"end": 14089,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14070,
											"end": 14089,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13729,
											"end": 14095,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13729,
											"end": 14095,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13729,
											"end": 14095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13729,
											"end": 14095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14101,
											"end": 14520,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 14101,
											"end": 14520,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14267,
											"end": 14271,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14305,
											"end": 14307,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14294,
											"end": 14303,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14290,
											"end": 14308,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14282,
											"end": 14308,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14282,
											"end": 14308,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14354,
											"end": 14363,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14348,
											"end": 14352,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14344,
											"end": 14364,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14340,
											"end": 14341,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14329,
											"end": 14338,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14325,
											"end": 14342,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14318,
											"end": 14365,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14382,
											"end": 14513,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "612"
										},
										{
											"begin": 14508,
											"end": 14512,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14382,
											"end": 14513,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 14382,
											"end": 14513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14382,
											"end": 14513,
											"name": "tag",
											"source": 8,
											"value": "612"
										},
										{
											"begin": 14382,
											"end": 14513,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14374,
											"end": 14513,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14374,
											"end": 14513,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14101,
											"end": 14520,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14101,
											"end": 14520,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14101,
											"end": 14520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14101,
											"end": 14520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14526,
											"end": 14667,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 14526,
											"end": 14667,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14575,
											"end": 14579,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14598,
											"end": 14601,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14590,
											"end": 14601,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14590,
											"end": 14601,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14621,
											"end": 14624,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14618,
											"end": 14619,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14611,
											"end": 14625,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14655,
											"end": 14659,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14652,
											"end": 14653,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14642,
											"end": 14660,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 14634,
											"end": 14660,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14634,
											"end": 14660,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14526,
											"end": 14667,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14526,
											"end": 14667,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14526,
											"end": 14667,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14526,
											"end": 14667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14673,
											"end": 14766,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 14673,
											"end": 14766,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14710,
											"end": 14716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14757,
											"end": 14759,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14752,
											"end": 14754,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 14745,
											"end": 14750,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14741,
											"end": 14755,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14737,
											"end": 14760,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 14727,
											"end": 14760,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14727,
											"end": 14760,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14673,
											"end": 14766,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14673,
											"end": 14766,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14673,
											"end": 14766,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14673,
											"end": 14766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14772,
											"end": 14879,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 14772,
											"end": 14879,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14816,
											"end": 14824,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14866,
											"end": 14871,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14860,
											"end": 14864,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14856,
											"end": 14872,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 14835,
											"end": 14872,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14835,
											"end": 14872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14772,
											"end": 14879,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14772,
											"end": 14879,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14772,
											"end": 14879,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14772,
											"end": 14879,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14772,
											"end": 14879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14885,
											"end": 15278,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 14885,
											"end": 15278,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14954,
											"end": 14960,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15004,
											"end": 15005,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 14992,
											"end": 15002,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14988,
											"end": 15006,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 15027,
											"end": 15124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "617"
										},
										{
											"begin": 15057,
											"end": 15123,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15046,
											"end": 15055,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15027,
											"end": 15124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 15027,
											"end": 15124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15027,
											"end": 15124,
											"name": "tag",
											"source": 8,
											"value": "617"
										},
										{
											"begin": 15027,
											"end": 15124,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15145,
											"end": 15184,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "618"
										},
										{
											"begin": 15175,
											"end": 15183,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 15164,
											"end": 15173,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15145,
											"end": 15184,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 15145,
											"end": 15184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15145,
											"end": 15184,
											"name": "tag",
											"source": 8,
											"value": "618"
										},
										{
											"begin": 15145,
											"end": 15184,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15133,
											"end": 15184,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 15133,
											"end": 15184,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15217,
											"end": 15221,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15213,
											"end": 15222,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 15206,
											"end": 15211,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15202,
											"end": 15223,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15193,
											"end": 15223,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 15193,
											"end": 15223,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15266,
											"end": 15270,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15256,
											"end": 15264,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 15252,
											"end": 15271,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15245,
											"end": 15250,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15242,
											"end": 15272,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 15232,
											"end": 15272,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15232,
											"end": 15272,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14961,
											"end": 15278,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14961,
											"end": 15278,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14885,
											"end": 15278,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14885,
											"end": 15278,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14885,
											"end": 15278,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14885,
											"end": 15278,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14885,
											"end": 15278,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14885,
											"end": 15278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15284,
											"end": 15344,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 15284,
											"end": 15344,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15312,
											"end": 15315,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15333,
											"end": 15338,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15326,
											"end": 15338,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15326,
											"end": 15338,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15284,
											"end": 15344,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15284,
											"end": 15344,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15284,
											"end": 15344,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15284,
											"end": 15344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15350,
											"end": 15492,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 15350,
											"end": 15492,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15400,
											"end": 15409,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15433,
											"end": 15486,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "621"
										},
										{
											"begin": 15451,
											"end": 15485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "622"
										},
										{
											"begin": 15460,
											"end": 15484,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "623"
										},
										{
											"begin": 15478,
											"end": 15483,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15460,
											"end": 15484,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 15460,
											"end": 15484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15460,
											"end": 15484,
											"name": "tag",
											"source": 8,
											"value": "623"
										},
										{
											"begin": 15460,
											"end": 15484,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15451,
											"end": 15485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 15451,
											"end": 15485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15451,
											"end": 15485,
											"name": "tag",
											"source": 8,
											"value": "622"
										},
										{
											"begin": 15451,
											"end": 15485,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15433,
											"end": 15486,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 15433,
											"end": 15486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15433,
											"end": 15486,
											"name": "tag",
											"source": 8,
											"value": "621"
										},
										{
											"begin": 15433,
											"end": 15486,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15420,
											"end": 15486,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15420,
											"end": 15486,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15350,
											"end": 15492,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15350,
											"end": 15492,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15350,
											"end": 15492,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15350,
											"end": 15492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15498,
											"end": 15573,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 15498,
											"end": 15573,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15541,
											"end": 15544,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15562,
											"end": 15567,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15555,
											"end": 15567,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15555,
											"end": 15567,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15498,
											"end": 15573,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15498,
											"end": 15573,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15498,
											"end": 15573,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15498,
											"end": 15573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15579,
											"end": 15848,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 15579,
											"end": 15848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15689,
											"end": 15728,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "626"
										},
										{
											"begin": 15720,
											"end": 15727,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15689,
											"end": 15728,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 15689,
											"end": 15728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15689,
											"end": 15728,
											"name": "tag",
											"source": 8,
											"value": "626"
										},
										{
											"begin": 15689,
											"end": 15728,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15750,
											"end": 15841,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "627"
										},
										{
											"begin": 15799,
											"end": 15840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "628"
										},
										{
											"begin": 15823,
											"end": 15839,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15799,
											"end": 15840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 15799,
											"end": 15840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15799,
											"end": 15840,
											"name": "tag",
											"source": 8,
											"value": "628"
										},
										{
											"begin": 15799,
											"end": 15840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15791,
											"end": 15797,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15784,
											"end": 15788,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15778,
											"end": 15789,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 15750,
											"end": 15841,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 15750,
											"end": 15841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15750,
											"end": 15841,
											"name": "tag",
											"source": 8,
											"value": "627"
										},
										{
											"begin": 15750,
											"end": 15841,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15744,
											"end": 15748,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15737,
											"end": 15842,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 15655,
											"end": 15848,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15579,
											"end": 15848,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15579,
											"end": 15848,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15579,
											"end": 15848,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15579,
											"end": 15848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15854,
											"end": 15927,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 15854,
											"end": 15927,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15899,
											"end": 15902,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15854,
											"end": 15927,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15854,
											"end": 15927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15933,
											"end": 16122,
											"name": "tag",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 15933,
											"end": 16122,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16010,
											"end": 16042,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "631"
										},
										{
											"begin": 16010,
											"end": 16042,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 16010,
											"end": 16042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16010,
											"end": 16042,
											"name": "tag",
											"source": 8,
											"value": "631"
										},
										{
											"begin": 16010,
											"end": 16042,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16051,
											"end": 16116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "632"
										},
										{
											"begin": 16109,
											"end": 16115,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16101,
											"end": 16107,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16095,
											"end": 16099,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16051,
											"end": 16116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 16051,
											"end": 16116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16051,
											"end": 16116,
											"name": "tag",
											"source": 8,
											"value": "632"
										},
										{
											"begin": 16051,
											"end": 16116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15986,
											"end": 16122,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15933,
											"end": 16122,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15933,
											"end": 16122,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15933,
											"end": 16122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16128,
											"end": 16314,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 16128,
											"end": 16314,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16188,
											"end": 16308,
											"name": "tag",
											"source": 8,
											"value": "634"
										},
										{
											"begin": 16188,
											"end": 16308,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16205,
											"end": 16208,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16198,
											"end": 16203,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16195,
											"end": 16209,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 16188,
											"end": 16308,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16188,
											"end": 16308,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "636"
										},
										{
											"begin": 16188,
											"end": 16308,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16259,
											"end": 16298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "637"
										},
										{
											"begin": 16296,
											"end": 16297,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16289,
											"end": 16294,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16259,
											"end": 16298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 16259,
											"end": 16298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16259,
											"end": 16298,
											"name": "tag",
											"source": 8,
											"value": "637"
										},
										{
											"begin": 16259,
											"end": 16298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16232,
											"end": 16233,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 16225,
											"end": 16230,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16221,
											"end": 16234,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16212,
											"end": 16234,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16212,
											"end": 16234,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16188,
											"end": 16308,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "634"
										},
										{
											"begin": 16188,
											"end": 16308,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16188,
											"end": 16308,
											"name": "tag",
											"source": 8,
											"value": "636"
										},
										{
											"begin": 16188,
											"end": 16308,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16128,
											"end": 16314,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16128,
											"end": 16314,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16128,
											"end": 16314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16320,
											"end": 16863,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 16320,
											"end": 16863,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16421,
											"end": 16423,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 16416,
											"end": 16419,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16413,
											"end": 16424,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 16410,
											"end": 16856,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16410,
											"end": 16856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "639"
										},
										{
											"begin": 16410,
											"end": 16856,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16455,
											"end": 16493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "640"
										},
										{
											"begin": 16487,
											"end": 16492,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16455,
											"end": 16493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 16455,
											"end": 16493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16455,
											"end": 16493,
											"name": "tag",
											"source": 8,
											"value": "640"
										},
										{
											"begin": 16455,
											"end": 16493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16539,
											"end": 16568,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "641"
										},
										{
											"begin": 16557,
											"end": 16567,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16539,
											"end": 16568,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 16539,
											"end": 16568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16539,
											"end": 16568,
											"name": "tag",
											"source": 8,
											"value": "641"
										},
										{
											"begin": 16539,
											"end": 16568,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16529,
											"end": 16537,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16525,
											"end": 16569,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16722,
											"end": 16724,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16710,
											"end": 16720,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16707,
											"end": 16725,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 16704,
											"end": 16753,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16704,
											"end": 16753,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "642"
										},
										{
											"begin": 16704,
											"end": 16753,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16743,
											"end": 16751,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16728,
											"end": 16751,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16728,
											"end": 16751,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16704,
											"end": 16753,
											"name": "tag",
											"source": 8,
											"value": "642"
										},
										{
											"begin": 16704,
											"end": 16753,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16766,
											"end": 16846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "643"
										},
										{
											"begin": 16822,
											"end": 16844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "644"
										},
										{
											"begin": 16840,
											"end": 16843,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16822,
											"end": 16844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 16822,
											"end": 16844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16822,
											"end": 16844,
											"name": "tag",
											"source": 8,
											"value": "644"
										},
										{
											"begin": 16822,
											"end": 16844,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16812,
											"end": 16820,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16808,
											"end": 16845,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16795,
											"end": 16806,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16766,
											"end": 16846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 16766,
											"end": 16846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16766,
											"end": 16846,
											"name": "tag",
											"source": 8,
											"value": "643"
										},
										{
											"begin": 16766,
											"end": 16846,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16425,
											"end": 16856,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16425,
											"end": 16856,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16410,
											"end": 16856,
											"name": "tag",
											"source": 8,
											"value": "639"
										},
										{
											"begin": 16410,
											"end": 16856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16320,
											"end": 16863,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16320,
											"end": 16863,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16320,
											"end": 16863,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16320,
											"end": 16863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16869,
											"end": 16986,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 16869,
											"end": 16986,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16923,
											"end": 16931,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16973,
											"end": 16978,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16967,
											"end": 16971,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16963,
											"end": 16979,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 16942,
											"end": 16979,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16942,
											"end": 16979,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16869,
											"end": 16986,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16869,
											"end": 16986,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16869,
											"end": 16986,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16869,
											"end": 16986,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16869,
											"end": 16986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16992,
											"end": 17161,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 16992,
											"end": 17161,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17036,
											"end": 17042,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17069,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "647"
										},
										{
											"begin": 17117,
											"end": 17118,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17113,
											"end": 17119,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 17105,
											"end": 17110,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17102,
											"end": 17103,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 17098,
											"end": 17111,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 17069,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 17069,
											"end": 17120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17069,
											"end": 17120,
											"name": "tag",
											"source": 8,
											"value": "647"
										},
										{
											"begin": 17069,
											"end": 17120,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17065,
											"end": 17121,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 17150,
											"end": 17154,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17144,
											"end": 17148,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17140,
											"end": 17155,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 17130,
											"end": 17155,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17130,
											"end": 17155,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17043,
											"end": 17161,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16992,
											"end": 17161,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16992,
											"end": 17161,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16992,
											"end": 17161,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16992,
											"end": 17161,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16992,
											"end": 17161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17166,
											"end": 17461,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 17166,
											"end": 17461,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17242,
											"end": 17246,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17388,
											"end": 17417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "649"
										},
										{
											"begin": 17413,
											"end": 17416,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17407,
											"end": 17411,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17388,
											"end": 17417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 17388,
											"end": 17417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17388,
											"end": 17417,
											"name": "tag",
											"source": 8,
											"value": "649"
										},
										{
											"begin": 17388,
											"end": 17417,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17380,
											"end": 17417,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17380,
											"end": 17417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17450,
											"end": 17453,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17447,
											"end": 17448,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 17443,
											"end": 17454,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 17437,
											"end": 17441,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17434,
											"end": 17455,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 17426,
											"end": 17455,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17426,
											"end": 17455,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17166,
											"end": 17461,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17166,
											"end": 17461,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17166,
											"end": 17461,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17166,
											"end": 17461,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17166,
											"end": 17461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17466,
											"end": 18861,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 17466,
											"end": 18861,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17583,
											"end": 17620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "651"
										},
										{
											"begin": 17616,
											"end": 17619,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17583,
											"end": 17620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 17583,
											"end": 17620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17583,
											"end": 17620,
											"name": "tag",
											"source": 8,
											"value": "651"
										},
										{
											"begin": 17583,
											"end": 17620,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17685,
											"end": 17703,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17677,
											"end": 17683,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17674,
											"end": 17704,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 17671,
											"end": 17727,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17671,
											"end": 17727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "652"
										},
										{
											"begin": 17671,
											"end": 17727,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17707,
											"end": 17725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "653"
										},
										{
											"begin": 17707,
											"end": 17725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 17707,
											"end": 17725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17707,
											"end": 17725,
											"name": "tag",
											"source": 8,
											"value": "653"
										},
										{
											"begin": 17707,
											"end": 17725,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17671,
											"end": 17727,
											"name": "tag",
											"source": 8,
											"value": "652"
										},
										{
											"begin": 17671,
											"end": 17727,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17751,
											"end": 17789,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "654"
										},
										{
											"begin": 17783,
											"end": 17787,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17777,
											"end": 17788,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 17751,
											"end": 17789,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 17751,
											"end": 17789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17751,
											"end": 17789,
											"name": "tag",
											"source": 8,
											"value": "654"
										},
										{
											"begin": 17751,
											"end": 17789,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17836,
											"end": 17903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "655"
										},
										{
											"begin": 17896,
											"end": 17902,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17888,
											"end": 17894,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17882,
											"end": 17886,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 17836,
											"end": 17903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 17836,
											"end": 17903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17836,
											"end": 17903,
											"name": "tag",
											"source": 8,
											"value": "655"
										},
										{
											"begin": 17836,
											"end": 17903,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17930,
											"end": 17931,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17954,
											"end": 17958,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17941,
											"end": 17958,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17941,
											"end": 17958,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17986,
											"end": 17988,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 17978,
											"end": 17984,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17975,
											"end": 17989,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 18003,
											"end": 18004,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 17998,
											"end": 18616,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17998,
											"end": 18616,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 17998,
											"end": 18616,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "657"
										},
										{
											"begin": 17998,
											"end": 18616,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18660,
											"end": 18661,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18677,
											"end": 18683,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18674,
											"end": 18751,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18674,
											"end": 18751,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "658"
										},
										{
											"begin": 18674,
											"end": 18751,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18726,
											"end": 18735,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18721,
											"end": 18724,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 18717,
											"end": 18736,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18711,
											"end": 18737,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 18702,
											"end": 18737,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18702,
											"end": 18737,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18674,
											"end": 18751,
											"name": "tag",
											"source": 8,
											"value": "658"
										},
										{
											"begin": 18674,
											"end": 18751,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18777,
											"end": 18844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "659"
										},
										{
											"begin": 18837,
											"end": 18843,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 18830,
											"end": 18835,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18777,
											"end": 18844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 18777,
											"end": 18844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18777,
											"end": 18844,
											"name": "tag",
											"source": 8,
											"value": "659"
										},
										{
											"begin": 18777,
											"end": 18844,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18771,
											"end": 18775,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 18764,
											"end": 18845,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 18633,
											"end": 18855,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17968,
											"end": 18855,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "656"
										},
										{
											"begin": 17968,
											"end": 18855,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17998,
											"end": 18616,
											"name": "tag",
											"source": 8,
											"value": "657"
										},
										{
											"begin": 17998,
											"end": 18616,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18050,
											"end": 18054,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 18046,
											"end": 18055,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 18038,
											"end": 18044,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18034,
											"end": 18056,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 18084,
											"end": 18121,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "660"
										},
										{
											"begin": 18116,
											"end": 18120,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 18084,
											"end": 18121,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 18084,
											"end": 18121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18084,
											"end": 18121,
											"name": "tag",
											"source": 8,
											"value": "660"
										},
										{
											"begin": 18084,
											"end": 18121,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18143,
											"end": 18144,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18157,
											"end": 18365,
											"name": "tag",
											"source": 8,
											"value": "661"
										},
										{
											"begin": 18157,
											"end": 18365,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18171,
											"end": 18178,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18168,
											"end": 18169,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18165,
											"end": 18179,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 18157,
											"end": 18365,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18157,
											"end": 18365,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "663"
										},
										{
											"begin": 18157,
											"end": 18365,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18250,
											"end": 18259,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18245,
											"end": 18248,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 18241,
											"end": 18260,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18235,
											"end": 18261,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 18227,
											"end": 18233,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18220,
											"end": 18262,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 18301,
											"end": 18302,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 18293,
											"end": 18299,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18289,
											"end": 18303,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18279,
											"end": 18303,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18279,
											"end": 18303,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18348,
											"end": 18350,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18337,
											"end": 18346,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 18333,
											"end": 18351,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18320,
											"end": 18351,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 18320,
											"end": 18351,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18194,
											"end": 18198,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18191,
											"end": 18192,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18187,
											"end": 18199,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18182,
											"end": 18199,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18182,
											"end": 18199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18157,
											"end": 18365,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "661"
										},
										{
											"begin": 18157,
											"end": 18365,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18157,
											"end": 18365,
											"name": "tag",
											"source": 8,
											"value": "663"
										},
										{
											"begin": 18157,
											"end": 18365,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18393,
											"end": 18399,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 18384,
											"end": 18391,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18381,
											"end": 18400,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 18378,
											"end": 18557,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18378,
											"end": 18557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "664"
										},
										{
											"begin": 18378,
											"end": 18557,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18451,
											"end": 18460,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18446,
											"end": 18449,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 18442,
											"end": 18461,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18436,
											"end": 18462,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 18494,
											"end": 18542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "665"
										},
										{
											"begin": 18536,
											"end": 18540,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 18528,
											"end": 18534,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 18524,
											"end": 18541,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 18513,
											"end": 18522,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18494,
											"end": 18542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 18494,
											"end": 18542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18494,
											"end": 18542,
											"name": "tag",
											"source": 8,
											"value": "665"
										},
										{
											"begin": 18494,
											"end": 18542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18486,
											"end": 18492,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18479,
											"end": 18543,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 18401,
											"end": 18557,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18378,
											"end": 18557,
											"name": "tag",
											"source": 8,
											"value": "664"
										},
										{
											"begin": 18378,
											"end": 18557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18603,
											"end": 18604,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 18599,
											"end": 18600,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 18591,
											"end": 18597,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 18587,
											"end": 18601,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 18583,
											"end": 18605,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18577,
											"end": 18581,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 18570,
											"end": 18606,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 18005,
											"end": 18616,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18005,
											"end": 18616,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18005,
											"end": 18616,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17968,
											"end": 18855,
											"name": "tag",
											"source": 8,
											"value": "656"
										},
										{
											"begin": 17968,
											"end": 18855,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17968,
											"end": 18855,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17558,
											"end": 18861,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17558,
											"end": 18861,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17558,
											"end": 18861,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17466,
											"end": 18861,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17466,
											"end": 18861,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17466,
											"end": 18861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18867,
											"end": 19015,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 18867,
											"end": 19015,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18969,
											"end": 18980,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19006,
											"end": 19009,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18991,
											"end": 19009,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18991,
											"end": 19009,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18867,
											"end": 19015,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18867,
											"end": 19015,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18867,
											"end": 19015,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18867,
											"end": 19015,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18867,
											"end": 19015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19021,
											"end": 19411,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 19021,
											"end": 19411,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19127,
											"end": 19130,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19155,
											"end": 19194,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "668"
										},
										{
											"begin": 19188,
											"end": 19193,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19155,
											"end": 19194,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 19155,
											"end": 19194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19155,
											"end": 19194,
											"name": "tag",
											"source": 8,
											"value": "668"
										},
										{
											"begin": 19155,
											"end": 19194,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19210,
											"end": 19299,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "669"
										},
										{
											"begin": 19292,
											"end": 19298,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19287,
											"end": 19290,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 19210,
											"end": 19299,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 19210,
											"end": 19299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19210,
											"end": 19299,
											"name": "tag",
											"source": 8,
											"value": "669"
										},
										{
											"begin": 19210,
											"end": 19299,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19203,
											"end": 19299,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 19203,
											"end": 19299,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19308,
											"end": 19373,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "670"
										},
										{
											"begin": 19366,
											"end": 19372,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19361,
											"end": 19364,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 19354,
											"end": 19358,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19347,
											"end": 19352,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 19343,
											"end": 19359,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19308,
											"end": 19373,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 19308,
											"end": 19373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19308,
											"end": 19373,
											"name": "tag",
											"source": 8,
											"value": "670"
										},
										{
											"begin": 19308,
											"end": 19373,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19398,
											"end": 19404,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 19393,
											"end": 19396,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 19389,
											"end": 19405,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19382,
											"end": 19405,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19382,
											"end": 19405,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19131,
											"end": 19411,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19021,
											"end": 19411,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19021,
											"end": 19411,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19021,
											"end": 19411,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19021,
											"end": 19411,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19021,
											"end": 19411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19417,
											"end": 19692,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 19417,
											"end": 19692,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19549,
											"end": 19552,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19571,
											"end": 19666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "672"
										},
										{
											"begin": 19662,
											"end": 19665,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19653,
											"end": 19659,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 19571,
											"end": 19666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 19571,
											"end": 19666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19571,
											"end": 19666,
											"name": "tag",
											"source": 8,
											"value": "672"
										},
										{
											"begin": 19571,
											"end": 19666,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19564,
											"end": 19666,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19564,
											"end": 19666,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19683,
											"end": 19686,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19676,
											"end": 19686,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19676,
											"end": 19686,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19417,
											"end": 19692,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19417,
											"end": 19692,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19417,
											"end": 19692,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19417,
											"end": 19692,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19417,
											"end": 19692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19698,
											"end": 19872,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 19698,
											"end": 19872,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19838,
											"end": 19864,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C69642076657374696E6720636F6E74726163740000000000000000"
										},
										{
											"begin": 19834,
											"end": 19835,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19826,
											"end": 19832,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19822,
											"end": 19836,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19815,
											"end": 19865,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19698,
											"end": 19872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19698,
											"end": 19872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19878,
											"end": 20244,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 19878,
											"end": 20244,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20020,
											"end": 20023,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20041,
											"end": 20108,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "675"
										},
										{
											"begin": 20105,
											"end": 20107,
											"name": "PUSH",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 20100,
											"end": 20103,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20041,
											"end": 20108,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 20041,
											"end": 20108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20041,
											"end": 20108,
											"name": "tag",
											"source": 8,
											"value": "675"
										},
										{
											"begin": 20041,
											"end": 20108,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20034,
											"end": 20108,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20034,
											"end": 20108,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20117,
											"end": 20210,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "676"
										},
										{
											"begin": 20206,
											"end": 20209,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20117,
											"end": 20210,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 20117,
											"end": 20210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20117,
											"end": 20210,
											"name": "tag",
											"source": 8,
											"value": "676"
										},
										{
											"begin": 20117,
											"end": 20210,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20235,
											"end": 20237,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20230,
											"end": 20233,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20226,
											"end": 20238,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20219,
											"end": 20238,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20219,
											"end": 20238,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19878,
											"end": 20244,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19878,
											"end": 20244,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19878,
											"end": 20244,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19878,
											"end": 20244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20250,
											"end": 20669,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 20250,
											"end": 20669,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20416,
											"end": 20420,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20454,
											"end": 20456,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20443,
											"end": 20452,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20439,
											"end": 20457,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20431,
											"end": 20457,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20431,
											"end": 20457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20503,
											"end": 20512,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20497,
											"end": 20501,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20493,
											"end": 20513,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 20489,
											"end": 20490,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20478,
											"end": 20487,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20474,
											"end": 20491,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20467,
											"end": 20514,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20531,
											"end": 20662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "678"
										},
										{
											"begin": 20657,
											"end": 20661,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20531,
											"end": 20662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 20531,
											"end": 20662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20531,
											"end": 20662,
											"name": "tag",
											"source": 8,
											"value": "678"
										},
										{
											"begin": 20531,
											"end": 20662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20523,
											"end": 20662,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20523,
											"end": 20662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20250,
											"end": 20669,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20250,
											"end": 20669,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20250,
											"end": 20669,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20250,
											"end": 20669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20675,
											"end": 20855,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 20675,
											"end": 20855,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20815,
											"end": 20847,
											"name": "PUSH",
											"source": 8,
											"value": "56657374696E6720636F6E747261637420616C72656164792061646465640000"
										},
										{
											"begin": 20811,
											"end": 20812,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20803,
											"end": 20809,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20799,
											"end": 20813,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20792,
											"end": 20848,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20675,
											"end": 20855,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20675,
											"end": 20855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20861,
											"end": 21227,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 20861,
											"end": 21227,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21003,
											"end": 21006,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21024,
											"end": 21091,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "681"
										},
										{
											"begin": 21088,
											"end": 21090,
											"name": "PUSH",
											"source": 8,
											"value": "1E"
										},
										{
											"begin": 21083,
											"end": 21086,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21024,
											"end": 21091,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 21024,
											"end": 21091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21024,
											"end": 21091,
											"name": "tag",
											"source": 8,
											"value": "681"
										},
										{
											"begin": 21024,
											"end": 21091,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21017,
											"end": 21091,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21017,
											"end": 21091,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21100,
											"end": 21193,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "682"
										},
										{
											"begin": 21189,
											"end": 21192,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21100,
											"end": 21193,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 21100,
											"end": 21193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21100,
											"end": 21193,
											"name": "tag",
											"source": 8,
											"value": "682"
										},
										{
											"begin": 21100,
											"end": 21193,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21218,
											"end": 21220,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21213,
											"end": 21216,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21209,
											"end": 21221,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21202,
											"end": 21221,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21202,
											"end": 21221,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20861,
											"end": 21227,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20861,
											"end": 21227,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20861,
											"end": 21227,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20861,
											"end": 21227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21233,
											"end": 21652,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 21233,
											"end": 21652,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21399,
											"end": 21403,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21437,
											"end": 21439,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21426,
											"end": 21435,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21422,
											"end": 21440,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21414,
											"end": 21440,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21414,
											"end": 21440,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21486,
											"end": 21495,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21480,
											"end": 21484,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21476,
											"end": 21496,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 21472,
											"end": 21473,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21461,
											"end": 21470,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21457,
											"end": 21474,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21450,
											"end": 21497,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21514,
											"end": 21645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "684"
										},
										{
											"begin": 21640,
											"end": 21644,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21514,
											"end": 21645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 21514,
											"end": 21645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21514,
											"end": 21645,
											"name": "tag",
											"source": 8,
											"value": "684"
										},
										{
											"begin": 21514,
											"end": 21645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21506,
											"end": 21645,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21506,
											"end": 21645,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21233,
											"end": 21652,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21233,
											"end": 21652,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21233,
											"end": 21652,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21233,
											"end": 21652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21658,
											"end": 21834,
											"name": "tag",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 21658,
											"end": 21834,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21798,
											"end": 21826,
											"name": "PUSH",
											"source": 8,
											"value": "56657374696E6720636F6E7472616374206E6F7420666F756E64000000000000"
										},
										{
											"begin": 21794,
											"end": 21795,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21786,
											"end": 21792,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21782,
											"end": 21796,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21775,
											"end": 21827,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21658,
											"end": 21834,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21658,
											"end": 21834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21840,
											"end": 22206,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 21840,
											"end": 22206,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21982,
											"end": 21985,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22003,
											"end": 22070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "687"
										},
										{
											"begin": 22067,
											"end": 22069,
											"name": "PUSH",
											"source": 8,
											"value": "1A"
										},
										{
											"begin": 22062,
											"end": 22065,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22003,
											"end": 22070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 22003,
											"end": 22070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22003,
											"end": 22070,
											"name": "tag",
											"source": 8,
											"value": "687"
										},
										{
											"begin": 22003,
											"end": 22070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21996,
											"end": 22070,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21996,
											"end": 22070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22079,
											"end": 22172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "688"
										},
										{
											"begin": 22168,
											"end": 22171,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22079,
											"end": 22172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 22079,
											"end": 22172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22079,
											"end": 22172,
											"name": "tag",
											"source": 8,
											"value": "688"
										},
										{
											"begin": 22079,
											"end": 22172,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22197,
											"end": 22199,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22192,
											"end": 22195,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22188,
											"end": 22200,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22181,
											"end": 22200,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22181,
											"end": 22200,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21840,
											"end": 22206,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21840,
											"end": 22206,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21840,
											"end": 22206,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21840,
											"end": 22206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22212,
											"end": 22631,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 22212,
											"end": 22631,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22378,
											"end": 22382,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22416,
											"end": 22418,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22405,
											"end": 22414,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22401,
											"end": 22419,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22393,
											"end": 22419,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22393,
											"end": 22419,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22465,
											"end": 22474,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22459,
											"end": 22463,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22455,
											"end": 22475,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 22451,
											"end": 22452,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22440,
											"end": 22449,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22436,
											"end": 22453,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22429,
											"end": 22476,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22493,
											"end": 22624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "690"
										},
										{
											"begin": 22619,
											"end": 22623,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22493,
											"end": 22624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 22493,
											"end": 22624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22493,
											"end": 22624,
											"name": "tag",
											"source": 8,
											"value": "690"
										},
										{
											"begin": 22493,
											"end": 22624,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22485,
											"end": 22624,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22485,
											"end": 22624,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22212,
											"end": 22631,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22212,
											"end": 22631,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22212,
											"end": 22631,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22212,
											"end": 22631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22637,
											"end": 22806,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 22637,
											"end": 22806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22777,
											"end": 22798,
											"name": "PUSH",
											"source": 8,
											"value": "416C726561647920696E697469616C697A656400000000000000000000000000"
										},
										{
											"begin": 22773,
											"end": 22774,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22765,
											"end": 22771,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22761,
											"end": 22775,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22754,
											"end": 22799,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22637,
											"end": 22806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22637,
											"end": 22806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22812,
											"end": 23178,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 22812,
											"end": 23178,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22954,
											"end": 22957,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22975,
											"end": 23042,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "693"
										},
										{
											"begin": 23039,
											"end": 23041,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 23034,
											"end": 23037,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22975,
											"end": 23042,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 22975,
											"end": 23042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22975,
											"end": 23042,
											"name": "tag",
											"source": 8,
											"value": "693"
										},
										{
											"begin": 22975,
											"end": 23042,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22968,
											"end": 23042,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22968,
											"end": 23042,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23051,
											"end": 23144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "694"
										},
										{
											"begin": 23140,
											"end": 23143,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23051,
											"end": 23144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 23051,
											"end": 23144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23051,
											"end": 23144,
											"name": "tag",
											"source": 8,
											"value": "694"
										},
										{
											"begin": 23051,
											"end": 23144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23169,
											"end": 23171,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 23164,
											"end": 23167,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23160,
											"end": 23172,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23153,
											"end": 23172,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23153,
											"end": 23172,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22812,
											"end": 23178,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22812,
											"end": 23178,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22812,
											"end": 23178,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22812,
											"end": 23178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23184,
											"end": 23603,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 23184,
											"end": 23603,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23350,
											"end": 23354,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23388,
											"end": 23390,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 23377,
											"end": 23386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23373,
											"end": 23391,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23365,
											"end": 23391,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23365,
											"end": 23391,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23437,
											"end": 23446,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23431,
											"end": 23435,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23427,
											"end": 23447,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 23423,
											"end": 23424,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23412,
											"end": 23421,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23408,
											"end": 23425,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23401,
											"end": 23448,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23465,
											"end": 23596,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "696"
										},
										{
											"begin": 23591,
											"end": 23595,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23465,
											"end": 23596,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 23465,
											"end": 23596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23465,
											"end": 23596,
											"name": "tag",
											"source": 8,
											"value": "696"
										},
										{
											"begin": 23465,
											"end": 23596,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23457,
											"end": 23596,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23457,
											"end": 23596,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23184,
											"end": 23603,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23184,
											"end": 23603,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23184,
											"end": 23603,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23184,
											"end": 23603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23609,
											"end": 23779,
											"name": "tag",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 23609,
											"end": 23779,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23749,
											"end": 23771,
											"name": "PUSH",
											"source": 8,
											"value": "4E616D652063616E6E6F7420626520656D707479000000000000000000000000"
										},
										{
											"begin": 23745,
											"end": 23746,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23737,
											"end": 23743,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23733,
											"end": 23747,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23726,
											"end": 23772,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23609,
											"end": 23779,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23609,
											"end": 23779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23785,
											"end": 24151,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 23785,
											"end": 24151,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23927,
											"end": 23930,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23948,
											"end": 24015,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "699"
										},
										{
											"begin": 24012,
											"end": 24014,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 24007,
											"end": 24010,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23948,
											"end": 24015,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 23948,
											"end": 24015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23948,
											"end": 24015,
											"name": "tag",
											"source": 8,
											"value": "699"
										},
										{
											"begin": 23948,
											"end": 24015,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23941,
											"end": 24015,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23941,
											"end": 24015,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24024,
											"end": 24117,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "700"
										},
										{
											"begin": 24113,
											"end": 24116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24024,
											"end": 24117,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 24024,
											"end": 24117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24024,
											"end": 24117,
											"name": "tag",
											"source": 8,
											"value": "700"
										},
										{
											"begin": 24024,
											"end": 24117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24142,
											"end": 24144,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 24137,
											"end": 24140,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24133,
											"end": 24145,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24126,
											"end": 24145,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24126,
											"end": 24145,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23785,
											"end": 24151,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23785,
											"end": 24151,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23785,
											"end": 24151,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23785,
											"end": 24151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24157,
											"end": 24576,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 24157,
											"end": 24576,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24323,
											"end": 24327,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24361,
											"end": 24363,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 24350,
											"end": 24359,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24346,
											"end": 24364,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24338,
											"end": 24364,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24338,
											"end": 24364,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24410,
											"end": 24419,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24404,
											"end": 24408,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24400,
											"end": 24420,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 24396,
											"end": 24397,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24385,
											"end": 24394,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 24381,
											"end": 24398,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24374,
											"end": 24421,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24438,
											"end": 24569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "702"
										},
										{
											"begin": 24564,
											"end": 24568,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24438,
											"end": 24569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 24438,
											"end": 24569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24438,
											"end": 24569,
											"name": "tag",
											"source": 8,
											"value": "702"
										},
										{
											"begin": 24438,
											"end": 24569,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24430,
											"end": 24569,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24430,
											"end": 24569,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24157,
											"end": 24576,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24157,
											"end": 24576,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24157,
											"end": 24576,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24157,
											"end": 24576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24582,
											"end": 24754,
											"name": "tag",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 24582,
											"end": 24754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24722,
											"end": 24746,
											"name": "PUSH",
											"source": 8,
											"value": "53796D626F6C2063616E6E6F7420626520656D70747900000000000000000000"
										},
										{
											"begin": 24718,
											"end": 24719,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24710,
											"end": 24716,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24706,
											"end": 24720,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24699,
											"end": 24747,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24582,
											"end": 24754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24582,
											"end": 24754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24760,
											"end": 25126,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 24760,
											"end": 25126,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24902,
											"end": 24905,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24923,
											"end": 24990,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "705"
										},
										{
											"begin": 24987,
											"end": 24989,
											"name": "PUSH",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 24982,
											"end": 24985,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 24923,
											"end": 24990,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 24923,
											"end": 24990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24923,
											"end": 24990,
											"name": "tag",
											"source": 8,
											"value": "705"
										},
										{
											"begin": 24923,
											"end": 24990,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24916,
											"end": 24990,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24916,
											"end": 24990,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24999,
											"end": 25092,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "706"
										},
										{
											"begin": 25088,
											"end": 25091,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24999,
											"end": 25092,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 24999,
											"end": 25092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24999,
											"end": 25092,
											"name": "tag",
											"source": 8,
											"value": "706"
										},
										{
											"begin": 24999,
											"end": 25092,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25117,
											"end": 25119,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 25112,
											"end": 25115,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25108,
											"end": 25120,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25101,
											"end": 25120,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25101,
											"end": 25120,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24760,
											"end": 25126,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24760,
											"end": 25126,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24760,
											"end": 25126,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24760,
											"end": 25126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25132,
											"end": 25551,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 25132,
											"end": 25551,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25298,
											"end": 25302,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25336,
											"end": 25338,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 25325,
											"end": 25334,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25321,
											"end": 25339,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25313,
											"end": 25339,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25313,
											"end": 25339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25385,
											"end": 25394,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25379,
											"end": 25383,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25375,
											"end": 25395,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 25371,
											"end": 25372,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25360,
											"end": 25369,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25356,
											"end": 25373,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25349,
											"end": 25396,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25413,
											"end": 25544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "708"
										},
										{
											"begin": 25539,
											"end": 25543,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25413,
											"end": 25544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 25413,
											"end": 25544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25413,
											"end": 25544,
											"name": "tag",
											"source": 8,
											"value": "708"
										},
										{
											"begin": 25413,
											"end": 25544,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25405,
											"end": 25544,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25405,
											"end": 25544,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25132,
											"end": 25551,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25132,
											"end": 25551,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25132,
											"end": 25551,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25132,
											"end": 25551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25557,
											"end": 25779,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 25557,
											"end": 25779,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25697,
											"end": 25731,
											"name": "PUSH",
											"source": 8,
											"value": "546F74616C20737570706C79206D757374206265206772656174657220746861"
										},
										{
											"begin": 25693,
											"end": 25694,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25685,
											"end": 25691,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25681,
											"end": 25695,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25674,
											"end": 25732,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25766,
											"end": 25771,
											"name": "PUSH",
											"source": 8,
											"value": "6E20300000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25761,
											"end": 25763,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 25753,
											"end": 25759,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25749,
											"end": 25764,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25742,
											"end": 25772,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25557,
											"end": 25779,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25557,
											"end": 25779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25785,
											"end": 26151,
											"name": "tag",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 25785,
											"end": 26151,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25927,
											"end": 25930,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25948,
											"end": 26015,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "711"
										},
										{
											"begin": 26012,
											"end": 26014,
											"name": "PUSH",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 26007,
											"end": 26010,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25948,
											"end": 26015,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 25948,
											"end": 26015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25948,
											"end": 26015,
											"name": "tag",
											"source": 8,
											"value": "711"
										},
										{
											"begin": 25948,
											"end": 26015,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25941,
											"end": 26015,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25941,
											"end": 26015,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26024,
											"end": 26117,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "712"
										},
										{
											"begin": 26113,
											"end": 26116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26024,
											"end": 26117,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 26024,
											"end": 26117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26024,
											"end": 26117,
											"name": "tag",
											"source": 8,
											"value": "712"
										},
										{
											"begin": 26024,
											"end": 26117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26142,
											"end": 26144,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 26137,
											"end": 26140,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26133,
											"end": 26145,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26126,
											"end": 26145,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26126,
											"end": 26145,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25785,
											"end": 26151,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25785,
											"end": 26151,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25785,
											"end": 26151,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25785,
											"end": 26151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26157,
											"end": 26576,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 26157,
											"end": 26576,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26323,
											"end": 26327,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26361,
											"end": 26363,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 26350,
											"end": 26359,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26346,
											"end": 26364,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26338,
											"end": 26364,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26338,
											"end": 26364,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26410,
											"end": 26419,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26404,
											"end": 26408,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26400,
											"end": 26420,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 26396,
											"end": 26397,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26385,
											"end": 26394,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 26381,
											"end": 26398,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26374,
											"end": 26421,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 26438,
											"end": 26569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "714"
										},
										{
											"begin": 26564,
											"end": 26568,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26438,
											"end": 26569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 26438,
											"end": 26569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26438,
											"end": 26569,
											"name": "tag",
											"source": 8,
											"value": "714"
										},
										{
											"begin": 26438,
											"end": 26569,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26430,
											"end": 26569,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26430,
											"end": 26569,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26157,
											"end": 26576,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26157,
											"end": 26576,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26157,
											"end": 26576,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26157,
											"end": 26576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26582,
											"end": 26753,
											"name": "tag",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 26582,
											"end": 26753,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26722,
											"end": 26745,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C6964206F776E657220616464726573730000000000000000000000"
										},
										{
											"begin": 26718,
											"end": 26719,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26710,
											"end": 26716,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26706,
											"end": 26720,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26699,
											"end": 26746,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 26582,
											"end": 26753,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26582,
											"end": 26753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26759,
											"end": 27125,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 26759,
											"end": 27125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26901,
											"end": 26904,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26922,
											"end": 26989,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "717"
										},
										{
											"begin": 26986,
											"end": 26988,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 26981,
											"end": 26984,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 26922,
											"end": 26989,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 26922,
											"end": 26989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26922,
											"end": 26989,
											"name": "tag",
											"source": 8,
											"value": "717"
										},
										{
											"begin": 26922,
											"end": 26989,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26915,
											"end": 26989,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26915,
											"end": 26989,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26998,
											"end": 27091,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "718"
										},
										{
											"begin": 27087,
											"end": 27090,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26998,
											"end": 27091,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 26998,
											"end": 27091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26998,
											"end": 27091,
											"name": "tag",
											"source": 8,
											"value": "718"
										},
										{
											"begin": 26998,
											"end": 27091,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27116,
											"end": 27118,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 27111,
											"end": 27114,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27107,
											"end": 27119,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27100,
											"end": 27119,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27100,
											"end": 27119,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26759,
											"end": 27125,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26759,
											"end": 27125,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26759,
											"end": 27125,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26759,
											"end": 27125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27131,
											"end": 27550,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 27131,
											"end": 27550,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27297,
											"end": 27301,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27335,
											"end": 27337,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 27324,
											"end": 27333,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27320,
											"end": 27338,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27312,
											"end": 27338,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27312,
											"end": 27338,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27384,
											"end": 27393,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27378,
											"end": 27382,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27374,
											"end": 27394,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 27370,
											"end": 27371,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27359,
											"end": 27368,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 27355,
											"end": 27372,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27348,
											"end": 27395,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 27412,
											"end": 27543,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "720"
										},
										{
											"begin": 27538,
											"end": 27542,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27412,
											"end": 27543,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 27412,
											"end": 27543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27412,
											"end": 27543,
											"name": "tag",
											"source": 8,
											"value": "720"
										},
										{
											"begin": 27412,
											"end": 27543,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27404,
											"end": 27543,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27404,
											"end": 27543,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27131,
											"end": 27550,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 27131,
											"end": 27550,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27131,
											"end": 27550,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27131,
											"end": 27550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27556,
											"end": 28291,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 27556,
											"end": 28291,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27773,
											"end": 27777,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27811,
											"end": 27814,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 27800,
											"end": 27809,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27796,
											"end": 27815,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27788,
											"end": 27815,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27788,
											"end": 27815,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27861,
											"end": 27870,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27855,
											"end": 27859,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27851,
											"end": 27871,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 27847,
											"end": 27848,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27836,
											"end": 27845,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 27832,
											"end": 27849,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27825,
											"end": 27872,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 27889,
											"end": 27967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "722"
										},
										{
											"begin": 27962,
											"end": 27966,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27953,
											"end": 27959,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 27889,
											"end": 27967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 27889,
											"end": 27967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27889,
											"end": 27967,
											"name": "tag",
											"source": 8,
											"value": "722"
										},
										{
											"begin": 27889,
											"end": 27967,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27881,
											"end": 27967,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27881,
											"end": 27967,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28014,
											"end": 28023,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 28008,
											"end": 28012,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 28004,
											"end": 28024,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 27999,
											"end": 28001,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 27988,
											"end": 27997,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 27984,
											"end": 28002,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27977,
											"end": 28025,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 28042,
											"end": 28120,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "723"
										},
										{
											"begin": 28115,
											"end": 28119,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 28106,
											"end": 28112,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 28042,
											"end": 28120,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 28042,
											"end": 28120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28042,
											"end": 28120,
											"name": "tag",
											"source": 8,
											"value": "723"
										},
										{
											"begin": 28042,
											"end": 28120,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28034,
											"end": 28120,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28034,
											"end": 28120,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28130,
											"end": 28202,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "724"
										},
										{
											"begin": 28198,
											"end": 28200,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 28187,
											"end": 28196,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 28183,
											"end": 28201,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28174,
											"end": 28180,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 28130,
											"end": 28202,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 28130,
											"end": 28202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28130,
											"end": 28202,
											"name": "tag",
											"source": 8,
											"value": "724"
										},
										{
											"begin": 28130,
											"end": 28202,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28212,
											"end": 28284,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "725"
										},
										{
											"begin": 28280,
											"end": 28282,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 28269,
											"end": 28278,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 28265,
											"end": 28283,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28256,
											"end": 28262,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 28212,
											"end": 28284,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 28212,
											"end": 28284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28212,
											"end": 28284,
											"name": "tag",
											"source": 8,
											"value": "725"
										},
										{
											"begin": 28212,
											"end": 28284,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27556,
											"end": 28291,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 27556,
											"end": 28291,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 27556,
											"end": 28291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27556,
											"end": 28291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27556,
											"end": 28291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27556,
											"end": 28291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27556,
											"end": 28291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27556,
											"end": 28291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28297,
											"end": 28476,
											"name": "tag",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 28297,
											"end": 28476,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28437,
											"end": 28468,
											"name": "PUSH",
											"source": 8,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E2030000000"
										},
										{
											"begin": 28433,
											"end": 28434,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28425,
											"end": 28431,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28421,
											"end": 28435,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28414,
											"end": 28469,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 28297,
											"end": 28476,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28297,
											"end": 28476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28482,
											"end": 28848,
											"name": "tag",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 28482,
											"end": 28848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28624,
											"end": 28627,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28645,
											"end": 28712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "728"
										},
										{
											"begin": 28709,
											"end": 28711,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 28704,
											"end": 28707,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 28645,
											"end": 28712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 28645,
											"end": 28712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28645,
											"end": 28712,
											"name": "tag",
											"source": 8,
											"value": "728"
										},
										{
											"begin": 28645,
											"end": 28712,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28638,
											"end": 28712,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 28638,
											"end": 28712,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28721,
											"end": 28814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "729"
										},
										{
											"begin": 28810,
											"end": 28813,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28721,
											"end": 28814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 28721,
											"end": 28814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28721,
											"end": 28814,
											"name": "tag",
											"source": 8,
											"value": "729"
										},
										{
											"begin": 28721,
											"end": 28814,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28839,
											"end": 28841,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 28834,
											"end": 28837,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28830,
											"end": 28842,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28823,
											"end": 28842,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28823,
											"end": 28842,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28482,
											"end": 28848,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 28482,
											"end": 28848,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28482,
											"end": 28848,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28482,
											"end": 28848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28854,
											"end": 29273,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 28854,
											"end": 29273,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29020,
											"end": 29024,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 29058,
											"end": 29060,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 29047,
											"end": 29056,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29043,
											"end": 29061,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29035,
											"end": 29061,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 29035,
											"end": 29061,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29107,
											"end": 29116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 29101,
											"end": 29105,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 29097,
											"end": 29117,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 29093,
											"end": 29094,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 29082,
											"end": 29091,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 29078,
											"end": 29095,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29071,
											"end": 29118,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 29135,
											"end": 29266,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "731"
										},
										{
											"begin": 29261,
											"end": 29265,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 29135,
											"end": 29266,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 29135,
											"end": 29266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 29135,
											"end": 29266,
											"name": "tag",
											"source": 8,
											"value": "731"
										},
										{
											"begin": 29135,
											"end": 29266,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29127,
											"end": 29266,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 29127,
											"end": 29266,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28854,
											"end": 29273,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 28854,
											"end": 29273,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28854,
											"end": 29273,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28854,
											"end": 29273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 29279,
											"end": 29702,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 29279,
											"end": 29702,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29420,
											"end": 29424,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 29458,
											"end": 29460,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 29447,
											"end": 29456,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29443,
											"end": 29461,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29435,
											"end": 29461,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 29435,
											"end": 29461,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29507,
											"end": 29516,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 29501,
											"end": 29505,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 29497,
											"end": 29517,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 29493,
											"end": 29494,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 29482,
											"end": 29491,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 29478,
											"end": 29495,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29471,
											"end": 29518,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 29535,
											"end": 29613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "733"
										},
										{
											"begin": 29608,
											"end": 29612,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 29599,
											"end": 29605,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 29535,
											"end": 29613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 29535,
											"end": 29613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 29535,
											"end": 29613,
											"name": "tag",
											"source": 8,
											"value": "733"
										},
										{
											"begin": 29535,
											"end": 29613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29527,
											"end": 29613,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 29527,
											"end": 29613,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29623,
											"end": 29695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "734"
										},
										{
											"begin": 29691,
											"end": 29693,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 29680,
											"end": 29689,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 29676,
											"end": 29694,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29667,
											"end": 29673,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 29623,
											"end": 29695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 29623,
											"end": 29695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 29623,
											"end": 29695,
											"name": "tag",
											"source": 8,
											"value": "734"
										},
										{
											"begin": 29623,
											"end": 29695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29279,
											"end": 29702,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 29279,
											"end": 29702,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 29279,
											"end": 29702,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29279,
											"end": 29702,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29279,
											"end": 29702,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29279,
											"end": 29702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 29708,
											"end": 29875,
											"name": "tag",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 29708,
											"end": 29875,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29848,
											"end": 29867,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420726563697069656E74000000000000000000000000000000"
										},
										{
											"begin": 29844,
											"end": 29845,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 29836,
											"end": 29842,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29832,
											"end": 29846,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29825,
											"end": 29868,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 29708,
											"end": 29875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29708,
											"end": 29875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 29881,
											"end": 30247,
											"name": "tag",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 29881,
											"end": 30247,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30023,
											"end": 30026,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 30044,
											"end": 30111,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "737"
										},
										{
											"begin": 30108,
											"end": 30110,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 30103,
											"end": 30106,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 30044,
											"end": 30111,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 30044,
											"end": 30111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 30044,
											"end": 30111,
											"name": "tag",
											"source": 8,
											"value": "737"
										},
										{
											"begin": 30044,
											"end": 30111,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30037,
											"end": 30111,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 30037,
											"end": 30111,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30120,
											"end": 30213,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "738"
										},
										{
											"begin": 30209,
											"end": 30212,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 30120,
											"end": 30213,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 30120,
											"end": 30213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 30120,
											"end": 30213,
											"name": "tag",
											"source": 8,
											"value": "738"
										},
										{
											"begin": 30120,
											"end": 30213,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30238,
											"end": 30240,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 30233,
											"end": 30236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 30229,
											"end": 30241,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 30222,
											"end": 30241,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 30222,
											"end": 30241,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29881,
											"end": 30247,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 29881,
											"end": 30247,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 29881,
											"end": 30247,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29881,
											"end": 30247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 30253,
											"end": 30672,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 30253,
											"end": 30672,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30419,
											"end": 30423,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 30457,
											"end": 30459,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 30446,
											"end": 30455,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 30442,
											"end": 30460,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 30434,
											"end": 30460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 30434,
											"end": 30460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30506,
											"end": 30515,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 30500,
											"end": 30504,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 30496,
											"end": 30516,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 30492,
											"end": 30493,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 30481,
											"end": 30490,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 30477,
											"end": 30494,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 30470,
											"end": 30517,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 30534,
											"end": 30665,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "740"
										},
										{
											"begin": 30660,
											"end": 30664,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 30534,
											"end": 30665,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 30534,
											"end": 30665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 30534,
											"end": 30665,
											"name": "tag",
											"source": 8,
											"value": "740"
										},
										{
											"begin": 30534,
											"end": 30665,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30526,
											"end": 30665,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 30526,
											"end": 30665,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30253,
											"end": 30672,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 30253,
											"end": 30672,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 30253,
											"end": 30672,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30253,
											"end": 30672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 30678,
											"end": 30858,
											"name": "tag",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 30678,
											"end": 30858,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30726,
											"end": 30803,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30723,
											"end": 30724,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 30716,
											"end": 30804,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 30823,
											"end": 30827,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 30820,
											"end": 30821,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 30813,
											"end": 30828,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 30847,
											"end": 30851,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 30844,
											"end": 30845,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 30837,
											"end": 30852,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 30864,
											"end": 31055,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 30864,
											"end": 31055,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30904,
											"end": 30907,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 30923,
											"end": 30943,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "743"
										},
										{
											"begin": 30941,
											"end": 30942,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 30923,
											"end": 30943,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 30923,
											"end": 30943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 30923,
											"end": 30943,
											"name": "tag",
											"source": 8,
											"value": "743"
										},
										{
											"begin": 30923,
											"end": 30943,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30918,
											"end": 30943,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 30918,
											"end": 30943,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30957,
											"end": 30977,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "744"
										},
										{
											"begin": 30975,
											"end": 30976,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 30957,
											"end": 30977,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 30957,
											"end": 30977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 30957,
											"end": 30977,
											"name": "tag",
											"source": 8,
											"value": "744"
										},
										{
											"begin": 30957,
											"end": 30977,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30952,
											"end": 30977,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 30952,
											"end": 30977,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31000,
											"end": 31001,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 30997,
											"end": 30998,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 30993,
											"end": 31002,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 30986,
											"end": 31002,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 30986,
											"end": 31002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31021,
											"end": 31024,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 31018,
											"end": 31019,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 31015,
											"end": 31025,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 31012,
											"end": 31048,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 31012,
											"end": 31048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "745"
										},
										{
											"begin": 31012,
											"end": 31048,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 31028,
											"end": 31046,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "746"
										},
										{
											"begin": 31028,
											"end": 31046,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 31028,
											"end": 31046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 31028,
											"end": 31046,
											"name": "tag",
											"source": 8,
											"value": "746"
										},
										{
											"begin": 31028,
											"end": 31046,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31012,
											"end": 31048,
											"name": "tag",
											"source": 8,
											"value": "745"
										},
										{
											"begin": 31012,
											"end": 31048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30864,
											"end": 31055,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 30864,
											"end": 31055,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 30864,
											"end": 31055,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30864,
											"end": 31055,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30864,
											"end": 31055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 31061,
											"end": 31503,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 31061,
											"end": 31503,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31210,
											"end": 31214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 31248,
											"end": 31250,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 31237,
											"end": 31246,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 31233,
											"end": 31251,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 31225,
											"end": 31251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 31225,
											"end": 31251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31261,
											"end": 31332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "748"
										},
										{
											"begin": 31329,
											"end": 31330,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 31318,
											"end": 31327,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 31314,
											"end": 31331,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 31305,
											"end": 31311,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 31261,
											"end": 31332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 31261,
											"end": 31332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 31261,
											"end": 31332,
											"name": "tag",
											"source": 8,
											"value": "748"
										},
										{
											"begin": 31261,
											"end": 31332,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31342,
											"end": 31414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "749"
										},
										{
											"begin": 31410,
											"end": 31412,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 31399,
											"end": 31408,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 31395,
											"end": 31413,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 31386,
											"end": 31392,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 31342,
											"end": 31414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 31342,
											"end": 31414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 31342,
											"end": 31414,
											"name": "tag",
											"source": 8,
											"value": "749"
										},
										{
											"begin": 31342,
											"end": 31414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31424,
											"end": 31496,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "750"
										},
										{
											"begin": 31492,
											"end": 31494,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 31481,
											"end": 31490,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 31477,
											"end": 31495,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 31468,
											"end": 31474,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 31424,
											"end": 31496,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 31424,
											"end": 31496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 31424,
											"end": 31496,
											"name": "tag",
											"source": 8,
											"value": "750"
										},
										{
											"begin": 31424,
											"end": 31496,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31061,
											"end": 31503,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 31061,
											"end": 31503,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 31061,
											"end": 31503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31061,
											"end": 31503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31061,
											"end": 31503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31061,
											"end": 31503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31061,
											"end": 31503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 31509,
											"end": 31679,
											"name": "tag",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 31509,
											"end": 31679,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31649,
											"end": 31671,
											"name": "PUSH",
											"source": 8,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 31645,
											"end": 31646,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 31637,
											"end": 31643,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 31633,
											"end": 31647,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 31626,
											"end": 31672,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 31509,
											"end": 31679,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31509,
											"end": 31679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 31685,
											"end": 32051,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 31685,
											"end": 32051,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31827,
											"end": 31830,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 31848,
											"end": 31915,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "753"
										},
										{
											"begin": 31912,
											"end": 31914,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 31907,
											"end": 31910,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 31848,
											"end": 31915,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 31848,
											"end": 31915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 31848,
											"end": 31915,
											"name": "tag",
											"source": 8,
											"value": "753"
										},
										{
											"begin": 31848,
											"end": 31915,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31841,
											"end": 31915,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 31841,
											"end": 31915,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31924,
											"end": 32017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "754"
										},
										{
											"begin": 32013,
											"end": 32016,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 31924,
											"end": 32017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 31924,
											"end": 32017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 31924,
											"end": 32017,
											"name": "tag",
											"source": 8,
											"value": "754"
										},
										{
											"begin": 31924,
											"end": 32017,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 32042,
											"end": 32044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 32037,
											"end": 32040,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 32033,
											"end": 32045,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 32026,
											"end": 32045,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 32026,
											"end": 32045,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31685,
											"end": 32051,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 31685,
											"end": 32051,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 31685,
											"end": 32051,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31685,
											"end": 32051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 32057,
											"end": 32476,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 32057,
											"end": 32476,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 32223,
											"end": 32227,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 32261,
											"end": 32263,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 32250,
											"end": 32259,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 32246,
											"end": 32264,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 32238,
											"end": 32264,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 32238,
											"end": 32264,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 32310,
											"end": 32319,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 32304,
											"end": 32308,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 32300,
											"end": 32320,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 32296,
											"end": 32297,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 32285,
											"end": 32294,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 32281,
											"end": 32298,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 32274,
											"end": 32321,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 32338,
											"end": 32469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "756"
										},
										{
											"begin": 32464,
											"end": 32468,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 32338,
											"end": 32469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 32338,
											"end": 32469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 32338,
											"end": 32469,
											"name": "tag",
											"source": 8,
											"value": "756"
										},
										{
											"begin": 32338,
											"end": 32469,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 32330,
											"end": 32469,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 32330,
											"end": 32469,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 32057,
											"end": 32476,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 32057,
											"end": 32476,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 32057,
											"end": 32476,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 32057,
											"end": 32476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 32482,
											"end": 32648,
											"name": "tag",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 32482,
											"end": 32648,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 32622,
											"end": 32640,
											"name": "PUSH",
											"source": 8,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 32618,
											"end": 32619,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 32610,
											"end": 32616,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 32606,
											"end": 32620,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 32599,
											"end": 32641,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 32482,
											"end": 32648,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 32482,
											"end": 32648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 32654,
											"end": 33020,
											"name": "tag",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 32654,
											"end": 33020,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 32796,
											"end": 32799,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 32817,
											"end": 32884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "759"
										},
										{
											"begin": 32881,
											"end": 32883,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 32876,
											"end": 32879,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 32817,
											"end": 32884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 32817,
											"end": 32884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 32817,
											"end": 32884,
											"name": "tag",
											"source": 8,
											"value": "759"
										},
										{
											"begin": 32817,
											"end": 32884,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 32810,
											"end": 32884,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 32810,
											"end": 32884,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 32893,
											"end": 32986,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "760"
										},
										{
											"begin": 32982,
											"end": 32985,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 32893,
											"end": 32986,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 32893,
											"end": 32986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 32893,
											"end": 32986,
											"name": "tag",
											"source": 8,
											"value": "760"
										},
										{
											"begin": 32893,
											"end": 32986,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 33011,
											"end": 33013,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 33006,
											"end": 33009,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 33002,
											"end": 33014,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 32995,
											"end": 33014,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 32995,
											"end": 33014,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 32654,
											"end": 33020,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 32654,
											"end": 33020,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 32654,
											"end": 33020,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 32654,
											"end": 33020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 33026,
											"end": 33445,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 33026,
											"end": 33445,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 33192,
											"end": 33196,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 33230,
											"end": 33232,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 33219,
											"end": 33228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 33215,
											"end": 33233,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 33207,
											"end": 33233,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 33207,
											"end": 33233,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 33279,
											"end": 33288,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 33273,
											"end": 33277,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 33269,
											"end": 33289,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 33265,
											"end": 33266,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 33254,
											"end": 33263,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 33250,
											"end": 33267,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 33243,
											"end": 33290,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 33307,
											"end": 33438,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "762"
										},
										{
											"begin": 33433,
											"end": 33437,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 33307,
											"end": 33438,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 33307,
											"end": 33438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 33307,
											"end": 33438,
											"name": "tag",
											"source": 8,
											"value": "762"
										},
										{
											"begin": 33307,
											"end": 33438,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 33299,
											"end": 33438,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 33299,
											"end": 33438,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 33026,
											"end": 33445,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 33026,
											"end": 33445,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 33026,
											"end": 33445,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 33026,
											"end": 33445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"./VestedToken.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addVestingContract(address)": "a00686f1",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"beneficiaryCategories(address)": "4ebc47f8",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"categoryAllocations(string)": "66368fb6",
							"decimals()": "313ce567",
							"getBeneficiaryCategory(address)": "4cf590b0",
							"getCategoryAllocation(string)": "7fb36099",
							"getVestedBalance(address)": "7f58b9d3",
							"initialize(string,string,uint256,address)": "bd3a13f6",
							"isInitialized()": "392e53cd",
							"mintWithVesting(address,uint256,address)": "ecbc5095",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"removeVestingContract(address)": "bc3bea5e",
							"renounceOwnership()": "715018a6",
							"setBeneficiaryCategory(address,string)": "19eccdfd",
							"setCategoryAllocation(string,uint256)": "d6458285",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"vestedBalances(address)": "cb3fdb61",
							"vestingContracts(address)": "37915874"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"}],\"name\":\"BeneficiaryCategorySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CategoryAllocationSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"TokenInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vestingContract\",\"type\":\"address\"}],\"name\":\"VestingContractAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vestingContract\",\"type\":\"address\"}],\"name\":\"VestingContractRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vestingContract\",\"type\":\"address\"}],\"name\":\"addVestingContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"beneficiaryCategories\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"categoryAllocations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"getBeneficiaryCategory\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"}],\"name\":\"getCategoryAllocation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVestedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vestingContract\",\"type\":\"address\"}],\"name\":\"mintWithVesting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vestingContract\",\"type\":\"address\"}],\"name\":\"removeVestingContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"}],\"name\":\"setBeneficiaryCategory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setCategoryAllocation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vestedBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vestingContracts\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"addVestingContract(address)\":{\"details\":\"Add a vesting contract address\",\"params\":{\"vestingContract\":\"Address of the vesting contract\"}},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"burn(uint256)\":{\"details\":\"Burn tokens (owner only)\",\"params\":{\"amount\":\"Amount to burn\"}},\"burnFrom(address,uint256)\":{\"details\":\"Burn tokens from specific address (owner only)\",\"params\":{\"amount\":\"Amount to burn\",\"from\":\"Address to burn from\"}},\"constructor\":{\"details\":\"Constructor for minimal proxy pattern - should not be called directly\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation\"},\"getBeneficiaryCategory(address)\":{\"details\":\"Get beneficiary category\",\"params\":{\"beneficiary\":\"Beneficiary address\"},\"returns\":{\"_0\":\"Category name\"}},\"getCategoryAllocation(string)\":{\"details\":\"Get category allocation\",\"params\":{\"category\":\"Category name\"},\"returns\":{\"_0\":\"Allocation amount\"}},\"getVestedBalance(address)\":{\"details\":\"Get vested balance for an address\",\"params\":{\"account\":\"Address to check\"},\"returns\":{\"_0\":\"Vested balance amount\"}},\"initialize(string,string,uint256,address)\":{\"details\":\"Initialize function for minimal proxy pattern\",\"params\":{\"name_\":\"Token name\",\"owner_\":\"Token owner address\",\"symbol_\":\"Token symbol\",\"totalSupply_\":\"Total token supply\"}},\"isInitialized()\":{\"details\":\"Check if token is initialized\"},\"mintWithVesting(address,uint256,address)\":{\"details\":\"Mint tokens with vesting allocation\",\"params\":{\"amount\":\"Token amount\",\"to\":\"Recipient address\",\"vestingContract\":\"Vesting contract address\"}},\"name()\":{\"details\":\"Returns the name of the token\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Pause token transfers\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"removeVestingContract(address)\":{\"details\":\"Remove a vesting contract address\",\"params\":{\"vestingContract\":\"Address of the vesting contract\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setBeneficiaryCategory(address,string)\":{\"details\":\"Set beneficiary category\",\"params\":{\"beneficiary\":\"Beneficiary address\",\"category\":\"Category name\"}},\"setCategoryAllocation(string,uint256)\":{\"details\":\"Set allocation for a category\",\"params\":{\"amount\":\"Allocation amount\",\"category\":\"Category name\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Unpause token transfers\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"./VestedToken.sol\":\"VestedToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"./VestedToken.sol\":{\"keccak256\":\"0x059e4e66c43997e4b5018f8575ecff1619b01ba3564b9bd76d58ac881d07fdd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d04514fc9c334f11d59f6074a5022534717f3b3f4ae3f49f8c900cb5e74c510\",\"dweb:/ipfs/QmdRasB512mGWBFZVEY4hxDHS1UbqtqERhWzs95bkgN2Mt\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 907,
								"contract": "./VestedToken.sol:VestedToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 913,
								"contract": "./VestedToken.sol:VestedToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 915,
								"contract": "./VestedToken.sol:VestedToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 917,
								"contract": "./VestedToken.sol:VestedToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 919,
								"contract": "./VestedToken.sol:VestedToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 500,
								"contract": "./VestedToken.sol:VestedToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 794,
								"contract": "./VestedToken.sol:VestedToken",
								"label": "_paused",
								"offset": 20,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 12,
								"contract": "./VestedToken.sol:VestedToken",
								"label": "_name",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 14,
								"contract": "./VestedToken.sol:VestedToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "7",
								"type": "t_string_storage"
							},
							{
								"astId": 16,
								"contract": "./VestedToken.sol:VestedToken",
								"label": "_decimals",
								"offset": 0,
								"slot": "8",
								"type": "t_uint8"
							},
							{
								"astId": 20,
								"contract": "./VestedToken.sol:VestedToken",
								"label": "vestedBalances",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 24,
								"contract": "./VestedToken.sol:VestedToken",
								"label": "vestingContracts",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 28,
								"contract": "./VestedToken.sol:VestedToken",
								"label": "categoryAllocations",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_string_memory_ptr,t_uint256)"
							},
							{
								"astId": 32,
								"contract": "./VestedToken.sol:VestedToken",
								"label": "beneficiaryCategories",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_string_storage)"
							},
							{
								"astId": 34,
								"contract": "./VestedToken.sol:VestedToken",
								"label": "_initialized",
								"offset": 0,
								"slot": "13",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_string_memory_ptr,t_uint256)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 500,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 794,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 907,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 913,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 915,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 917,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 919,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"./VestedToken.sol": {
				"ast": {
					"absolutePath": "./VestedToken.sol",
					"exportedSymbols": {
						"Context": [
							1533
						],
						"ERC20": [
							1399
						],
						"IERC20": [
							1477
						],
						"IERC20Errors": [
							681
						],
						"IERC20Metadata": [
							1503
						],
						"Ownable": [
							639
						],
						"Pausable": [
							884
						],
						"VestedToken": [
							491
						]
					},
					"id": 492,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 492,
							"sourceUnit": 1400,
							"src": "58:55:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 492,
							"sourceUnit": 640,
							"src": "114:52:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 492,
							"sourceUnit": 885,
							"src": "167:55:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "ERC20",
										"nameLocations": [
											"248:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1399,
										"src": "248:5:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "248:5:0"
								},
								{
									"baseName": {
										"id": 7,
										"name": "Ownable",
										"nameLocations": [
											"255:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 639,
										"src": "255:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "255:7:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "Pausable",
										"nameLocations": [
											"264:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 884,
										"src": "264:8:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "264:8:0"
								}
							],
							"canonicalName": "VestedToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 491,
							"linearizedBaseContracts": [
								491,
								884,
								639,
								1399,
								681,
								1503,
								1477,
								1533
							],
							"name": "VestedToken",
							"nameLocation": "233:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 12,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "316:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 491,
									"src": "301:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 11,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "301:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 14,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "342:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 491,
									"src": "327:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 13,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "327:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 16,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "369:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 491,
									"src": "355:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 15,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "355:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "cb3fdb61",
									"id": 20,
									"mutability": "mutable",
									"name": "vestedBalances",
									"nameLocation": "444:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 491,
									"src": "409:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 19,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 17,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "417:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "409:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 18,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "428:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "37915874",
									"id": 24,
									"mutability": "mutable",
									"name": "vestingContracts",
									"nameLocation": "496:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 491,
									"src": "464:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 23,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 21,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "472:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "464:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 22,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "483:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "66368fb6",
									"id": 28,
									"mutability": "mutable",
									"name": "categoryAllocations",
									"nameLocation": "582:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 491,
									"src": "548:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
										"typeString": "mapping(string => uint256)"
									},
									"typeName": {
										"id": 27,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 25,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "556:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"nodeType": "Mapping",
										"src": "548:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
											"typeString": "mapping(string => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 26,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "566:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4ebc47f8",
									"id": 32,
									"mutability": "mutable",
									"name": "beneficiaryCategories",
									"nameLocation": "641:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 491,
									"src": "607:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
										"typeString": "mapping(address => string)"
									},
									"typeName": {
										"id": 31,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 29,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "615:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "607:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
											"typeString": "mapping(address => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 30,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "626:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 34,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "727:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 491,
									"src": "714:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 33,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "714:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "6a45208724d4b6f6774a21924d8ada0231f197811681096d5fd6b5f22e6e73d3",
									"id": 38,
									"name": "VestingContractAdded",
									"nameLocation": "766:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"indexed": true,
												"mutability": "mutable",
												"name": "vestingContract",
												"nameLocation": "803:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "787:31:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "787:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "786:33:0"
									},
									"src": "760:60:0"
								},
								{
									"anonymous": false,
									"eventSelector": "93c4daca93fe23045ea63d803db724ccff33790f1b2434276479f728a4e38f99",
									"id": 42,
									"name": "VestingContractRemoved",
									"nameLocation": "831:22:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"indexed": true,
												"mutability": "mutable",
												"name": "vestingContract",
												"nameLocation": "870:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "854:31:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 39,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "853:33:0"
									},
									"src": "825:62:0"
								},
								{
									"anonymous": false,
									"eventSelector": "40595e4d22661278feeff293e3de4334b9132b0bf1c2aac89a8ec5aedb2c11a4",
									"id": 48,
									"name": "CategoryAllocationSet",
									"nameLocation": "898:21:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"indexed": false,
												"mutability": "mutable",
												"name": "category",
												"nameLocation": "927:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "920:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 43,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "920:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "945:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "937:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "937:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "919:33:0"
									},
									"src": "892:61:0"
								},
								{
									"anonymous": false,
									"eventSelector": "a110b2daa9b9328e235e98c75405f18d092b0d0edd4574cc8d80a41908fbf0bf",
									"id": 54,
									"name": "BeneficiaryCategorySet",
									"nameLocation": "964:22:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "1003:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "987:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "987:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"indexed": false,
												"mutability": "mutable",
												"name": "category",
												"nameLocation": "1023:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 51,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1016:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "986:46:0"
									},
									"src": "958:75:0"
								},
								{
									"anonymous": false,
									"eventSelector": "12bdfd2f29cf0194cd626fbd8a4b8fd1de36748d1a1b936eac39fe35845c585a",
									"id": 64,
									"name": "TokenInitialized",
									"nameLocation": "1044:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1068:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "1061:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 55,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"indexed": false,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "1081:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "1074:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 57,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1074:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalSupply",
												"nameLocation": "1097:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "1089:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1089:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1118:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "1110:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:64:0"
									},
									"src": "1038:87:0"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "1277:141:0",
										"statements": []
									},
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "1131:93:0",
										"text": " @dev Constructor for minimal proxy pattern - should not be called directly"
									},
									"id": 77,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "",
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1249:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												{
													"hexValue": "",
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1253:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												}
											],
											"id": 70,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 67,
												"name": "ERC20",
												"nameLocations": [
													"1243:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1399,
												"src": "1243:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1243:13:0"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 72,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1265:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1269:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1265:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 74,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 71,
												"name": "Ownable",
												"nameLocations": [
													"1257:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 639,
												"src": "1257:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1257:19:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1240:2:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1277:0:0"
									},
									"scope": 491,
									"src": "1229:189:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "1800:584:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1818:13:0",
															"subExpression": {
																"id": 90,
																"name": "_initialized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "1819:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920696e697469616c697a6564",
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1833:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
																"typeString": "literal_string \"Already initialized\""
															},
															"value": "Already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
																"typeString": "literal_string \"Already initialized\""
															}
														],
														"id": 89,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1810:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1810:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "1810:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 98,
																			"name": "name_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 80,
																			"src": "1879:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 97,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1873:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 96,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "1873:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 99,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1873:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1886:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1873:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1895:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1873:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e616d652063616e6e6f7420626520656d707479",
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1898:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1786c81c5bf1c93c94a3e63df6f65dc894961d7358d06345daa60c7e17cb737a",
																"typeString": "literal_string \"Name cannot be empty\""
															},
															"value": "Name cannot be empty"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1786c81c5bf1c93c94a3e63df6f65dc894961d7358d06345daa60c7e17cb737a",
																"typeString": "literal_string \"Name cannot be empty\""
															}
														],
														"id": 95,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1865:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1865:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "1865:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 109,
																			"name": "symbol_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 82,
																			"src": "1945:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1939:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 107,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "1939:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1939:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1954:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1939:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1963:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1939:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53796d626f6c2063616e6e6f7420626520656d707479",
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1966:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_20cee37dc7fe26f517097d60d14df81d928f0c3809e13566d58f93f7e1ac6c02",
																"typeString": "literal_string \"Symbol cannot be empty\""
															},
															"value": "Symbol cannot be empty"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_20cee37dc7fe26f517097d60d14df81d928f0c3809e13566d58f93f7e1ac6c02",
																"typeString": "literal_string \"Symbol cannot be empty\""
															}
														],
														"id": 106,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1931:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1931:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "1931:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 118,
																"name": "totalSupply_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 84,
																"src": "2009:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2024:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2009:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f74616c20737570706c79206d7573742062652067726561746572207468616e2030",
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2027:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dffa1347d001d284b3ea77e5eb12d6d85d59db5d7ea756b52bbab3975171388",
																"typeString": "literal_string \"Total supply must be greater than 0\""
															},
															"value": "Total supply must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dffa1347d001d284b3ea77e5eb12d6d85d59db5d7ea756b52bbab3975171388",
																"typeString": "literal_string \"Total supply must be greater than 0\""
															}
														],
														"id": 117,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2001:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2001:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "2001:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 125,
																"name": "owner_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 86,
																"src": "2083:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2101:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2093:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 126,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2093:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2093:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2083:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206f776e65722061646472657373",
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2105:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3",
																"typeString": "literal_string \"Invalid owner address\""
															},
															"value": "Invalid owner address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3",
																"typeString": "literal_string \"Invalid owner address\""
															}
														],
														"id": 124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2075:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2075:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 133,
												"nodeType": "ExpressionStatement",
												"src": "2075:54:0"
											},
											{
												"expression": {
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 134,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "2140:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 135,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "2148:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2140:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "2140:13:0"
											},
											{
												"expression": {
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 138,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "2163:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 139,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "2173:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2163:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "2163:17:0"
											},
											{
												"expression": {
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 142,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "2190:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3138",
														"id": 143,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2202:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "2190:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "2190:14:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 147,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2234:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 146,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "2215:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2215:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "2215:26:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 151,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2257:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 152,
															"name": "totalSupply_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "2265:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 150,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1239,
														"src": "2251:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2251:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "2251:27:0"
											},
											{
												"expression": {
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 155,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "2288:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2303:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2288:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "ExpressionStatement",
												"src": "2288:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 160,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "2340:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 161,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "2347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 162,
															"name": "totalSupply_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "2356:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 163,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2370:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "TokenInitialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "2323:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (string memory,string memory,uint256,address)"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2323:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 165,
												"nodeType": "EmitStatement",
												"src": "2318:59:0"
											}
										]
									},
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "1424:222:0",
										"text": " @dev Initialize function for minimal proxy pattern\n @param name_ Token name\n @param symbol_ Token symbol\n @param totalSupply_ Total token supply\n @param owner_ Token owner address"
									},
									"functionSelector": "bd3a13f6",
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "1660:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1694:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1680:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 79,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1680:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1723:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1709:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 81,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1709:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "totalSupply_",
												"nameLocation": "1748:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1740:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1740:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "owner_",
												"nameLocation": "1778:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1770:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1770:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1670:120:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1800:0:0"
									},
									"scope": 491,
									"src": "1651:733:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										945
									],
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "2517:29:0",
										"statements": [
											{
												"expression": {
													"id": 174,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 12,
													"src": "2534:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 173,
												"id": 175,
												"nodeType": "Return",
												"src": "2527:12:0"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "2390:53:0",
										"text": " @dev Returns the name of the token"
									},
									"functionSelector": "06fdde03",
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2457:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 170,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2484:8:0"
									},
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2461:2:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2502:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 171,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2502:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2501:15:0"
									},
									"scope": 491,
									"src": "2448:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										954
									],
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "2683:31:0",
										"statements": [
											{
												"expression": {
													"id": 184,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 14,
													"src": "2700:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 183,
												"id": 185,
												"nodeType": "Return",
												"src": "2693:14:0"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "2552:55:0",
										"text": " @dev Returns the symbol of the token"
									},
									"functionSelector": "95d89b41",
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2621:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 180,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2650:8:0"
									},
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2627:2:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "2668:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 181,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2668:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:15:0"
									},
									"scope": 491,
									"src": "2612:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										963
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2880:33:0",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 16,
													"src": "2897:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "2890:16:0"
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "2720:90:0",
										"text": " @dev Returns the number of decimals used to get its user representation"
									},
									"functionSelector": "313ce567",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2824:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 190,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2855:8:0"
									},
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2832:2:0"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2873:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 191,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2873:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2872:7:0"
									},
									"scope": 491,
									"src": "2815:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "3031:36:0",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "3048:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "3041:19:0"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2919:53:0",
										"text": " @dev Check if token is initialized"
									},
									"functionSelector": "392e53cd",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isInitialized",
									"nameLocation": "2986:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2999:2:0"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3025:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3025:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3024:6:0"
									},
									"scope": 491,
									"src": "2977:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "3266:273:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 215,
																"name": "vestingContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "3284:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3311:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3303:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 216,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3303:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3303:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3284:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642076657374696e6720636f6e7472616374",
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3315:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91ed2a964ce781c29e5cde52af0ccc59d905b442fa32093ea6af77d3cbfe5d3d",
																"typeString": "literal_string \"Invalid vesting contract\""
															},
															"value": "Invalid vesting contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91ed2a964ce781c29e5cde52af0ccc59d905b442fa32093ea6af77d3cbfe5d3d",
																"typeString": "literal_string \"Invalid vesting contract\""
															}
														],
														"id": 214,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3276:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3276:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "3276:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3360:34:0",
															"subExpression": {
																"baseExpression": {
																	"id": 225,
																	"name": "vestingContracts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "3361:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 227,
																"indexExpression": {
																	"id": 226,
																	"name": "vestingContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "3378:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3361:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "56657374696e6720636f6e747261637420616c7265616479206164646564",
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3396:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dcee081fa6a39e6a0e12e28fbf5e15b1aca4f0ace1affdff0678079af7cdd7c6",
																"typeString": "literal_string \"Vesting contract already added\""
															},
															"value": "Vesting contract already added"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dcee081fa6a39e6a0e12e28fbf5e15b1aca4f0ace1affdff0678079af7cdd7c6",
																"typeString": "literal_string \"Vesting contract already added\""
															}
														],
														"id": 224,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3352:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3352:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 231,
												"nodeType": "ExpressionStatement",
												"src": "3352:77:0"
											},
											{
												"expression": {
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 232,
															"name": "vestingContracts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "3440:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 234,
														"indexExpression": {
															"id": 233,
															"name": "vestingContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "3457:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3440:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 235,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3476:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3440:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "3440:40:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 239,
															"name": "vestingContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "3516:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 238,
														"name": "VestingContractAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "3495:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3495:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "EmitStatement",
												"src": "3490:42:0"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3073:116:0",
										"text": " @dev Add a vesting contract address\n @param vestingContract Address of the vesting contract"
									},
									"functionSelector": "a00686f1",
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 212,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 211,
												"name": "onlyOwner",
												"nameLocations": [
													"3256:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 550,
												"src": "3256:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3256:9:0"
										}
									],
									"name": "addVestingContract",
									"nameLocation": "3203:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "vestingContract",
												"nameLocation": "3230:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "3222:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3222:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3221:25:0"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3266:0:0"
									},
									"scope": 491,
									"src": "3194:345:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "3744:195:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 252,
																"name": "vestingContracts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "3762:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 254,
															"indexExpression": {
																"id": 253,
																"name": "vestingContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "3779:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3762:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "56657374696e6720636f6e7472616374206e6f7420666f756e64",
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3797:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bf132a74ab9d989cbba0a592d9e33ab8526722271be7ee487ab2457cedd6bfe7",
																"typeString": "literal_string \"Vesting contract not found\""
															},
															"value": "Vesting contract not found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bf132a74ab9d989cbba0a592d9e33ab8526722271be7ee487ab2457cedd6bfe7",
																"typeString": "literal_string \"Vesting contract not found\""
															}
														],
														"id": 251,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3754:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3754:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3754:72:0"
											},
											{
												"expression": {
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 258,
															"name": "vestingContracts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "3837:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 260,
														"indexExpression": {
															"id": 259,
															"name": "vestingContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "3854:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3837:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3873:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3837:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "3837:41:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 265,
															"name": "vestingContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "3916:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 264,
														"name": "VestingContractRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "3893:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3893:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 267,
												"nodeType": "EmitStatement",
												"src": "3888:44:0"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "3545:119:0",
										"text": " @dev Remove a vesting contract address\n @param vestingContract Address of the vesting contract"
									},
									"functionSelector": "bc3bea5e",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 249,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 248,
												"name": "onlyOwner",
												"nameLocations": [
													"3734:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 550,
												"src": "3734:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3734:9:0"
										}
									],
									"name": "removeVestingContract",
									"nameLocation": "3678:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "vestingContract",
												"nameLocation": "3708:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "3700:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3700:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3699:25:0"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3744:0:0"
									},
									"scope": 491,
									"src": "3669:270:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "4169:245:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 282,
																			"name": "category",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 272,
																			"src": "4193:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4187:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 280,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "4187:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4187:15:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4203:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4187:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4212:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4187:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43617465676f72792063616e6e6f7420626520656d707479",
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4215:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_55949bb45445f266789947ce8dce817b41a2ade13e545251c0dd8fcc5e857fb2",
																"typeString": "literal_string \"Category cannot be empty\""
															},
															"value": "Category cannot be empty"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_55949bb45445f266789947ce8dce817b41a2ade13e545251c0dd8fcc5e857fb2",
																"typeString": "literal_string \"Category cannot be empty\""
															}
														],
														"id": 279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4179:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4179:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 289,
												"nodeType": "ExpressionStatement",
												"src": "4179:63:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 291,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "4260:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4269:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4260:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4272:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4252:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4252:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "4252:52:0"
											},
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 297,
															"name": "categoryAllocations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "4315:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																"typeString": "mapping(string memory => uint256)"
															}
														},
														"id": 299,
														"indexExpression": {
															"id": 298,
															"name": "category",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "4335:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4315:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 300,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "4347:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4315:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "4315:38:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 304,
															"name": "category",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "4390:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 305,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "4400:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 303,
														"name": "CategoryAllocationSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "4368:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (string memory,uint256)"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4368:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 307,
												"nodeType": "EmitStatement",
												"src": "4363:44:0"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "3945:129:0",
										"text": " @dev Set allocation for a category\n @param category Category name\n @param amount Allocation amount"
									},
									"functionSelector": "d6458285",
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 277,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 276,
												"name": "onlyOwner",
												"nameLocations": [
													"4159:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 550,
												"src": "4159:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4159:9:0"
										}
									],
									"name": "setCategoryAllocation",
									"nameLocation": "4088:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "category",
												"nameLocation": "4124:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "4110:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 271,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4110:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4142:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "4134:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4134:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4109:40:0"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4169:0:0"
									},
									"scope": 491,
									"src": "4079:335:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "4652:271:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 320,
																"name": "beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 312,
																"src": "4670:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4693:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4685:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 321,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4685:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 324,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4685:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4670:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642062656e65666963696172792061646472657373",
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4697:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89",
																"typeString": "literal_string \"Invalid beneficiary address\""
															},
															"value": "Invalid beneficiary address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89",
																"typeString": "literal_string \"Invalid beneficiary address\""
															}
														],
														"id": 319,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4662:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4662:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 328,
												"nodeType": "ExpressionStatement",
												"src": "4662:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 332,
																			"name": "category",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 314,
																			"src": "4751:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4745:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 330,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "4745:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4745:15:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4761:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4745:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4770:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4745:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43617465676f72792063616e6e6f7420626520656d707479",
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4773:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_55949bb45445f266789947ce8dce817b41a2ade13e545251c0dd8fcc5e857fb2",
																"typeString": "literal_string \"Category cannot be empty\""
															},
															"value": "Category cannot be empty"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_55949bb45445f266789947ce8dce817b41a2ade13e545251c0dd8fcc5e857fb2",
																"typeString": "literal_string \"Category cannot be empty\""
															}
														],
														"id": 329,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4737:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4737:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "4737:63:0"
											},
											{
												"expression": {
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 340,
															"name": "beneficiaryCategories",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "4811:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
																"typeString": "mapping(address => string storage ref)"
															}
														},
														"id": 342,
														"indexExpression": {
															"id": 341,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "4833:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4811:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 343,
														"name": "category",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "4848:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "4811:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "4811:45:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 347,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "4894:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 348,
															"name": "category",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "4907:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 346,
														"name": "BeneficiaryCategorySet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "4871:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,string memory)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4871:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 350,
												"nodeType": "EmitStatement",
												"src": "4866:50:0"
											}
										]
									},
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "4420:131:0",
										"text": " @dev Set beneficiary category\n @param beneficiary Beneficiary address\n @param category Category name"
									},
									"functionSelector": "19eccdfd",
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 317,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 316,
												"name": "onlyOwner",
												"nameLocations": [
													"4642:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 550,
												"src": "4642:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4642:9:0"
										}
									],
									"name": "setBeneficiaryCategory",
									"nameLocation": "4565:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "4596:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "4588:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4588:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "category",
												"nameLocation": "4623:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "4609:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 313,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4609:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4587:45:0"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4652:0:0"
									},
									"scope": 491,
									"src": "4556:367:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 399,
										"nodeType": "Block",
										"src": "5244:284:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 365,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "5262:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5276:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5268:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 366,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5268:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5268:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5262:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726563697069656e74",
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5280:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d",
																"typeString": "literal_string \"Invalid recipient\""
															},
															"value": "Invalid recipient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d",
																"typeString": "literal_string \"Invalid recipient\""
															}
														],
														"id": 364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5254:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5254:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "5254:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 375,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "5318:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5327:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5318:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5330:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 374,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5310:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5310:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "5310:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 382,
																"name": "vestingContracts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "5380:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 384,
															"indexExpression": {
																"id": 383,
																"name": "vestingContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "5397:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5380:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642076657374696e6720636f6e7472616374",
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5415:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91ed2a964ce781c29e5cde52af0ccc59d905b442fa32093ea6af77d3cbfe5d3d",
																"typeString": "literal_string \"Invalid vesting contract\""
															},
															"value": "Invalid vesting contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91ed2a964ce781c29e5cde52af0ccc59d905b442fa32093ea6af77d3cbfe5d3d",
																"typeString": "literal_string \"Invalid vesting contract\""
															}
														],
														"id": 381,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5372:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5372:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "5372:70:0"
											},
											{
												"expression": {
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 388,
															"name": "vestedBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "5453:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 390,
														"indexExpression": {
															"id": 389,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "5468:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5453:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 391,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "5475:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5453:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 393,
												"nodeType": "ExpressionStatement",
												"src": "5453:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 395,
															"name": "vestingContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "5497:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 396,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "5514:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 394,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1239,
														"src": "5491:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5491:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "5491:30:0"
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "4929:183:0",
										"text": " @dev Mint tokens with vesting allocation\n @param to Recipient address\n @param amount Token amount\n @param vestingContract Vesting contract address"
									},
									"functionSelector": "ecbc5095",
									"id": 400,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 362,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 361,
												"name": "onlyOwner",
												"nameLocations": [
													"5234:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 550,
												"src": "5234:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5234:9:0"
										}
									],
									"name": "mintWithVesting",
									"nameLocation": "5126:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5159:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "5151:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5151:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5179:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "5171:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5171:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "vestingContract",
												"nameLocation": "5203:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "5195:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5195:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5141:83:0"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5244:0:0"
									},
									"scope": 491,
									"src": "5117:411:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "5747:47:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 408,
														"name": "vestedBalances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "5764:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 410,
													"indexExpression": {
														"id": 409,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "5779:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5764:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 407,
												"id": 411,
												"nodeType": "Return",
												"src": "5757:30:0"
											}
										]
									},
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "5534:133:0",
										"text": " @dev Get vested balance for an address\n @param account Address to check\n @return Vested balance amount"
									},
									"functionSelector": "7f58b9d3",
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVestedBalance",
									"nameLocation": "5681:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5706:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "5698:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5698:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5697:17:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "5738:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5737:9:0"
									},
									"scope": 491,
									"src": "5672:122:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "6009:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 421,
														"name": "categoryAllocations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "6026:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
															"typeString": "mapping(string memory => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "category",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "6046:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6026:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 420,
												"id": 424,
												"nodeType": "Return",
												"src": "6019:36:0"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "5800:117:0",
										"text": " @dev Get category allocation\n @param category Category name\n @return Allocation amount"
									},
									"functionSelector": "7fb36099",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCategoryAllocation",
									"nameLocation": "5931:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "category",
												"nameLocation": "5967:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "5953:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 415,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5953:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5952:24:0"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "6000:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5999:9:0"
									},
									"scope": 491,
									"src": "5922:140:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 438,
										"nodeType": "Block",
										"src": "6287:58:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 434,
														"name": "beneficiaryCategories",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "6304:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
															"typeString": "mapping(address => string storage ref)"
														}
													},
													"id": 436,
													"indexExpression": {
														"id": 435,
														"name": "beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "6326:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6304:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 433,
												"id": 437,
												"nodeType": "Return",
												"src": "6297:41:0"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "6068:123:0",
										"text": " @dev Get beneficiary category\n @param beneficiary Beneficiary address\n @return Category name"
									},
									"functionSelector": "4cf590b0",
									"id": 439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeneficiaryCategory",
									"nameLocation": "6205:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "6236:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "6228:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6228:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6227:21:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "6272:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 431,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6272:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6271:15:0"
									},
									"scope": 491,
									"src": "6196:149:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "6437:25:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 445,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 867,
														"src": "6447:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6447:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "6447:8:0"
											}
										]
									},
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "6351:45:0",
										"text": " @dev Pause token transfers"
									},
									"functionSelector": "8456cb59",
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 443,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 442,
												"name": "onlyOwner",
												"nameLocations": [
													"6427:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 550,
												"src": "6427:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6427:9:0"
										}
									],
									"name": "pause",
									"nameLocation": "6410:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6415:2:0"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6437:0:0"
									},
									"scope": 491,
									"src": "6401:61:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "6558:27:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 455,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "6568:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6568:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "6568:10:0"
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "6468:47:0",
										"text": " @dev Unpause token transfers"
									},
									"functionSelector": "3f4ba83a",
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 453,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 452,
												"name": "onlyOwner",
												"nameLocations": [
													"6548:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 550,
												"src": "6548:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6548:9:0"
										}
									],
									"name": "unpause",
									"nameLocation": "6529:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6536:2:0"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6558:0:0"
									},
									"scope": 491,
									"src": "6520:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "6729:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 468,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6745:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6749:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6745:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "6757:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "6739:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6739:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "6739:25:0"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "6591:84:0",
										"text": " @dev Burn tokens (owner only)\n @param amount Amount to burn"
									},
									"functionSelector": "42966c68",
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 465,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 464,
												"name": "onlyOwner",
												"nameLocations": [
													"6719:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 550,
												"src": "6719:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6719:9:0"
										}
									],
									"name": "burn",
									"nameLocation": "6689:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6702:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "6694:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6693:16:0"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6729:0:0"
									},
									"scope": 491,
									"src": "6680:91:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "6995:36:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 485,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "7011:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "7017:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 484,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "7005:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7005:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "7005:19:0"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "6777:146:0",
										"text": " @dev Burn tokens from specific address (owner only)\n @param from Address to burn from\n @param amount Amount to burn"
									},
									"functionSelector": "79cc6790",
									"id": 490,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 482,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 481,
												"name": "onlyOwner",
												"nameLocations": [
													"6985:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 550,
												"src": "6985:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6985:9:0"
										}
									],
									"name": "burnFrom",
									"nameLocation": "6937:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6954:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "6946:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6946:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6968:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "6960:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6960:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6945:30:0"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6995:0:0"
									},
									"scope": 491,
									"src": "6928:103:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 492,
							"src": "224:6809:0",
							"usedErrors": [
								505,
								510,
								651,
								656,
								661,
								670,
								675,
								680
							],
							"usedEvents": [
								38,
								42,
								48,
								54,
								64,
								516,
								787,
								792,
								1411,
								1420
							]
						}
					],
					"src": "32:7001:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1533
						],
						"Ownable": [
							639
						]
					},
					"id": 640,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 493,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 495,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 640,
							"sourceUnit": 1534,
							"src": "128:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 494,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1533,
										"src": "136:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 497,
										"name": "Context",
										"nameLocations": [
											"692:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1533,
										"src": "692:7:1"
									},
									"id": 498,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 496,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 639,
							"linearizedBaseContracts": [
								639,
								1533
							],
							"name": "Ownable",
							"nameLocation": "681:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 500,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 639,
									"src": "706:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 499,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 505,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "858:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:1"
									},
									"src": "825:50:1"
								},
								{
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 510,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "994:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:1"
									},
									"src": "968:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 516,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "1042:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "1073:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:1"
									},
									"src": "1015:84:1"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "1259:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 522,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "1273:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 523,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 526,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 536,
												"nodeType": "IfStatement",
												"src": "1269:95:1",
												"trueBody": {
													"id": 535,
													"nodeType": "Block",
													"src": "1301:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 531,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 529,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 528,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 510,
																	"src": "1322:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 534,
															"nodeType": "RevertStatement",
															"src": "1315:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 538,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "1392:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 537,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "1373:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:1"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 542,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "1237:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:1"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:1"
									},
									"scope": 639,
									"src": "1225:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "1521:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 545,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "1531:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:1"
											},
											{
												"id": 548,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:1"
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 550,
									"name": "onlyOwner",
									"nameLocation": "1509:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:1"
									},
									"src": "1500:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "1693:30:1",
										"statements": [
											{
												"expression": {
													"id": 556,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 500,
													"src": "1710:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 555,
												"id": 557,
												"nodeType": "Return",
												"src": "1703:13:1"
											}
										]
									},
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:1"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "1684:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:1"
									},
									"scope": 639,
									"src": "1638:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "1841:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 563,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "1855:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 565,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1515,
															"src": "1866:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 574,
												"nodeType": "IfStatement",
												"src": "1851:101:1",
												"trueBody": {
													"id": 573,
													"nodeType": "Block",
													"src": "1880:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 569,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1515,
																			"src": "1928:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 568,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "1901:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 572,
															"nodeType": "RevertStatement",
															"src": "1894:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:1"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:1"
									},
									"scope": 639,
									"src": "1796:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "2347:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 583,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 582,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "2357:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:1"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 580,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 579,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 550,
												"src": "2337:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:1"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:1"
									},
									"scope": 639,
									"src": "2293:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 617,
										"nodeType": "Block",
										"src": "2613:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 598,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "2627:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 599,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 612,
												"nodeType": "IfStatement",
												"src": "2623:91:1",
												"trueBody": {
													"id": 611,
													"nodeType": "Block",
													"src": "2651:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 607,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 605,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 604,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 510,
																	"src": "2672:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 610,
															"nodeType": "RevertStatement",
															"src": "2665:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 614,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "2742:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 613,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "2723:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:1"
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 618,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 596,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 595,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 550,
												"src": "2603:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "2570:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:1"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:1"
									},
									"scope": 639,
									"src": "2543:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "2975:124:1",
										"statements": [
											{
												"assignments": [
													625
												],
												"declarations": [
													{
														"constant": false,
														"id": 625,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 637,
														"src": "2985:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 624,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 627,
												"initialValue": {
													"id": 626,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 500,
													"src": "3004:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:1"
											},
											{
												"expression": {
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 628,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "3020:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 629,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "3029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 631,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 633,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "3073:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "3083:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 632,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "3052:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "EmitStatement",
												"src": "3047:45:1"
											}
										]
									},
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "2940:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:1"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:1"
									},
									"scope": 639,
									"src": "2912:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 640,
							"src": "663:2438:1",
							"usedErrors": [
								505,
								510
							],
							"usedEvents": [
								516
							]
						}
					],
					"src": "102:3000:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							776
						],
						"IERC20Errors": [
							681
						],
						"IERC721Errors": [
							729
						]
					},
					"id": 777,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 641,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 642,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:2",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 681,
							"linearizedBaseContracts": [
								681
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 651,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "654:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "670:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "687:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:2"
									},
									"src": "623:80:2"
								},
								{
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 656,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "891:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:2"
									},
									"src": "866:41:2"
								},
								{
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 661,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "1104:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:2"
									},
									"src": "1077:45:2"
								},
								{
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 670,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "1511:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "1528:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "1547:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:2"
									},
									"src": "1478:85:2"
								},
								{
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 675,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "1775:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:2"
									},
									"src": "1748:45:2"
								},
								{
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 680,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "2025:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:2"
									},
									"src": "1999:43:2"
								}
							],
							"scope": 777,
							"src": "280:1764:2",
							"usedErrors": [
								651,
								656,
								661,
								670,
								675,
								680
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 682,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:2",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 687,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "2469:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:2"
									},
									"src": "2444:40:2"
								},
								{
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 692,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "2656:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:2"
									},
									"src": "2627:46:2"
								},
								{
									"documentation": {
										"id": 693,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 701,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "3000:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "3016:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "3033:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:2"
									},
									"src": "2973:75:2"
								},
								{
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 706,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "3237:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:2"
									},
									"src": "3211:42:2"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 711,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "3451:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:2"
									},
									"src": "3423:46:2"
								},
								{
									"documentation": {
										"id": 712,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 718,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "3760:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "3778:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:2"
									},
									"src": "3727:68:2"
								},
								{
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 723,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "4008:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:2"
									},
									"src": "3980:46:2"
								},
								{
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 728,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "4262:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:2"
									},
									"src": "4234:46:2"
								}
							],
							"scope": 777,
							"src": "2190:2092:2",
							"usedErrors": [
								687,
								692,
								701,
								706,
								711,
								718,
								723,
								728
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 730,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:2",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 776,
							"linearizedBaseContracts": [
								776
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 741,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "4860:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "4876:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "4893:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "4909:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:2"
									},
									"src": "4827:99:2"
								},
								{
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 746,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "5116:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:2"
									},
									"src": "5089:43:2"
								},
								{
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 751,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "5331:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:2"
									},
									"src": "5302:47:2"
								},
								{
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 758,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "5651:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "5669:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:2"
									},
									"src": "5616:68:2"
								},
								{
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 763,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "5898:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:2"
									},
									"src": "5869:47:2"
								},
								{
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 768,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "6153:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:2"
									},
									"src": "6124:47:2"
								},
								{
									"documentation": {
										"id": 769,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 775,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "6494:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "6513:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:2"
									},
									"src": "6462:73:2"
								}
							],
							"scope": 777,
							"src": "4430:2107:2",
							"usedErrors": [
								741,
								746,
								751,
								758,
								763,
								768,
								775
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1533
						],
						"Pausable": [
							884
						]
					},
					"id": 885,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 778,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 779,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 885,
							"sourceUnit": 1534,
							"src": "130:30:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 781,
										"name": "Context",
										"nameLocations": [
											"632:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1533,
										"src": "632:7:3"
									},
									"id": 782,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:3"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 780,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:3",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 884,
							"linearizedBaseContracts": [
								884,
								1533
							],
							"name": "Pausable",
							"nameLocation": "620:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:3",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 787,
									"name": "Paused",
									"nameLocation": "730:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "737:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:3"
									},
									"src": "724:30:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 788,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:3",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 792,
									"name": "Unpaused",
									"nameLocation": "841:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "850:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:3"
									},
									"src": "835:32:3"
								},
								{
									"constant": false,
									"id": 794,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 884,
									"src": "873:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 793,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "986:32:3",
										"statements": [
											{
												"expression": {
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 798,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "996:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 799,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 801,
												"nodeType": "ExpressionStatement",
												"src": "996:15:3"
											}
										]
									},
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:3",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 803,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:3"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:3"
									},
									"scope": 884,
									"src": "972:46:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "1229:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 806,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "1239:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 808,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:3"
											},
											{
												"id": 809,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:3"
											}
										]
									},
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:3",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 811,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:3"
									},
									"src": "1204:72:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "1476:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 814,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "1486:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 816,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:3"
											},
											{
												"id": 817,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:3"
											}
										]
									},
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:3",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 819,
									"name": "whenPaused",
									"nameLocation": "1463:10:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:3"
									},
									"src": "1454:66:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "1668:31:3",
										"statements": [
											{
												"expression": {
													"id": 825,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 794,
													"src": "1685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 824,
												"id": 826,
												"nodeType": "Return",
												"src": "1678:14:3"
											}
										]
									},
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:3",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:3"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "1662:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 822,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:3"
									},
									"scope": 884,
									"src": "1615:84:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 839,
										"nodeType": "Block",
										"src": "1818:55:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:3",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 833,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "1837:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 832,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 838,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:3"
											}
										]
									},
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:3",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:3"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:3"
									},
									"scope": 884,
									"src": "1767:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 850,
										"nodeType": "Block",
										"src": "1993:58:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 845,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 828,
																"src": "2011:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 844,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 849,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:3"
											}
										]
									},
									"documentation": {
										"id": 841,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:3",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:3"
									},
									"scope": 884,
									"src": "1945:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "2235:66:3",
										"statements": [
											{
												"expression": {
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 857,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "2245:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 858,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 862,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1515,
																"src": "2281:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 861,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "2274:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "EmitStatement",
												"src": "2269:25:3"
											}
										]
									},
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:3",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 855,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 854,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 811,
												"src": "2221:13:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:3"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:3"
									},
									"returnParameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:3"
									},
									"scope": 884,
									"src": "2186:115:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "2481:69:3",
										"statements": [
											{
												"expression": {
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 873,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "2491:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 874,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 878,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1515,
																"src": "2530:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 877,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "2521:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 881,
												"nodeType": "EmitStatement",
												"src": "2516:27:3"
											}
										]
									},
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:3",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 883,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 871,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 870,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 819,
												"src": "2470:10:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:3"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:3"
									},
									"returnParameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:3"
									},
									"scope": 884,
									"src": "2433:117:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 885,
							"src": "602:1950:3",
							"usedErrors": [],
							"usedEvents": [
								787,
								792
							]
						}
					],
					"src": "105:2448:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1533
						],
						"ERC20": [
							1399
						],
						"IERC20": [
							1477
						],
						"IERC20Errors": [
							681
						],
						"IERC20Metadata": [
							1503
						]
					},
					"id": 1400,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 886,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 888,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1400,
							"sourceUnit": 1478,
							"src": "131:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 887,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1477,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 890,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1400,
							"sourceUnit": 1504,
							"src": "168:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 889,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1503,
										"src": "176:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 892,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1400,
							"sourceUnit": 1534,
							"src": "232:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 891,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1533,
										"src": "240:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 894,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1400,
							"sourceUnit": 777,
							"src": "281:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 893,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 681,
										"src": "289:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 896,
										"name": "Context",
										"nameLocations": [
											"1133:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1533,
										"src": "1133:7:4"
									},
									"id": 897,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:4"
								},
								{
									"baseName": {
										"id": 898,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1477,
										"src": "1142:6:4"
									},
									"id": 899,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:4"
								},
								{
									"baseName": {
										"id": 900,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1503,
										"src": "1150:14:4"
									},
									"id": 901,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:4"
								},
								{
									"baseName": {
										"id": 902,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 681,
										"src": "1166:12:4"
									},
									"id": 903,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 895,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1399,
							"linearizedBaseContracts": [
								1399,
								681,
								1503,
								1477,
								1533
							],
							"name": "ERC20",
							"nameLocation": "1124:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 907,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1399,
									"src": "1185:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 906,
										"keyName": "account",
										"keyNameLocation": "1201:7:4",
										"keyType": {
											"id": 904,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 905,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 913,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1399,
									"src": "1245:83:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 912,
										"keyName": "account",
										"keyNameLocation": "1261:7:4",
										"keyType": {
											"id": 908,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 911,
											"keyName": "spender",
											"keyNameLocation": "1288:7:4",
											"keyType": {
												"id": 909,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 910,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 915,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1399,
									"src": "1335:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 914,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 917,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1399,
									"src": "1370:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 916,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 919,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1399,
									"src": "1396:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 918,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "1638:57:4",
										"statements": [
											{
												"expression": {
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 927,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "1648:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 928,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "1656:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 930,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:4"
											},
											{
												"expression": {
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 931,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "1671:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 932,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "1681:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 934,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:4"
											}
										]
									},
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 936,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "1594:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 921,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "1615:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 923,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:4"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:4"
									},
									"scope": 1399,
									"src": "1582:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1490
									],
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "1820:29:4",
										"statements": [
											{
												"expression": {
													"id": 942,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 917,
													"src": "1837:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 941,
												"id": 943,
												"nodeType": "Return",
												"src": "1830:12:4"
											}
										]
									},
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:4"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "1805:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 939,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:4"
									},
									"scope": 1399,
									"src": "1760:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1496
									],
									"body": {
										"id": 953,
										"nodeType": "Block",
										"src": "2024:31:4",
										"statements": [
											{
												"expression": {
													"id": 951,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 919,
													"src": "2041:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 950,
												"id": 952,
												"nodeType": "Return",
												"src": "2034:14:4"
											}
										]
									},
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:4"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "2009:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 948,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:4"
									},
									"scope": 1399,
									"src": "1962:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1502
									],
									"body": {
										"id": 962,
										"nodeType": "Block",
										"src": "2744:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 959,
												"id": 961,
												"nodeType": "Return",
												"src": "2754:9:4"
											}
										]
									},
									"documentation": {
										"id": 955,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:4"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "2737:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 957,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:4"
									},
									"scope": 1399,
									"src": "2688:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1426
									],
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "2864:36:4",
										"statements": [
											{
												"expression": {
													"id": 969,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 915,
													"src": "2881:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 968,
												"id": 970,
												"nodeType": "Return",
												"src": "2874:19:4"
											}
										]
									},
									"documentation": {
										"id": 964,
										"nodeType": "StructuredDocumentation",
										"src": "2776:22:4",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "18160ddd",
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2812:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2823:2:4"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "2855:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2854:9:4"
									},
									"scope": 1399,
									"src": "2803:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1434
									],
									"body": {
										"id": 984,
										"nodeType": "Block",
										"src": "3007:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 980,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "3024:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 982,
													"indexExpression": {
														"id": 981,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "3034:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3024:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 979,
												"id": 983,
												"nodeType": "Return",
												"src": "3017:25:4"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "2906:22:4",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "70a08231",
									"id": 985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2942:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2960:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "2952:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:17:4"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "2998:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:9:4"
									},
									"scope": 1399,
									"src": "2933:116:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1444
									],
									"body": {
										"id": 1008,
										"nodeType": "Block",
										"src": "3319:103:4",
										"statements": [
											{
												"assignments": [
													996
												],
												"declarations": [
													{
														"constant": false,
														"id": 996,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3337:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1008,
														"src": "3329:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 995,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3329:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 999,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 997,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1515,
														"src": "3345:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3345:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3329:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1001,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "3377:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1002,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "3384:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "3388:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1000,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "3367:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3367:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1005,
												"nodeType": "ExpressionStatement",
												"src": "3367:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3411:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 994,
												"id": 1007,
												"nodeType": "Return",
												"src": "3404:11:4"
											}
										]
									},
									"documentation": {
										"id": 986,
										"nodeType": "StructuredDocumentation",
										"src": "3055:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 1009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3253:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3270:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "3262:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3262:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3282:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "3274:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:27:4"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "3313:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 992,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3313:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:6:4"
									},
									"scope": 1399,
									"src": "3244:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1454
									],
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "3544:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1019,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "3561:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1021,
														"indexExpression": {
															"id": 1020,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "3573:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3561:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1023,
													"indexExpression": {
														"id": 1022,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "3580:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3561:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1018,
												"id": 1024,
												"nodeType": "Return",
												"src": "3554:34:4"
											}
										]
									},
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "3428:22:4",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "dd62ed3e",
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3464:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3482:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "3474:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3497:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "3489:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:32:4"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "3535:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3534:9:4"
									},
									"scope": 1399,
									"src": "3455:140:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1464
									],
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "3981:107:4",
										"statements": [
											{
												"assignments": [
													1037
												],
												"declarations": [
													{
														"constant": false,
														"id": 1037,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3999:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1049,
														"src": "3991:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1036,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3991:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1040,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1038,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1515,
														"src": "4007:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3991:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1042,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "4038:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1043,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "4045:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1044,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "4054:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1041,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1290,
															1350
														],
														"referencedDeclaration": 1290,
														"src": "4029:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4029:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "4029:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4077:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1035,
												"id": 1048,
												"nodeType": "Return",
												"src": "4070:11:4"
											}
										]
									},
									"documentation": {
										"id": 1027,
										"nodeType": "StructuredDocumentation",
										"src": "3601:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3911:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3927:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "3919:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3944:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "3936:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:32:4"
									},
									"returnParameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "3975:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1033,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3975:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:6:4"
									},
									"scope": 1399,
									"src": "3902:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1476
									],
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "4773:151:4",
										"statements": [
											{
												"assignments": [
													1063
												],
												"declarations": [
													{
														"constant": false,
														"id": 1063,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4791:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1081,
														"src": "4783:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1062,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4783:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1066,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1064,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1515,
														"src": "4801:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4783:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1068,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "4839:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1069,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1063,
															"src": "4845:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1070,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "4854:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1067,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1398,
														"src": "4823:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1072,
												"nodeType": "ExpressionStatement",
												"src": "4823:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1074,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "4880:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1075,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "4886:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1076,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "4890:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1073,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "4870:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1078,
												"nodeType": "ExpressionStatement",
												"src": "4870:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4913:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1061,
												"id": 1080,
												"nodeType": "Return",
												"src": "4906:11:4"
											}
										]
									},
									"documentation": {
										"id": 1051,
										"nodeType": "StructuredDocumentation",
										"src": "4094:581:4",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 1082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4689:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4710:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "4702:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4724:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "4716:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4736:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "4728:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4728:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:41:4"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "4767:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1059,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4767:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4766:6:4"
									},
									"scope": 1399,
									"src": "4680:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1128,
										"nodeType": "Block",
										"src": "5366:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1092,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "5380:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5396:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5388:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1093,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5388:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5388:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5380:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1106,
												"nodeType": "IfStatement",
												"src": "5376:86:4",
												"trueBody": {
													"id": 1105,
													"nodeType": "Block",
													"src": "5400:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1101,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5448:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5440:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1099,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5440:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5440:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1098,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 656,
																	"src": "5421:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5421:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1104,
															"nodeType": "RevertStatement",
															"src": "5414:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1107,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "5475:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5489:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5481:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1108,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5481:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1111,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5481:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5475:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1121,
												"nodeType": "IfStatement",
												"src": "5471:86:4",
												"trueBody": {
													"id": 1120,
													"nodeType": "Block",
													"src": "5493:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1116,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5543:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5535:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1114,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5535:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5535:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1113,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 661,
																	"src": "5514:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5514:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1119,
															"nodeType": "RevertStatement",
															"src": "5507:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1123,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "5574:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1124,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "5580:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1125,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "5584:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1122,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "5566:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5566:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1127,
												"nodeType": "ExpressionStatement",
												"src": "5566:24:4"
											}
										]
									},
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "4930:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5306:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5324:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "5316:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5338:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "5330:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5330:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5350:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "5342:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:41:4"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5366:0:4"
									},
									"scope": 1399,
									"src": "5297:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1205,
										"nodeType": "Block",
										"src": "5987:1032:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1139,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "6001:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1142,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6017:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6009:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1140,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6009:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1143,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6009:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6001:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1176,
													"nodeType": "Block",
													"src": "6175:362:4",
													"statements": [
														{
															"assignments": [
																1151
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1151,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6197:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1176,
																	"src": "6189:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1150,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6189:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1155,
															"initialValue": {
																"baseExpression": {
																	"id": 1152,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "6211:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1154,
																"indexExpression": {
																	"id": 1153,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1132,
																	"src": "6221:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6211:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6189:37:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1156,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "6244:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1157,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1136,
																	"src": "6258:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6244:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1166,
															"nodeType": "IfStatement",
															"src": "6240:115:4",
															"trueBody": {
																"id": 1165,
																"nodeType": "Block",
																"src": "6265:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1160,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1132,
																					"src": "6315:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1161,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1151,
																					"src": "6321:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1162,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1136,
																					"src": "6334:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1159,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 651,
																				"src": "6290:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1163,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6290:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1164,
																		"nodeType": "RevertStatement",
																		"src": "6283:57:4"
																	}
																]
															}
														},
														{
															"id": 1175,
															"nodeType": "UncheckedBlock",
															"src": "6368:159:4",
															"statements": [
																{
																	"expression": {
																		"id": 1173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1167,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 907,
																				"src": "6475:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1169,
																			"indexExpression": {
																				"id": 1168,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1132,
																				"src": "6485:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6475:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1170,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1151,
																				"src": "6493:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1171,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1136,
																				"src": "6507:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6493:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6475:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1174,
																	"nodeType": "ExpressionStatement",
																	"src": "6475:37:4"
																}
															]
														}
													]
												},
												"id": 1177,
												"nodeType": "IfStatement",
												"src": "5997:540:4",
												"trueBody": {
													"id": 1149,
													"nodeType": "Block",
													"src": "6021:148:4",
													"statements": [
														{
															"expression": {
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1145,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "6137:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1146,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1136,
																	"src": "6153:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6137:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1148,
															"nodeType": "ExpressionStatement",
															"src": "6137:21:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1178,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "6551:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1181,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6565:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6557:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1179,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6557:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1182,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6557:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6551:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1197,
													"nodeType": "Block",
													"src": "6766:206:4",
													"statements": [
														{
															"id": 1196,
															"nodeType": "UncheckedBlock",
															"src": "6780:182:4",
															"statements": [
																{
																	"expression": {
																		"id": 1194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1190,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 907,
																				"src": "6925:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1192,
																			"indexExpression": {
																				"id": 1191,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1134,
																				"src": "6935:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6925:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 1193,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1136,
																			"src": "6942:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6925:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1195,
																	"nodeType": "ExpressionStatement",
																	"src": "6925:22:4"
																}
															]
														}
													]
												},
												"id": 1198,
												"nodeType": "IfStatement",
												"src": "6547:425:4",
												"trueBody": {
													"id": 1189,
													"nodeType": "Block",
													"src": "6569:191:4",
													"statements": [
														{
															"id": 1188,
															"nodeType": "UncheckedBlock",
															"src": "6583:167:4",
															"statements": [
																{
																	"expression": {
																		"id": 1186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1184,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "6714:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1185,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1136,
																			"src": "6730:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6714:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1187,
																	"nodeType": "ExpressionStatement",
																	"src": "6714:21:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1200,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "6996:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1201,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "7002:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1202,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "7006:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1199,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1411,
														"src": "6987:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6987:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1204,
												"nodeType": "EmitStatement",
												"src": "6982:30:4"
											}
										]
									},
									"documentation": {
										"id": 1130,
										"nodeType": "StructuredDocumentation",
										"src": "5603:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 1206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5921:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5937:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "5929:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5929:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5951:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "5943:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5943:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5963:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "5955:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5928:41:4"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5987:0:4"
									},
									"scope": 1399,
									"src": "5912:1107:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1238,
										"nodeType": "Block",
										"src": "7418:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1214,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1209,
														"src": "7432:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1217,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7451:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7443:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1215,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7443:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1218,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7443:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7432:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1228,
												"nodeType": "IfStatement",
												"src": "7428:91:4",
												"trueBody": {
													"id": 1227,
													"nodeType": "Block",
													"src": "7455:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1223,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7505:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7497:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1221,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7497:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7497:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1220,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 661,
																	"src": "7476:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7476:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1226,
															"nodeType": "RevertStatement",
															"src": "7469:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7544:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1231,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7536:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1230,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7536:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7536:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1234,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "7548:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1235,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "7557:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1229,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "7528:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7528:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1237,
												"nodeType": "ExpressionStatement",
												"src": "7528:35:4"
											}
										]
									},
									"documentation": {
										"id": 1207,
										"nodeType": "StructuredDocumentation",
										"src": "7025:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7371:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7385:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "7377:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7402:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "7394:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7394:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:32:4"
									},
									"returnParameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7418:0:4"
									},
									"scope": 1399,
									"src": "7362:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1271,
										"nodeType": "Block",
										"src": "7944:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1247,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "7958:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1250,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7977:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7969:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1248,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7969:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1251,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7969:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7958:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1261,
												"nodeType": "IfStatement",
												"src": "7954:89:4",
												"trueBody": {
													"id": 1260,
													"nodeType": "Block",
													"src": "7981:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1256,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8029:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1255,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8021:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1254,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8021:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8021:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1253,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 656,
																	"src": "8002:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8002:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1259,
															"nodeType": "RevertStatement",
															"src": "7995:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1263,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "8060:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8077:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1265,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8069:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1264,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8069:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8069:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1268,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "8081:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1262,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "8052:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8052:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1270,
												"nodeType": "ExpressionStatement",
												"src": "8052:35:4"
											}
										]
									},
									"documentation": {
										"id": 1240,
										"nodeType": "StructuredDocumentation",
										"src": "7576:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7897:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7911:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "7903:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7903:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7928:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "7920:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7920:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7902:32:4"
									},
									"returnParameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7944:0:4"
									},
									"scope": 1399,
									"src": "7888:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1289,
										"nodeType": "Block",
										"src": "8704:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1283,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "8723:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1284,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "8730:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1285,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1279,
															"src": "8739:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8746:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1282,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1290,
															1350
														],
														"referencedDeclaration": 1350,
														"src": "8714:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8714:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1288,
												"nodeType": "ExpressionStatement",
												"src": "8714:37:4"
											}
										]
									},
									"documentation": {
										"id": 1273,
										"nodeType": "StructuredDocumentation",
										"src": "8100:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8656:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "8648:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8648:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8671:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "8663:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8663:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8688:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "8680:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8680:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8647:47:4"
									},
									"returnParameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8704:0:4"
									},
									"scope": 1399,
									"src": "8630:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1349,
										"nodeType": "Block",
										"src": "9703:334:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1302,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1293,
														"src": "9717:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9734:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9726:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1303,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9726:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1306,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9726:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9717:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1316,
												"nodeType": "IfStatement",
												"src": "9713:89:4",
												"trueBody": {
													"id": 1315,
													"nodeType": "Block",
													"src": "9738:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1311,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9788:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1310,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9780:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1309,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9780:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9780:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1308,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "9759:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9759:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1314,
															"nodeType": "RevertStatement",
															"src": "9752:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1317,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1295,
														"src": "9815:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9834:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9826:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1318,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9826:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1321,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9826:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9815:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1331,
												"nodeType": "IfStatement",
												"src": "9811:90:4",
												"trueBody": {
													"id": 1330,
													"nodeType": "Block",
													"src": "9838:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1326,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9887:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9879:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1324,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9879:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9879:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1323,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 680,
																	"src": "9859:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9859:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1329,
															"nodeType": "RevertStatement",
															"src": "9852:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1332,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "9910:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1335,
															"indexExpression": {
																"id": 1333,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1293,
																"src": "9922:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9910:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1336,
														"indexExpression": {
															"id": 1334,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "9929:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9910:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1337,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "9940:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9910:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1339,
												"nodeType": "ExpressionStatement",
												"src": "9910:35:4"
											},
											{
												"condition": {
													"id": 1340,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1299,
													"src": "9959:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1348,
												"nodeType": "IfStatement",
												"src": "9955:76:4",
												"trueBody": {
													"id": 1347,
													"nodeType": "Block",
													"src": "9970:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1342,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1293,
																		"src": "9998:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1343,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1295,
																		"src": "10005:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1344,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1297,
																		"src": "10014:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1341,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1420,
																	"src": "9989:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9989:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1346,
															"nodeType": "EmitStatement",
															"src": "9984:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1291,
										"nodeType": "StructuredDocumentation",
										"src": "8764:836:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9614:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9631:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "9623:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9623:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9646:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "9638:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9638:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9663:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "9655:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9655:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9675:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "9670:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1298,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9670:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9622:63:4"
									},
									"returnParameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9703:0:4"
									},
									"scope": 1399,
									"src": "9605:432:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1397,
										"nodeType": "Block",
										"src": "10408:387:4",
										"statements": [
											{
												"assignments": [
													1361
												],
												"declarations": [
													{
														"constant": false,
														"id": 1361,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10426:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1397,
														"src": "10418:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1360,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10418:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1366,
												"initialValue": {
													"arguments": [
														{
															"id": 1363,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "10455:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1364,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "10462:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1362,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "10445:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10445:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10418:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1367,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "10484:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10508:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1369,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10508:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1368,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10503:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10503:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1372,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10517:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10503:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10484:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1396,
												"nodeType": "IfStatement",
												"src": "10480:309:4",
												"trueBody": {
													"id": 1395,
													"nodeType": "Block",
													"src": "10522:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1374,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1361,
																	"src": "10540:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1375,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1357,
																	"src": "10559:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10540:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1384,
															"nodeType": "IfStatement",
															"src": "10536:130:4",
															"trueBody": {
																"id": 1383,
																"nodeType": "Block",
																"src": "10566:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1378,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1355,
																					"src": "10618:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1379,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1361,
																					"src": "10627:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1380,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1357,
																					"src": "10645:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1377,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 670,
																				"src": "10591:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10591:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1382,
																		"nodeType": "RevertStatement",
																		"src": "10584:67:4"
																	}
																]
															}
														},
														{
															"id": 1394,
															"nodeType": "UncheckedBlock",
															"src": "10679:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1386,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1353,
																				"src": "10716:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1387,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1355,
																				"src": "10723:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1390,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1388,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1361,
																					"src": "10732:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1389,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1357,
																					"src": "10751:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10732:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1391,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10758:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1385,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1290,
																				1350
																			],
																			"referencedDeclaration": 1350,
																			"src": "10707:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10707:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1393,
																	"nodeType": "ExpressionStatement",
																	"src": "10707:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "10043:271:4",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10328:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10352:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "10344:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10344:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10367:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "10359:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10359:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10384:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "10376:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10376:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10343:47:4"
									},
									"returnParameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10408:0:4"
									},
									"scope": 1399,
									"src": "10319:476:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1400,
							"src": "1106:9691:4",
							"usedErrors": [
								651,
								656,
								661,
								670,
								675,
								680
							],
							"usedEvents": [
								1411,
								1420
							]
						}
					],
					"src": "105:10693:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1477
						]
					},
					"id": 1478,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1401,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1402,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1477,
							"linearizedBaseContracts": [
								1477
							],
							"name": "IERC20",
							"nameLocation": "215:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1403,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1411,
									"name": "Transfer",
									"nameLocation": "397:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "406:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "428:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1409,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "448:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:5"
									},
									"src": "391:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1412,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1420,
									"name": "Approval",
									"nameLocation": "628:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1414,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "637:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1416,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "660:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "685:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:5"
									},
									"src": "622:78:5"
								},
								{
									"documentation": {
										"id": 1421,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1426,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:5"
									},
									"returnParameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "822:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:5"
									},
									"scope": 1477,
									"src": "776:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1427,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1434,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "932:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:5"
									},
									"returnParameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "972:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:5"
									},
									"scope": 1477,
									"src": "913:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1435,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1444,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "1223:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "1235:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:5"
									},
									"returnParameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "1268:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1441,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:5"
									},
									"scope": 1477,
									"src": "1205:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1445,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1454,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "1568:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "1583:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:5"
									},
									"returnParameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "1623:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:5"
									},
									"scope": 1477,
									"src": "1549:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1455,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1464,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "2327:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "2344:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:5"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "2377:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1461,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:5"
									},
									"scope": 1477,
									"src": "2310:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1465,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1476,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "2713:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "2727:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "2739:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:5"
									},
									"returnParameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "2772:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1473,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:5"
									},
									"scope": 1477,
									"src": "2691:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1478,
							"src": "205:2575:5",
							"usedErrors": [],
							"usedEvents": [
								1411,
								1420
							]
						}
					],
					"src": "106:2675:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1477
						],
						"IERC20Metadata": [
							1503
						]
					},
					"id": 1504,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1479,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1481,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1504,
							"sourceUnit": 1478,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1480,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1477,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1483,
										"name": "IERC20",
										"nameLocations": [
											"306:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1477,
										"src": "306:6:6"
									},
									"id": 1484,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1482,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:6",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1503,
							"linearizedBaseContracts": [
								1503,
								1477
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1485,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1490,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:6"
									},
									"returnParameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "417:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1487,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:6"
									},
									"scope": 1503,
									"src": "378:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1491,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1496,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:6"
									},
									"returnParameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "540:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1493,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:6"
									},
									"scope": 1503,
									"src": "499:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1497,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1502,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:6"
									},
									"returnParameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "674:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1499,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:6"
									},
									"scope": 1503,
									"src": "631:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1504,
							"src": "278:405:6",
							"usedErrors": [],
							"usedEvents": [
								1411,
								1420
							]
						}
					],
					"src": "125:559:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1533
						]
					},
					"id": 1534,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1505,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1506,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1533,
							"linearizedBaseContracts": [
								1533
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1514,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1511,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1510,
												"id": 1513,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1533,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1523,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1520,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1519,
												"id": 1522,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1517,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1533,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1531,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1529,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1528,
												"id": 1530,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1533,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1534,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			}
		}
	}
}